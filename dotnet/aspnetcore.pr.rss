<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>dotnet/aspnetcore Pull Requests</title>
    <description>Pull Requests from https://github.com/dotnet/aspnetcore, generated by https://github.com/meziantou/IssuesToRss/</description>
    <managingEditor>meziantousite@outlook.com</managingEditor>
    <ttl>60</ttl>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44145</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44145</link>
      <title>PR: Retry template tests on helix - @HaoK</title>
      <description />
      <pubDate>Fri, 23 Sep 2022 16:36:56 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44144</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44144</link>
      <title>PR: fix dotnet#43523 HttpSys Content-Length and Transfer-Encoding conflicts - @FatTigerWang</title>
      <description>&lt;h1&gt;fix #43523 HttpSys Content-Length and Transfer-Encoding conflicts&lt;/h1&gt;
&lt;!-- Thank you for submitting a pull request to our repo. --&gt;
&lt;!-- If this is your first PR in the ASP.NET Core repo, please run through the checklist
below to ensure a smooth review and merge process for your PR. --&gt;
&lt;ul&gt;
&lt;li&gt;[x] You've read the &lt;a href="https://github.com/dotnet/aspnetcore/blob/main/CONTRIBUTING.md"&gt;Contributor Guide&lt;/a&gt; and &lt;a href="https://github.com/dotnet/aspnetcore/blob/main/CODE-OF-CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[x] You've included unit or integration tests for your change, where applicable.&lt;/li&gt;
&lt;li&gt;[x] You've included inline docs for your change, where applicable.&lt;/li&gt;
&lt;li&gt;[x] There's an open issue for the PR that you are making. If you'd like to propose a new feature or change, please open an issue to discuss the change or find an existing issue.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- Once all that is done, you're ready to go. Open the PR with the content below. --&gt;
&lt;p&gt;Summary of the changes (Less than 80 chars)&lt;/p&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Fixes #43523 HttpSys Content-Length and Transfer-Encoding conflicts&lt;/p&gt;
</description>
      <pubDate>Fri, 23 Sep 2022 14:38:11 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44142</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44142</link>
      <title>PR: Add comment to WebAssembly empty template about scoped CSS. Fixes #43975 - @SteveSandersonMS</title>
      <description>&lt;h1&gt;Add comment to WebAssembly empty template about scoped CSS&lt;/h1&gt;
&lt;p&gt;Adds a comment showing how to reference scoped CSS.&lt;/p&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;The new &amp;quot;empty&amp;quot; Blazor WebAssembly template doesn't contain any scoped CSS by default, and hence doesn't reference the scoped CSS bundle because there isn't one. When a developer later adds scoped CSS, they need to reference the bundle which is difficult to figure out how to do. This comment gives them the code they need.&lt;/p&gt;
&lt;p&gt;Fixes #43975&lt;/p&gt;
&lt;h2&gt;Customer Impact&lt;/h2&gt;
&lt;p&gt;Without this change, it's very difficult to work out how to make scoped CSS work. You have to figure out the correct form of the generated filename based on your project name.&lt;/p&gt;
&lt;h2&gt;Regression?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] Yes&lt;/li&gt;
&lt;li&gt;[x] No (empty template is new in 7.0)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Risk&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] High&lt;/li&gt;
&lt;li&gt;[ ] Medium&lt;/li&gt;
&lt;li&gt;[x] Low&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Just adding a comment to a template.&lt;/p&gt;
&lt;h2&gt;Verification&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] Manual (required)&lt;/li&gt;
&lt;li&gt;[ ] Automated&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Packaging changes reviewed?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] Yes&lt;/li&gt;
&lt;li&gt;[ ] No&lt;/li&gt;
&lt;li&gt;[x] N/A&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Fri, 23 Sep 2022 11:36:12 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44137</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44137</link>
      <title>PR: Retry template tests due to current publish flakiness - @HaoK</title>
      <description />
      <pubDate>Fri, 23 Sep 2022 00:02:46 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44136</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44136</link>
      <title>PR: Fix up packaging for Extensions.ApiDescription.Server - @captainsafia</title>
      <description>&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;This change fixes up the package of dependencies for the &lt;code&gt;dotnet-getdocument&lt;/code&gt; tool to enable changes that were made to support minimal APIs in .NET 7.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Publish &lt;code&gt;GetDocument.Insider&lt;/code&gt; dependency  for all .NET Core TFMs&lt;/li&gt;
&lt;li&gt;Use targeted referenced to shared runtime dependencies in &lt;code&gt;GetDocument.Insider&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add .NET 7 outputs to &lt;code&gt;ApiDescription.Server&lt;/code&gt; package.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fixes https://github.com/dotnet/aspnetcore/issues/44119&lt;/p&gt;
&lt;h2&gt;Customer Impact&lt;/h2&gt;
&lt;p&gt;Without this bug fix, customers are not able to leverage client generation for ASP.NET apps in Visual Studio for .NET 7 applications. There are no accessible workarounds for this bug.&lt;/p&gt;
&lt;h2&gt;Regression?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[X] Yes&lt;/li&gt;
&lt;li&gt;[ ] No&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Regression from .NET 7 RC 1. The bug is present in .NET 7 RC 2 and this PR is targeting .NET 7 RC2.&lt;/p&gt;
&lt;h2&gt;Risk&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] High&lt;/li&gt;
&lt;li&gt;[ ] Medium&lt;/li&gt;
&lt;li&gt;[X] Low&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Change is localized to &lt;code&gt;Extensions.ApiDescription.Server&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Verification&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[X] Manual (required)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Manual validation was completed by adding a reference to the local package output directory &lt;code&gt;aspnetcore\artifacts\packages\Debug\Shipping&lt;/code&gt; and using the &lt;code&gt;7.0.0-dev&lt;/code&gt; version of the &lt;code&gt;Microsoft.Extensions.ApiDescription.Server&lt;/code&gt; package in a sample project.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;Project Sdk=&amp;quot;Microsoft.NET.Sdk.Web&amp;quot;&amp;gt;

  &amp;lt;PropertyGroup&amp;gt;
    &amp;lt;TargetFramework&amp;gt;net7.0&amp;lt;/TargetFramework&amp;gt;
    &amp;lt;Nullable&amp;gt;enable&amp;lt;/Nullable&amp;gt;
    &amp;lt;ImplicitUsings&amp;gt;enable&amp;lt;/ImplicitUsings&amp;gt;
    &amp;lt;OpenApiGenerateDocumentsOnBuild&amp;gt;true&amp;lt;/OpenApiGenerateDocumentsOnBuild&amp;gt;
  &amp;lt;/PropertyGroup&amp;gt;

  &amp;lt;ItemGroup&amp;gt;
    &amp;lt;PackageReference Include=&amp;quot;Swashbuckle.AspNetCore&amp;quot; Version=&amp;quot;6.4.0&amp;quot; /&amp;gt;
    &amp;lt;PackageReference Include=&amp;quot;Microsoft.Extensions.ApiDescription.Server&amp;quot; Version=&amp;quot;7.0.0-dev&amp;quot; PrivateAssets=&amp;quot;all&amp;quot; /&amp;gt;
    &amp;lt;PackageReference Include=&amp;quot;Microsoft.AspNetCore.OpenApi&amp;quot; Version=&amp;quot;7.0.0-*&amp;quot; PrivateAssets=&amp;quot;all&amp;quot; /&amp;gt;
  &amp;lt;/ItemGroup&amp;gt;

&amp;lt;/Project&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;[ ] Automated&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Packaging changes reviewed?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[X] Yes&lt;/li&gt;
&lt;li&gt;[ ] No&lt;/li&gt;
&lt;li&gt;[ ] N/A&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 23:45:41 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44134</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44134</link>
      <title>PR: [release/7.0] Update spa-templates to ref new 7.0 branch - @dougbu</title>
      <description>&lt;h1&gt;[release/7.0] Update spa-templates to ref new 7.0 branch&lt;/h1&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;just created release/7.0 in dotnet/spa-templates
&lt;ul&gt;
&lt;li&gt;use it here to enable main in spa-templates to get new branding&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;also use latest commit from spa-templates&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Contains a fix for &lt;a href="https://dev.azure.com/ceapex/CEINTL/_workitems/edit/710128"&gt;[C&amp;amp;AI Translation Feedback] - ASP.NET Core incomplete German translation&lt;/a&gt;. #43956 brings in fixes for the templates in dotnat/aspnetcore for that bug too (more on that when that loc handback PR is in main and ready for backporting).&lt;/p&gt;
&lt;h2&gt;Customer Impact&lt;/h2&gt;
&lt;p&gt;Without this fix, customer would see &lt;code&gt;Target net7.0&lt;/code&gt; instead of &lt;code&gt;Ziel net7.0&lt;/code&gt; when in a German locale and using one of the templates from Microsoft.DotNet.Web.Spa.ProjectTemplates.7.0.&lt;/p&gt;
&lt;h2&gt;Regression?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] Yes&lt;/li&gt;
&lt;li&gt;[x] No&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Microsoft.DotNet.Web.Spa.ProjectTemplates.6.0 only had translations for the name and description of the two templates from dotnet/spa-templates. This change here completes filling that gap.&lt;/p&gt;
&lt;h2&gt;Risk&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] High&lt;/li&gt;
&lt;li&gt;[ ] Medium&lt;/li&gt;
&lt;li&gt;[x] Low&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One-word changes in existing language-specific files &lt;/p&gt;
&lt;h2&gt;Verification&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] Manual (required)&lt;/li&gt;
&lt;li&gt;[ ] Automated&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Packaging changes reviewed?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] Yes&lt;/li&gt;
&lt;li&gt;[ ] No&lt;/li&gt;
&lt;li&gt;[x] N/A&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 22:37:47 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44129</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44129</link>
      <title>PR: Fix up packaging for Extensions.ApiDescription.Server - @captainsafia</title>
      <description>&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;This change fixes up the package of dependencies for the &lt;code&gt;dotnet-getdocument&lt;/code&gt; tool to enable changes that were made to support minimal APIs in .NET 7.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Publish &lt;code&gt;GetDocument.Insider&lt;/code&gt; dependency  for all .NET Core TFMs&lt;/li&gt;
&lt;li&gt;Use targeted referenced to shared runtime dependencies in &lt;code&gt;GetDocument.Insider&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add .NET 7 outputs to &lt;code&gt;ApiDescription.Server&lt;/code&gt; package.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fixes https://github.com/dotnet/aspnetcore/issues/44119&lt;/p&gt;
&lt;h2&gt;Customer Impact&lt;/h2&gt;
&lt;p&gt;Without this bug fix, customers are not able to leverage client generation for ASP.NET apps in Visual Studio for .NET 7 applications. There are no accessible workarounds for this bug.&lt;/p&gt;
&lt;h2&gt;Regression?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[X] Yes&lt;/li&gt;
&lt;li&gt;[ ] No&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Regression from .NET 7 RC 1. The bug is present in .NET 7 RC 2 and this PR is targeting .NET 7 GA.&lt;/p&gt;
&lt;h2&gt;Risk&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] High&lt;/li&gt;
&lt;li&gt;[ ] Medium&lt;/li&gt;
&lt;li&gt;[X] Low&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Change is localized to &lt;code&gt;Extensions.ApiDescription.Server&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Verification&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[X] Manual (required)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Manual validation was completed by adding a reference to the local package output directory &lt;code&gt;aspnetcore\artifacts\packages\Debug\Shipping&lt;/code&gt; and using the &lt;code&gt;7.0.0-dev&lt;/code&gt; version of the &lt;code&gt;Microsoft.Extensions.ApiDescription.Server&lt;/code&gt; package in a sample project.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;Project Sdk=&amp;quot;Microsoft.NET.Sdk.Web&amp;quot;&amp;gt;

  &amp;lt;PropertyGroup&amp;gt;
    &amp;lt;TargetFramework&amp;gt;net7.0&amp;lt;/TargetFramework&amp;gt;
    &amp;lt;Nullable&amp;gt;enable&amp;lt;/Nullable&amp;gt;
    &amp;lt;ImplicitUsings&amp;gt;enable&amp;lt;/ImplicitUsings&amp;gt;
    &amp;lt;OpenApiGenerateDocumentsOnBuild&amp;gt;true&amp;lt;/OpenApiGenerateDocumentsOnBuild&amp;gt;
  &amp;lt;/PropertyGroup&amp;gt;

  &amp;lt;ItemGroup&amp;gt;
    &amp;lt;PackageReference Include=&amp;quot;Swashbuckle.AspNetCore&amp;quot; Version=&amp;quot;6.4.0&amp;quot; /&amp;gt;
    &amp;lt;PackageReference Include=&amp;quot;Microsoft.Extensions.ApiDescription.Server&amp;quot; Version=&amp;quot;7.0.0-dev&amp;quot; PrivateAssets=&amp;quot;all&amp;quot; /&amp;gt;
    &amp;lt;PackageReference Include=&amp;quot;Microsoft.AspNetCore.OpenApi&amp;quot; Version=&amp;quot;7.0.0-*&amp;quot; PrivateAssets=&amp;quot;all&amp;quot; /&amp;gt;
  &amp;lt;/ItemGroup&amp;gt;

&amp;lt;/Project&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;[ ] Automated&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Packaging changes reviewed?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[X] Yes&lt;/li&gt;
&lt;li&gt;[ ] No&lt;/li&gt;
&lt;li&gt;[ ] N/A&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 20:28:44 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44127</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44127</link>
      <title>PR: Update BuildFromSource docs to be more scenario focused - @captainsafia</title>
      <description>&lt;p&gt;A follow-up to the long-neglected https://github.com/dotnet/aspnetcore/pull/37362. I addressed the feedback that was left on the original PR and unified all of the changes into a single file (the previous PR split some things up across multiple files).&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 18:02:15 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44126</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44126</link>
      <title>PR: Unquarantine IIS tests affected by reverted dispose fix  - @HaoK</title>
      <description>&lt;p&gt;These 4 were IIS functional tests that were impacted by the http client dispose change that has been rolled back, they haven't failed since&lt;/p&gt;
&lt;p&gt;For https://github.com/dotnet/aspnetcore/issues/42820 https://github.com/dotnet/aspnetcore/issues/43087 https://github.com/dotnet/aspnetcore/issues/42913 https://github.com/dotnet/aspnetcore/issues/42658&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 17:19:10 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44123</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44123</link>
      <title>PR: Add header dictionary analyzer and fixer - @JamesNK</title>
      <description>&lt;p&gt;Fixes https://github.com/dotnet/aspnetcore/issues/44116&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/303201/191756207-c3ad4f3a-2be6-4b0b-a5fb-44902b359265.png" alt="image" /&gt;&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 13:13:19 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44121</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44121</link>
      <title>PR: [release/7.0] Fix item template `groupIdentity` and `identity` values - @dougbu</title>
      <description>&lt;h1&gt;[release/7.0] Fix item template &lt;code&gt;groupIdentity&lt;/code&gt; and &lt;code&gt;identity&lt;/code&gt; values&lt;/h1&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;give these templates release-specific &lt;code&gt;identity&lt;/code&gt;s; some matched what we had in 6.0.x&lt;/li&gt;
&lt;li&gt;in &lt;code&gt;protobuf&lt;/code&gt; template, start from 44483c367545 i.e. fix its &lt;code&gt;groupIdentity&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;then, update the &lt;code&gt;identity&lt;/code&gt; to use &lt;code&gt;.7.0&lt;/code&gt; instead of &lt;code&gt;.6.0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fixes - #44095&lt;/p&gt;
&lt;h2&gt;Customer Impact&lt;/h2&gt;
&lt;p&gt;Without this fix, customer would see duplicates in &lt;code&gt;dotnet new --list&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;identity&lt;/code&gt; uniqueness is essentially defence-in-depth, ensuring the latest content is shown to users.&lt;/p&gt;
&lt;h2&gt;Regression?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] Yes&lt;/li&gt;
&lt;li&gt;[ ] No&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Regression from having only 6.0.x and earlier templates installed. Problem arises because 7.0.x &lt;code&gt;protobuf&lt;/code&gt; template does not have the same &lt;code&gt;groupIdentity&lt;/code&gt; as in previous releases.&lt;/p&gt;
&lt;h2&gt;Risk&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] High&lt;/li&gt;
&lt;li&gt;[ ] Medium&lt;/li&gt;
&lt;li&gt;[x] Low&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Small changes to template metadata that are similar to 44483c367545 and what we did w/ &lt;code&gt;identity&lt;/code&gt; in previous releases.&lt;/p&gt;
&lt;h2&gt;Verification&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] Manual (required)&lt;/li&gt;
&lt;li&gt;[ ] Automated&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Packaging changes reviewed?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] Yes&lt;/li&gt;
&lt;li&gt;[ ] No&lt;/li&gt;
&lt;li&gt;[x] N/A&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 05:04:15 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44120</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44120</link>
      <title>PR: [release/7.0-rc2] Fix item template `groupIdentity` and `identity` values - @dougbu</title>
      <description>&lt;h1&gt;[release/7.0-rc2] Fix item template &lt;code&gt;groupIdentity&lt;/code&gt; and &lt;code&gt;identity&lt;/code&gt; values&lt;/h1&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;give these templates release-specific &lt;code&gt;identity&lt;/code&gt;s; some matched what we had in 6.0.x&lt;/li&gt;
&lt;li&gt;in &lt;code&gt;protobuf&lt;/code&gt; template, start from 44483c367545 i.e. fix its &lt;code&gt;groupIdentity&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;then, update the &lt;code&gt;identity&lt;/code&gt; to use &lt;code&gt;.7.0&lt;/code&gt; instead of &lt;code&gt;.6.0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fixes - #44095&lt;/p&gt;
&lt;h2&gt;Customer Impact&lt;/h2&gt;
&lt;p&gt;Without this fix, customer would see duplicates in &lt;code&gt;dotnet new --list&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;identity&lt;/code&gt; uniqueness is essentially defence-in-depth, ensuring the latest content is shown to users.&lt;/p&gt;
&lt;h2&gt;Regression?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] Yes&lt;/li&gt;
&lt;li&gt;[ ] No&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Regression from having only 6.0.x and earlier templates installed. Problem arises because 7.0.x &lt;code&gt;protobuf&lt;/code&gt; template does not have the same &lt;code&gt;groupIdentity&lt;/code&gt; as in previous releases.&lt;/p&gt;
&lt;h2&gt;Risk&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] High&lt;/li&gt;
&lt;li&gt;[ ] Medium&lt;/li&gt;
&lt;li&gt;[x] Low&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Small changes to template metadata that are similar to 44483c367545 and what we did w/ &lt;code&gt;identity&lt;/code&gt; in previous releases.&lt;/p&gt;
&lt;h2&gt;Verification&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] Manual (required)&lt;/li&gt;
&lt;li&gt;[ ] Automated&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Packaging changes reviewed?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] Yes&lt;/li&gt;
&lt;li&gt;[ ] No&lt;/li&gt;
&lt;li&gt;[x] N/A&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 05:04:07 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44118</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44118</link>
      <title>PR: Try Win11 arm queue - @HaoK</title>
      <description />
      <pubDate>Thu, 22 Sep 2022 02:48:47 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44117</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44117</link>
      <title>PR: Try Silicon arm helix queue - @HaoK</title>
      <description />
      <pubDate>Thu, 22 Sep 2022 02:34:25 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44107</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44107</link>
      <title>PR: refactor: use grep -E/-F instead of fgrep/egrep - @kxxt</title>
      <description>&lt;h1&gt;refactor: use grep -E/-F instead of fgrep/egrep&lt;/h1&gt;
&lt;!-- Thank you for submitting a pull request to our repo. --&gt;
&lt;!-- If this is your first PR in the ASP.NET Core repo, please run through the checklist
below to ensure a smooth review and merge process for your PR. --&gt;
&lt;ul&gt;
&lt;li&gt;[x] You've read the &lt;a href="https://github.com/dotnet/aspnetcore/blob/main/CONTRIBUTING.md"&gt;Contributor Guide&lt;/a&gt; and &lt;a href="https://github.com/dotnet/aspnetcore/blob/main/CODE-OF-CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[x] You've included unit or integration tests for your change, where applicable.&lt;/li&gt;
&lt;li&gt;[x] You've included inline docs for your change, where applicable.&lt;/li&gt;
&lt;li&gt;[x] There's an open issue for the PR that you are making. If you'd like to propose a new feature or change, please open an issue to discuss the change or find an existing issue.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- Once all that is done, you're ready to go. Open the PR with the content below. --&gt;
&lt;p&gt;Summary of the changes (Less than 80 chars)&lt;/p&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;egrep&lt;/code&gt; and &lt;code&gt;fgrep&lt;/code&gt; are obsolescent now. This PR updates  all &lt;code&gt;egrep&lt;/code&gt; and &lt;code&gt;fgrep&lt;/code&gt; commands to &lt;code&gt;grep -E&lt;/code&gt; and &lt;code&gt;grep -F&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Running egrep/fgrep command with grep v3.8 will output the following warning to stderr:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;egrep: warning: egrep is obsolescent; using grep -E
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;see also:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://www.phoronix.com/news/GNU-Grep-3.8-Stop-egrep-fgrep&lt;/li&gt;
&lt;li&gt;https://lists.gnu.org/archive/html/info-gnu/2022-09/msg00001.html&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fixes #44106&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 11:00:50 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44099</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44099</link>
      <title>PR: Implement OwinEnvironment.CopyTo and add Tests - Fixes #44082 - @CZEMacLeod</title>
      <description>&lt;h1&gt;Implement OwinEnvironment.CopyTo and add Tests - Fixes #44082&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;[x] You've read the &lt;a href="https://github.com/dotnet/aspnetcore/blob/main/CONTRIBUTING.md"&gt;Contributor Guide&lt;/a&gt; and &lt;a href="https://github.com/dotnet/aspnetcore/blob/main/CODE-OF-CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[x] You've included unit or integration tests for your change, where applicable.&lt;/li&gt;
&lt;li&gt;[x] You've included inline docs for your change, where applicable.&lt;/li&gt;
&lt;li&gt;[x] There's an open issue for the PR that you are making. If you'd like to propose a new feature or change, please open an issue to discuss the change or find an existing issue.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Add an implementation of &lt;code&gt;ICollection&amp;lt;KeyValuePair&amp;lt;string, object&amp;gt;&amp;gt;.CopyTo&lt;/code&gt; to &lt;code&gt;OwinEnvironment&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;OwinEnvironment has a &lt;code&gt;throw new NotImplementedException();&lt;/code&gt; for this method which caused an issue with some Linq methods. This caused an issue when trying to use the &lt;code&gt;Microsoft.Owin.Diagnostics&lt;/code&gt; package's &lt;code&gt;UseErrorPage&lt;/code&gt; for example.&lt;/p&gt;
&lt;p&gt;The implementation copies the code from &lt;code&gt;GetEnumerator&lt;/code&gt;, and includes the appropriate exceptions per https://learn.microsoft.com/en-us/dotnet/api/system.collections.generic.icollection-1.copyto?view=net-6.0
There is a 'simpler' implementation which just delegates the main implementation of getting the &lt;code&gt;KeyValuePair&lt;/code&gt;s, but this would result in allocating the enumerator/iterator which seems like a waste of memory.&lt;/p&gt;
&lt;p&gt;There are tests&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;OwinEnvironmentImplementsCopyTo&lt;/code&gt; - Check that the function works for a valid target array and that all the error conditions throw an exception.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OwinEnvironmentSupportsLinq&lt;/code&gt; - Check that &lt;code&gt;OwinEnvironment&lt;/code&gt; supports the Linq method &lt;code&gt;OrderBy&lt;/code&gt; which is how the issue was originally discovered.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fixes #44082&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 20:47:35 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44096</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44096</link>
      <title>PR: Use perfect-hash in HttpUriScheme.GetKnownMethod(string) instead of trie - @gfoidl</title>
      <description>&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;In &lt;code&gt;HttpUtilities.GetKnownMethod(string value)&lt;/code&gt; a &lt;a href="https://github.com/dotnet/aspnetcore/blob/ce2db7ea0b161fc5eb35710fca6feeafeeac37bc/src/Servers/Kestrel/Core/src/Internal/Infrastructure/HttpUtilities.cs#L248-L298"&gt;trie based approach&lt;/a&gt; is used.&lt;/p&gt;
&lt;p&gt;Recently I stumbled accross &lt;a href="http://0x80.pl/notesen/2022-01-29-http-verb-parse.html"&gt;Fast parsing HTTP verbs&lt;/a&gt; from &lt;a href="https://github.com/WojciechMula"&gt;Wojciech Muła&lt;/a&gt; and gave it a try.
The approach uses &lt;a href="https://www.gnu.org/software/gperf/manual/gperf.html"&gt;gperf -- Perfect Hash Function Generator&lt;/a&gt; to generate a &lt;em&gt;perfect hash function&lt;/em&gt; which computes / looks up a key which can be used to get the known HTTP-method.&lt;/p&gt;
&lt;h2&gt;Benchmark results&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;|  Method |  Method |     Mean | Ratio |
|-------- |-------- |---------:|------:|
| Default | CONNECT | 4.788 ns |  1.00 |
|      PR | CONNECT | 1.889 ns |  0.39 |
|         |         |          |       |
| Default |  DELETE | 4.293 ns |  1.00 |
|      PR |  DELETE | 2.009 ns |  0.47 |
|         |         |          |       |
| Default |     GET | 3.526 ns |  1.00 |
|      PR |     GET | 1.935 ns |  0.55 |
|         |         |          |       |
| Default |    HEAD | 3.983 ns |  1.00 |
|      PR |    HEAD | 1.979 ns |  0.51 |
|         |         |          |       |
| Default | OPTIONS | 4.789 ns |  1.00 |
|      PR | OPTIONS | 1.960 ns |  0.40 |
|         |         |          |       |
| Default |   PATCH | 4.778 ns |  1.00 |
|      PR |   PATCH | 2.206 ns |  0.46 |
|         |         |          |       |
| Default |    POST | 4.584 ns |  1.00 |
|      PR |    POST | 1.873 ns |  0.41 |
|         |         |          |       |
| Default |     PRI | 7.030 ns |  1.00 |
|      PR |     PRI | 4.799 ns |  0.68 |
|         |         |          |       |
| Default |     PUT | 4.156 ns |  1.00 |
|      PR |     PUT | 1.916 ns |  0.46 |
|         |         |          |       |
| Default |   TRACE | 4.372 ns |  1.00 |
|      PR |   TRACE | 1.951 ns |  0.45 |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(I ran the benchmark several times to verify that the numbers are correct. I didn't believe in the first runs :wink: ... it's less code, traded with lookups)&lt;/p&gt;
&lt;h3&gt;Additional notes for gperf&lt;/h3&gt;
&lt;p&gt;As the lookup table isn't intuitive here the steps needed to create it.&lt;/p&gt;
&lt;p&gt;Version of gperf: 3.1&lt;/p&gt;
&lt;p&gt;File &lt;code&gt;knownverbs.txt&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CONNECT
DELETE
GET
HEAD
OPTIONS
PATCH
POST
PUT
TRACE
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Command to run the generator:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;gperf --output-file=knownverbs.c knownverbs.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This generator spits out C-code, which got ported to C# afterwards.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: there are plenty more tools for creating perfect-hashes, but this one is by far the easiest to use.&lt;/p&gt;
&lt;p&gt;Question: gperf is &lt;em&gt;GNU General Public License&lt;/em&gt;. Here only the output of that tool is used. To my understanding using this here doesn't violate GPL, but please confirm.&lt;/p&gt;
&lt;details&gt;
  &lt;summary&gt;Generated C-code&lt;/summary&gt;
&lt;pre&gt;&lt;code class="language-c"&gt;/* ANSI-C code produced by gperf version 3.1 */
/* Command-line: gperf --output-file=knownverbs.c knownverbs.txt  */
/* Computed positions: -k'1' */

#if !((' ' == 32) &amp;amp;&amp;amp; ('!' == 33) &amp;amp;&amp;amp; ('&amp;quot;' == 34) &amp;amp;&amp;amp; ('#' == 35) \
      &amp;amp;&amp;amp; ('%' == 37) &amp;amp;&amp;amp; ('&amp;amp;' == 38) &amp;amp;&amp;amp; ('\'' == 39) &amp;amp;&amp;amp; ('(' == 40) \
      &amp;amp;&amp;amp; (')' == 41) &amp;amp;&amp;amp; ('*' == 42) &amp;amp;&amp;amp; ('+' == 43) &amp;amp;&amp;amp; (',' == 44) \
      &amp;amp;&amp;amp; ('-' == 45) &amp;amp;&amp;amp; ('.' == 46) &amp;amp;&amp;amp; ('/' == 47) &amp;amp;&amp;amp; ('0' == 48) \
      &amp;amp;&amp;amp; ('1' == 49) &amp;amp;&amp;amp; ('2' == 50) &amp;amp;&amp;amp; ('3' == 51) &amp;amp;&amp;amp; ('4' == 52) \
      &amp;amp;&amp;amp; ('5' == 53) &amp;amp;&amp;amp; ('6' == 54) &amp;amp;&amp;amp; ('7' == 55) &amp;amp;&amp;amp; ('8' == 56) \
      &amp;amp;&amp;amp; ('9' == 57) &amp;amp;&amp;amp; (':' == 58) &amp;amp;&amp;amp; (';' == 59) &amp;amp;&amp;amp; ('&amp;lt;' == 60) \
      &amp;amp;&amp;amp; ('=' == 61) &amp;amp;&amp;amp; ('&amp;gt;' == 62) &amp;amp;&amp;amp; ('?' == 63) &amp;amp;&amp;amp; ('A' == 65) \
      &amp;amp;&amp;amp; ('B' == 66) &amp;amp;&amp;amp; ('C' == 67) &amp;amp;&amp;amp; ('D' == 68) &amp;amp;&amp;amp; ('E' == 69) \
      &amp;amp;&amp;amp; ('F' == 70) &amp;amp;&amp;amp; ('G' == 71) &amp;amp;&amp;amp; ('H' == 72) &amp;amp;&amp;amp; ('I' == 73) \
      &amp;amp;&amp;amp; ('J' == 74) &amp;amp;&amp;amp; ('K' == 75) &amp;amp;&amp;amp; ('L' == 76) &amp;amp;&amp;amp; ('M' == 77) \
      &amp;amp;&amp;amp; ('N' == 78) &amp;amp;&amp;amp; ('O' == 79) &amp;amp;&amp;amp; ('P' == 80) &amp;amp;&amp;amp; ('Q' == 81) \
      &amp;amp;&amp;amp; ('R' == 82) &amp;amp;&amp;amp; ('S' == 83) &amp;amp;&amp;amp; ('T' == 84) &amp;amp;&amp;amp; ('U' == 85) \
      &amp;amp;&amp;amp; ('V' == 86) &amp;amp;&amp;amp; ('W' == 87) &amp;amp;&amp;amp; ('X' == 88) &amp;amp;&amp;amp; ('Y' == 89) \
      &amp;amp;&amp;amp; ('Z' == 90) &amp;amp;&amp;amp; ('[' == 91) &amp;amp;&amp;amp; ('\\' == 92) &amp;amp;&amp;amp; (']' == 93) \
      &amp;amp;&amp;amp; ('^' == 94) &amp;amp;&amp;amp; ('_' == 95) &amp;amp;&amp;amp; ('a' == 97) &amp;amp;&amp;amp; ('b' == 98) \
      &amp;amp;&amp;amp; ('c' == 99) &amp;amp;&amp;amp; ('d' == 100) &amp;amp;&amp;amp; ('e' == 101) &amp;amp;&amp;amp; ('f' == 102) \
      &amp;amp;&amp;amp; ('g' == 103) &amp;amp;&amp;amp; ('h' == 104) &amp;amp;&amp;amp; ('i' == 105) &amp;amp;&amp;amp; ('j' == 106) \
      &amp;amp;&amp;amp; ('k' == 107) &amp;amp;&amp;amp; ('l' == 108) &amp;amp;&amp;amp; ('m' == 109) &amp;amp;&amp;amp; ('n' == 110) \
      &amp;amp;&amp;amp; ('o' == 111) &amp;amp;&amp;amp; ('p' == 112) &amp;amp;&amp;amp; ('q' == 113) &amp;amp;&amp;amp; ('r' == 114) \
      &amp;amp;&amp;amp; ('s' == 115) &amp;amp;&amp;amp; ('t' == 116) &amp;amp;&amp;amp; ('u' == 117) &amp;amp;&amp;amp; ('v' == 118) \
      &amp;amp;&amp;amp; ('w' == 119) &amp;amp;&amp;amp; ('x' == 120) &amp;amp;&amp;amp; ('y' == 121) &amp;amp;&amp;amp; ('z' == 122) \
      &amp;amp;&amp;amp; ('{' == 123) &amp;amp;&amp;amp; ('|' == 124) &amp;amp;&amp;amp; ('}' == 125) &amp;amp;&amp;amp; ('~' == 126))
/* The character set is not based on ISO-646.  */
#error &amp;quot;gperf generated tables don't work with this execution character set. Please report a bug to &amp;lt;bug-gperf@gnu.org&amp;gt;.&amp;quot;
#endif


#define TOTAL_KEYWORDS 9
#define MIN_WORD_LENGTH 3
#define MAX_WORD_LENGTH 7
#define MIN_HASH_VALUE 3
#define MAX_HASH_VALUE 12
/* maximum key range = 10, duplicates = 0 */

#ifdef __GNUC__
__inline
#else
#ifdef __cplusplus
inline
#endif
#endif
static unsigned int
hash (register const char *str, register size_t len)
{
  static unsigned char asso_values[] =
    {
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13,  5,  0, 13,
      13,  0,  0, 13, 13, 13, 13, 13, 13,  0,
       5, 13, 13, 13,  0, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
      13, 13, 13, 13, 13, 13
    };
  return len + asso_values[(unsigned char)str[0]];
}

const char *
in_word_set (register const char *str, register size_t len)
{
  static const char * wordlist[] =
    {
      &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;,
      &amp;quot;GET&amp;quot;,
      &amp;quot;HEAD&amp;quot;,
      &amp;quot;TRACE&amp;quot;,
      &amp;quot;DELETE&amp;quot;,
      &amp;quot;OPTIONS&amp;quot;,
      &amp;quot;PUT&amp;quot;,
      &amp;quot;POST&amp;quot;,
      &amp;quot;PATCH&amp;quot;,
      &amp;quot;&amp;quot;,
      &amp;quot;CONNECT&amp;quot;
    };

  if (len &amp;lt;= MAX_WORD_LENGTH &amp;amp;&amp;amp; len &amp;gt;= MIN_WORD_LENGTH)
    {
      register unsigned int key = hash (str, len);

      if (key &amp;lt;= MAX_HASH_VALUE)
        {
          register const char *s = wordlist[key];

          if (*str == *s &amp;amp;&amp;amp; !strcmp (str + 1, s + 1))
            return s;
        }
    }
  return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 19:33:14 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44087</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44087</link>
      <title>PR: Updating the SDK, hopefully fixing template tests - @SteveSandersonMS</title>
      <description>&lt;p&gt;Rolling back SDK version to &lt;code&gt;7.0.100-rc.1.22375.2&lt;/code&gt; as suggested at https://github.com/dotnet/aspnetcore/pull/44069#pullrequestreview-1112960681. This is to work around the build issues we've had since updating to a newer SDK.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt; No, that SDK version doesn't work, as it leads to &lt;a href="https://github.com/dotnet/aspnetcore/pull/44087#issuecomment-1255082455"&gt;this deterministic error&lt;/a&gt;. I'm now trying to update to the latest 7.0 SDK. The current status is that the template tests are passing locally with that SDK, so let's see if they also pass in CI.&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 13:58:02 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44077</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44077</link>
      <title>PR: Route tooling redux - @JamesNK</title>
      <description>&lt;p&gt;This PR is https://github.com/dotnet/aspnetcore/pull/42597 but targeting .NET 8 and using Roslyn 4.4.0. The previous PR had to be reverted because source build changes couldn't make it into Roslyn 4.3.0.&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 04:10:31 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44074</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44074</link>
      <title>PR: [6.0] Revert Ubuntu.1804.Armarch.Open change - @Tratcher</title>
      <description>&lt;p&gt;Reverts part of this change because Ubuntu.2004.Armarch.Open doesn't exist and fails some helix runs.
https://github.com/dotnet/aspnetcore/commit/8de738538647e2ca06cd8528588772b701929d42&lt;/p&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 23:47:20 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44073</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44073</link>
      <title>PR: [7.0] Revert Ubuntu.1804.Armarch.Open change - @Tratcher</title>
      <description>&lt;p&gt;Reverts part of this change because &lt;code&gt;Ubuntu.2004.Armarch.Open&lt;/code&gt; doesn't exist and fails some helix runs.
https://github.com/dotnet/aspnetcore/commit/8de738538647e2ca06cd8528588772b701929d42&lt;/p&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 23:43:46 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44072</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44072</link>
      <title>PR: Update Roslyn versions - @TanayParikh</title>
      <description>&lt;p&gt;Uses the &lt;code&gt;MicrosoftNetCompilersToolsetPackageVersion&lt;/code&gt; from https://github.com/dotnet/sdk/blob/release/7.0.1xx/eng/Versions.props.&lt;/p&gt;
&lt;p&gt;For: https://github.com/dotnet/aspnetcore/issues/39387&lt;/p&gt;
&lt;p&gt;Note this'll need to be back-ported to 7.0 as well.&lt;/p&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/dotnet/aspnetcore/pull/28125&lt;/li&gt;
&lt;li&gt;https://github.com/dotnet/aspnetcore/pull/37764&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 23:37:26 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44069</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44069</link>
      <title>PR: Update SDK to 7.0.100-rtm.22468.5 - @Tratcher</title>
      <description>&lt;p&gt;Weekly SDK update.&lt;/p&gt;
&lt;p&gt;I tried 8.0 but it broke. https://github.com/dotnet/aspnetcore/pull/44066&lt;/p&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 22:32:35 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44066</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44066</link>
      <title>PR: Update the SDK to 8.0.100-alpha.1.22469.4 - @Tratcher</title>
      <description>&lt;p&gt;I'm seeing errors like the following locally, but that project does have &lt;code&gt;&amp;lt;EnablePreviewFeatures&amp;gt;true&amp;lt;/EnablePreviewFeatures&amp;gt;&lt;/code&gt;,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;D:\github\aspnetcore\src\Servers\Kestrel\Transport.Quic\test\QuicConnectionContextTests.cs(60,50): error CA2252: Using
'ConnectAsync' requires opting into preview features. See https://aka.ms/dotnet-warnings/preview-features for more info
rmation. [D:\github\aspnetcore\src\Servers\Kestrel\Transport.Quic\test\Microsoft.AspNetCore.Server.Kestrel.Transport.Qu
ic.Tests.csproj]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We'll need to track that down if it repos on the CI.&lt;/p&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 20:37:17 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44061</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44061</link>
      <title>PR: Fix DetectMisplacedLambdaAttribute analyzer and tests - @halter73</title>
      <description>&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Before this change, we had a whole suite of analyzers that were not being tested on the CI.&lt;/p&gt;
&lt;p&gt;I just happened to be looking at these analyzers because we started working on new out-of-band analyzers for the hackathon. When running the tests locally, I discovered failing tests because of a false positive in our &lt;code&gt;DetectMisplacedLambdaAttribute&lt;/code&gt; logic. That's when I realized these tests must not be running on the CI.&lt;/p&gt;
&lt;h2&gt;Customer Impact&lt;/h2&gt;
&lt;p&gt;Customers haven't noticed this. Below, the &lt;code&gt;[Authorize]&lt;/code&gt; attribute is in the correct location, but we improperly warn anyway.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/54385/191338083-e765681a-a7a9-4f2a-8839-e8d687c22e03.png" alt="Inline false positive warning" /&gt;&lt;/p&gt;
&lt;p&gt;But we've noticed that the false positive warning does not always show up in the error list. It appears to be due to the race condition fixed by https://github.com/dotnet/roslyn/issues/6322. We think this might be why no customers have reported this issue. The false positive happens to be in a fairly specific case where an attribute is added to a lambda that then immediately invokes another method.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/54385/191338804-992e5fb8-41aa-4af2-b6ad-8c25180f20c1.png" alt="Build output and error list" /&gt;&lt;/p&gt;
&lt;h2&gt;Regression?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] Yes&lt;/li&gt;
&lt;li&gt;[ ] No&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tests haven't been running on the CI, so the regression likely happened sometime between preview1 when the analyzer was first released and now.&lt;/p&gt;
&lt;h2&gt;Risk&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] High&lt;/li&gt;
&lt;li&gt;[ ] Medium&lt;/li&gt;
&lt;li&gt;[x] Low&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I think it would be higher risk to continue running no tests for these analyzers in our &lt;code&gt;release/7.0&lt;/code&gt; branch.&lt;/p&gt;
&lt;h2&gt;Verification&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] Manual (required)&lt;/li&gt;
&lt;li&gt;[x] Automated&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Packaging changes reviewed?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] Yes&lt;/li&gt;
&lt;li&gt;[ ] No&lt;/li&gt;
&lt;li&gt;[x] N/A&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 16:33:36 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44055</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44055</link>
      <title>PR: [release/7.0] Change gRPC JSON to only accept top-level field as request body - @JamesNK</title>
      <description>&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;gRPC JSON transcoding has a &lt;code&gt;body&lt;/code&gt; field on the annotation added to gRPC methods. It specifies where the request body is deserialized to.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-protobuf"&gt;service JsonTranscodingInvalidNestedBodyGreeter {
  rpc BadBody (HelloRequest) returns (HelloReply) {
    option (google.api.http) = {
      get: &amp;quot;/v1/greeter/{name}&amp;quot;
      body: &amp;quot;sub.subfield&amp;quot; // &amp;lt;- THIS GUY
    };
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Currently, we accept a path to a nested field, which is a period-separated path of field names, e.g. &lt;code&gt;address.city&lt;/code&gt;. The HttpRule spec (unofficial spec for transcoding) says &lt;code&gt;body&lt;/code&gt; must be a top-level field. A path isn't allow.&lt;/p&gt;
&lt;p&gt;See https://cloud.google.com/service-infrastructure/docs/service-management/reference/rpc/google.api#google.api.HttpRule&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/303201/191013390-c6227490-8a0c-4379-b474-ec8d2ca3938e.png" alt="image" /&gt;&lt;/p&gt;
&lt;p&gt;This PR changes transcoding only to accept a top-level field and provides a friendly error message if a nested field is specified:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The body field 'sub.subfield' references a nested field. The body field name must be on the top-level request message.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Customer Impact&lt;/h2&gt;
&lt;p&gt;Currently, the ASP.NET Core transcoding implementation doesn't follow the spec. Could cause confusion when customers are migrating to or from ASP.NET Core transcoding.&lt;/p&gt;
&lt;h2&gt;Regression?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] Yes&lt;/li&gt;
&lt;li&gt;[x] No&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Risk&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] High&lt;/li&gt;
&lt;li&gt;[ ] Medium&lt;/li&gt;
&lt;li&gt;[x] Low&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The changes lock down what request body binding accepts and makes the implementation simpler.&lt;/p&gt;
&lt;h2&gt;Verification&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] Manual (required)&lt;/li&gt;
&lt;li&gt;[x] Automated&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Packaging changes reviewed?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] Yes&lt;/li&gt;
&lt;li&gt;[ ] No&lt;/li&gt;
&lt;li&gt;[x] N/A&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 12:37:58 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/pull/44048</guid>
      <link>https://github.com/dotnet/aspnetcore/pull/44048</link>
      <title>PR: Add RequestDelegate analyzer - @JamesNK</title>
      <description>&lt;p&gt;Fixes https://github.com/dotnet/aspnetcore/issues/42523&lt;/p&gt;
&lt;p&gt;Add an analyzer that detects when a method or lambda is used to create a &lt;code&gt;RequestDelegate&lt;/code&gt;.&lt;/p&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 11:44:00 Z</pubDate>
    </item>
  </channel>
</rss>