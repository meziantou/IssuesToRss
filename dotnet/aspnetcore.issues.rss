<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>dotnet/aspnetcore Issues</title>
    <description>Issues from https://github.com/dotnet/aspnetcore, generated by https://github.com/meziantou/IssuesToRss/</description>
    <managingEditor>meziantousite@outlook.com</managingEditor>
    <ttl>60</ttl>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44143</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44143</link>
      <title>Issue: [Blazor] "ValidateComplexType" does not work for dictionaries - @ageiter</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;I use an EditForm with the
&amp;quot;ObjectGraphDataAnnotationsValidator&amp;quot;. In my model I have several lists with the annotation &amp;quot;ValidateComplexType&amp;quot;. For the collections with IList it works. But for the dictionary the validation does not work.&lt;/p&gt;
&lt;p&gt;As a test I have created a list and a dictionary which contain the same objects. I then set a property in PersonUpdateDto to null. When I do this on the list, the validation fails ( that is correct). If I do this on the object in the dictionary, then the validator does not detect this....&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// Here the validation doesn't work
[ValidateComplexType]
public IDictionary&amp;lt;Guid, PersonUpdateDto&amp;gt; EditingPersons { get; set; }

// Here the validation works
[ValidateComplexType]
public IList&amp;lt;PersonUpdateDto&amp;gt; EditingPersons2 { get; set; }
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;Input errors are also detected for objects in dictionaries and a validation error occurs. Exactly how this works with IList.&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;6.0.400&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;Microsoft.AspNetCore.Components.DataAnnotations.Validation: 3.2.0-rc1.20223.4&lt;/p&gt;
</description>
      <pubDate>Fri, 23 Sep 2022 13:51:46 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44141</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44141</link>
      <title>Issue: SignalR parallel client callback results in reduced performance on first invocation - @SebastianKunz</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;When the server uses  &lt;code&gt;Clients.Client(string connectionId).METHOD()&lt;/code&gt; in a parallel fashion for the first time after startup to invoke a client side method all messages are delayed by factor 2.
This behaviour only appears on the very first time the server is started. All invocations of the same hub method after the first one do not result in slow answers.
The behaviour is browser independent and can only be reproduced by restarting the server over and over again.&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;When invoking a server method called &lt;code&gt;CallMe&lt;/code&gt; the Server will call the client Method &lt;code&gt;Callback&lt;/code&gt; 16 times with some Data. The Data looks like this. Where the Data property is always allocated with 10 bytes.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-CS"&gt;public class BinaryData {
    
    public int Id { get; set; }
    
    public byte[] Data { get; set; }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I choose the value 16, because in my research related work I also use this value, but with a different background. For this case however it can be arbitrarily choosen. The 10 bytes is also arbitrarily choosen.&lt;/p&gt;
&lt;p&gt;The hub method will utilize &lt;code&gt;Parallel.ForEachAsync&lt;/code&gt; to invoke the client side method in a parallel fashion.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-CS"&gt;public async Task CallMe()
    {
        var data = CreateBinaryData(16);
        await Parallel.ForEachAsync(data, async (binaryData, token) =&amp;gt; { await Clients.Client(Context.ConnectionId).Callback(binaryData); });
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On the client side (React SPA) I measure the time it takes for the callback to be invoked. I repeat the measurements 100 times.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-JS"&gt;const onClick = async () =&amp;gt; {
  times = []	
  for (run = 0; run &amp;lt; 100; run++) {
    times.push([])
    startTime = performance.now();
    await connection.invoke(&amp;quot;CallMe&amp;quot;);
  }
  window.times = times
  console.log(times)
};
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-JS"&gt;const connection = useMemo(() =&amp;gt; {
  const origin = window.location.origin
  const conn = new signalR.HubConnectionBuilder().withUrl(`${origin}/BinaryHub`).build();
  conn.on(&amp;quot;Callback&amp;quot;, (data) =&amp;gt; {
	const time = performance.now() - startTime;
	times[run].push(time)
  });
  return conn;
}, []);
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Results&lt;/h2&gt;
&lt;p&gt;The measurements show that after the very first run is slower than any further runs. The array shows the time in miliseconds for each callback invocation.&lt;/p&gt;
&lt;h3&gt;Run 1 - 1 / 100&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-JS"&gt;[
    57.40000003576279,
    57.5,
    57.60000002384186,
    58.5,
    58.5,
    58.5,
    58.5,
    58.60000002384186,
    58.60000002384186,
    58.60000002384186,
    58.60000002384186,
    58.60000002384186,
    58.60000002384186,
    58.60000002384186,
    58.60000002384186,
    58.60000002384186
]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Run 1 - 2 / 100&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-JS"&gt;[
    24.19999998807907,
    24.30000001192093,
    24.30000001192093,
    24.30000001192093,
    24.30000001192093,
    24.30000001192093,
    24.30000001192093,
    24.30000001192093,
    24.399999976158142,
    24.399999976158142,
    24.600000023841858,
    24.600000023841858,
    24.600000023841858,
    24.600000023841858,
    24.80000001192093,
    24.80000001192093
]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Run 2 - 1 / 100&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-JS"&gt;[
    22.19999998807907,
    22.599999964237213,
    27.5,
    27.5,
    27.5,
    27.5,
    27.5,
    27.5,
    27.5,
    27.5,
    27.5,
    27.5,
    27.5,
    27.5,
    27.5,
    27.5
]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;The very first run after the server was started should be in the range of later invocations. Because of initialization overhead one might expect a higher response time for the first run, but an increase of 100% seems too high.&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;p&gt;The source code to reproduce the behaviour can be found &lt;a href="https://github.com/SebastianKunz/SignalR-Slow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please note that you need to run the server in a real network environment. Running the client/server on the same host does not produce the described behaviour.&lt;/p&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;6.0.400&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;FireFox - 105.0 (64-bit)
Google Chrome - Version 105.0.5195.127 (Official Build) (64-bit)&lt;/p&gt;
&lt;p&gt;Server - Ubuntu 20.04.4 LTS&lt;/p&gt;
</description>
      <pubDate>Fri, 23 Sep 2022 11:14:58 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44140</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44140</link>
      <title>Issue: Rate limiting middleware - Statistics about rate limiters - @maartenba</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Is your feature request related to a problem? Please describe the problem.&lt;/h3&gt;
&lt;p&gt;The ASP.NET Core rate limiting middleware is great, but &amp;quot;limited&amp;quot; in terms of what you an communicate with your users. Let's start with some code that you can write today in .NET 7:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;builder.Services.AddRateLimiter(options =&amp;gt;
{
    options.OnRejected = async (context, token) =&amp;gt;
    {
        context.HttpContext.Response.StatusCode = 429;
        if (context.Lease.TryGetMetadata(MetadataName.RetryAfter, out var retryAfter))
        {
            await context.HttpContext.Response.WriteAsync(
                $&amp;quot;Too many requests. Please try again after {retryAfter.TotalMinutes} minute(s). &amp;quot; +
                $&amp;quot;Read more about our rate limits at https://example.org/docs/ratelimiting.&amp;quot;, cancellationToken: token);
        }
        else
        {
            await context.HttpContext.Response.WriteAsync(
                &amp;quot;Too many requests. Please try again later. &amp;quot; +
                &amp;quot;Read more about our rate limits at https://example.org/docs/ratelimiting.&amp;quot;, cancellationToken: token);
        }
    };

    // ...
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When rate limits are triggered, a response is returned that tells the user they are rate limited, where to find more information, and (if the &lt;code&gt;MetadataName.RetryAfter&lt;/code&gt; data is available), when to retry.&lt;/p&gt;
&lt;p&gt;This is quite limited. There's no access to which rate limiter fired, and what its statistics are.&lt;/p&gt;
&lt;p&gt;Additionally, the current &lt;code&gt;RateLimitLease&lt;/code&gt; is only accessible when rate limiting is fired - not for every request. If you would want to return statistics about your limits (e.g. &lt;a href="https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limit-http-headers"&gt;like GitHub does&lt;/a&gt;), you'll find it impossible to get statistics about the current lease in a custom middleware that can write out these additional headers.&lt;/p&gt;
&lt;h3&gt;Describe the solution you'd like&lt;/h3&gt;
&lt;p&gt;Here's a middleware that has access to some of data that I'd want to access:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class RateLimitStatisticsMiddleware
{
    private readonly RequestDelegate _next;
    private readonly IOptions&amp;lt;RateLimiterOptions&amp;gt; _options;

    public RateLimitStatisticsMiddleware(RequestDelegate next, IOptions&amp;lt;RateLimiterOptions&amp;gt; options)
    {
        _next = next;
        _options = options;
    }

    public Task Invoke(HttpContext context)
    {
        // Note: This should also work on endpoint limiters, but those are not available.
        // There is no current &amp;quot;rate limit context&amp;quot; of sorts. Including the policy name etc.
        var globalLimiter = _options.Value.GlobalLimiter;
        if (globalLimiter != null)
        {
            var statistics = globalLimiter.GetStatistics(context);
            if (statistics != null)
            {
                // Note: It would be great to be able to get the TokenLimit from the &amp;quot;current rate limiter context&amp;quot;
                context.Response.Headers.Add(&amp;quot;X-Rate-Limit-Limit&amp;quot;, &amp;quot;20&amp;quot;);

                // Note: It would be great to be able to get the Window from the &amp;quot;current rate limiter context&amp;quot;
                context.Response.Headers.Add(&amp;quot;X-Rate-Limit-Reset&amp;quot;, DateTimeOffset.UtcNow.ToString(&amp;quot;O&amp;quot;));

                // This one is there today
                context.Response.Headers.Add(&amp;quot;X-Rate-Limit-Remaining&amp;quot;, statistics.CurrentAvailablePermits.ToString());
            }
        }

        return _next(context);
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The dream scenario for a better ASP.NET Core rate limiter middleware would be to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Have access to more statistics about the rate limiter (which policy fired, what partition, what are the limiter's options so I can emit a message that says &amp;quot;you can only make 10 requests per minute&amp;quot;, ...) in the rejected callbacks.&lt;/li&gt;
&lt;li&gt;Have a feature on the current &lt;code&gt;HttpContext&lt;/code&gt; that gives access to the current rate limit context, so these details can also be returned on successful requests, or added to telemetry.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Additional context&lt;/h3&gt;
&lt;p&gt;Most rate limiters in &lt;code&gt;System.Threading.RateLimiting&lt;/code&gt; don't provide additional statistics. This feature will need changes in both ASP.NET Core and the .NET framework.&lt;/p&gt;
</description>
      <pubDate>Fri, 23 Sep 2022 08:46:48 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44139</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44139</link>
      <title>Issue: Using runtime built and dynamically-loaded dlls in Blazor Runtime causing issue in Kestrel hosting process. - @StephenEhlers</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;My goal is to Hot Reload a razor component dll reference that is not known to a Blazor WebAssembly App at compile time, but is built and referenced dynamically at runtime. I know that you can use a LazyAssemblyLoader to defer loading compile time known razor components to speed up application load times. But this is not my goal, I need to dynamically load a component that is not known to the website at compile time.&lt;/p&gt;
&lt;p&gt;I have been able to get most of this to work, however it only correctly loads the changes in once before a strange hosting process bug appears and prevents subsequent updates from rendering until the process is terminated and restarted. There is no error in the dot NET hosting console application, but I believe the issue is inside of it because multiple browsers hitting the site will all manifest the issue, so its not a bug in the browser but in the hosting process.&lt;/p&gt;
&lt;p&gt;This is the error in the browser console:
&lt;code&gt;* Assertion at /__w/1/s/src/mono/mono/metadata/metadata.c:1096, condition &lt;/code&gt;&lt;disabled&gt;' not met
Uncaught (in promise) ExitStatus`&lt;/p&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;Since the first hot reload update succeeds, subsequent hot reload updates should also succeed and not result in inability to use the debug instance.&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;This first scenario is what is typically used for compile time known components, my scenario will make modifications to this so that you can more easily follow the logic of what I am doing&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open Visual Studio and Create a new project.&lt;/li&gt;
&lt;li&gt;Choose Blazor WebAssembly App template.&lt;/li&gt;
&lt;li&gt;Choose, Framework .NET 6.0, None for authentication type, check Configure for HTTPS and ASP.NET Core Hosted.&lt;/li&gt;
&lt;li&gt;Click the create button.&lt;/li&gt;
&lt;li&gt;Test Building and Running the blazor application.&lt;/li&gt;
&lt;li&gt;Close the debug window.&lt;/li&gt;
&lt;li&gt;In visual studio add a new Razor Class library project to your solution.&lt;/li&gt;
&lt;li&gt;Add project reference to your Razor Class project in the BlazorApp.Client project.&lt;/li&gt;
&lt;li&gt;In the BlazorApp.Client project open the Pages folder and edit the Index.razor page.&lt;/li&gt;
&lt;li&gt;Add a using statement for your razor class library
&lt;code&gt;@using RazorClassLibrary1;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Also add the default component from the Razor class library.
&lt;code&gt;&amp;lt;Component1&amp;gt;&amp;lt;/Component1&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Build and run the application.&lt;/li&gt;
&lt;li&gt;See that your razor component now shows up on the page.&lt;/li&gt;
&lt;li&gt;Test hot reloading by making changes to your component html and see it automatically refresh, that you can do this indefinitely without issues.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Now the dynamic no project reference changes&lt;/strong&gt;&lt;/p&gt;
&lt;ol start="15"&gt;
&lt;li&gt;&lt;p&gt;Remove project reference to Razor Class Library project from BlazorApp.Client project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Go back to Index.razor and remove the Razor Class library using statement and replace the component reference with a DynamicComponent. Also add a button to execute the code to dynamically load the dll.
`@if (_dynamicType != null)
{
&amp;lt;DynamicComponent Type=&amp;quot;_dynamicType&amp;quot; @ref=&amp;quot;_dynamicControl&amp;quot;&amp;gt;&lt;/DynamicComponent&gt;
}&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="btn btn-primary" @onclick="handleLoadDynamic"&gt;Load Dynamic&lt;/div&gt;`
&lt;ol start="17"&gt;
&lt;li&gt;&lt;p&gt;Remove using statement for Razor Component Library and instead add an inject call for HttpClient and IJSRuntime also add reference to System.Reflection.
&lt;code&gt;@inject HttpClient Http; @using System.Reflection; @inject IJSRuntime JSRuntime;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add an @code section to the page.
`@code{
private Type _dynamicType;
private DynamicComponent _dynamicControl;&lt;/p&gt;
&lt;p&gt;private async void handleLoadDynamic()
{
string assemblyPath = $&amp;quot;dynamic/RazorClassLibrary1.dll&amp;quot;; // or whatever your dll is named
string dynamicTypeName = $&amp;quot;RazorClassLibrary1.Component1&amp;quot;; // or whatever your components type name is&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;try
{
    byte[] dynamicBytes = await Http.GetByteArrayAsync(assemblyPath);
    var assembly = Assembly.Load(dynamicBytes);
    if (assembly != null)
    {
        _dynamicType = assembly.GetType(dynamicTypeName);
    }

    // IMPORTANT make sure state has changed or dynamic control will not be rendered.
    StateHasChanged();
}
catch(Exception ex)
{
    await JSRuntime.InvokeVoidAsync(&amp;quot;alert&amp;quot;, $&amp;quot;Sorry, there doesn't seem to be a component called {dynamicTypeName}!&amp;quot;);
    return;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}
}`&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open the Razor Class Libraries properties tab and add a post-build even to copy its dll to the Blazor.Client projects wwwroot/dynamic folder.
&lt;code&gt;(robocopy $(OutDir) $(ProjectDir)..\BlazorApp4\Client\wwwroot\dynamic\ RazorClassLibrary1.dll /it /NJH /NJS /NFL /NDL) ^&amp;amp; IF %ERRORLEVEL% GEQ 8 exit 1  exit 0&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Set the BlazorApp.Client project as the startup project and then run the debugger.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click the Load Dynamic button and see the razor component load.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With debugger still running, make a change to the razor components UI, such as change the text in the component div and save it. You will notice the hot reload try to redraw the page, but the dll is dynamic and even clicking the Load Dynamic again nothing will change because the new dynamic dll is not in the website folder.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With debugger still running, execute an msbuild command on the Razor Class Library project.
&lt;code&gt;msbuild .\RazorClassLibrary1.csproj /targets:Build&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now that the dynamic library was rebuilt and copied into our dynamic folder we can hit the Load Dynamic button again in our app.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Notice that the new dll loads successfully and our changes are present. (exactly what we want!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now repeat a change in the Razor Class Library, save it and re-run msbuild on it agian.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This time when you hit the Load Dynamic the changes do not render.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Inspecting the console of the browser you will see this error message:
&lt;code&gt;* Assertion at /__w/1/s/src/mono/mono/metadata/metadata.c:1096, condition &lt;/code&gt;&lt;disabled&gt;' not met
Uncaught (in promise) ExitStatus`&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Try refreshing the browser, the error will keep throwing even before the Load Dynamic button is pressed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Even stranger, if you open another browser (like firefox) and hit the same running debug site it will also result in the same error. Although it does give a little more detail than Chrome.
`WebSocket failed to connect. aspnetcore-browser-refresh.js:18:15
Firefox can’t establish a connection to the server at wss://localhost:44344/BlazorApp4.Client/.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Assertion at /__w/1/s/src/mono/mono/metadata/metadata.c:1096, condition &lt;code&gt;&amp;lt;disabled&amp;gt;' not met&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So strangely, it seems that the error is actually stemming from the kestrel .net hosting app and not in the browser memory itself since it affects all browsers hitting the site.
However, the dotnet hosting console shows no errors and that everything is A-OK.&lt;/p&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;In Chrome:
&lt;code&gt;* Assertion at /__w/1/s/src/mono/mono/metadata/metadata.c:1096, condition &lt;/code&gt;&lt;disabled&gt;' not met
Uncaught (in promise) ExitStatus`&lt;/p&gt;
&lt;p&gt;In FireFox:
WebSocket failed to connect. aspnetcore-browser-refresh.js:18:15
&lt;code&gt;Firefox can’t establish a connection to the server at wss://localhost:44344/BlazorApp4.Client/. * Assertion at /__w/1/s/src/mono/mono/metadata/metadata.c:1096, condition &lt;/code&gt;&lt;disabled&gt;' not met`&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;6.0&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;I found that some others were getting the same top level error as this here:
&lt;a href="url"&gt;https://github.com/dotnet/runtime/issues/42628&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;However it seems that they were getting to the exception with an entirely different use can than mine.
&lt;a href="https://github.com/dotnet/aspnetcore/files/9630507/BlazorApp4.zip"&gt;BlazorApp4.zip&lt;/a&gt;&lt;/p&gt;
</description>
      <pubDate>Fri, 23 Sep 2022 03:07:41 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44133</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44133</link>
      <title>Issue: Blazor template first link fills whole horizontal space inside top-row - @Jimmys20</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[x] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;In Blazor templates with authentication enabled the whole top-row is clickable because the first anchor element fills the entire horizontal space.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/34100964/191862680-bcbcc8f9-17c8-46f6-9703-9d6185cf13ce.jpg" alt="2sulr" /&gt;&lt;/p&gt;
&lt;p&gt;This happens because of this style: https://github.com/dotnet/aspnetcore/blob/main/src/ProjectTemplates/Web.ProjectTemplates/content/ComponentsWebAssembly-CSharp/Client/Shared/MainLayout.razor.css#L72&lt;/p&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;Anchor tag should not be clickable outside its text.&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 22:37:03 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44132</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44132</link>
      <title>Issue: (Http)(Validation)ProblemDetails converters should obey JsonOptions.JsonNamingPolicy - @brunolins16</title>
      <description>&lt;p&gt;Hi, I think this may be related, but the casing for ProblemDetails is also inconsistent. ProblemDetails itself defaults to camel case, but as you can see above when describing the &amp;quot;Summary&amp;quot; field, it's capitalized. Shouldn't that be lower case, assuming @TanvirArjel is using the default naming policy?&lt;/p&gt;
&lt;p&gt;I've also noticed ProblemDetails does not obey &lt;code&gt;JsonOptions&lt;/code&gt; settings, e.g., setting&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;services.Configure&amp;lt;JsonOptions&amp;gt;(opt =&amp;gt;
{
    opt.JsonSerializerOptions.PropertyNamingPolicy = null; // don't convert to camel case
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;should give a response like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    &amp;quot;Type&amp;quot;: &amp;quot;https://tools.ietf.org/html/rfc7231#section-6.5.4&amp;quot;,
    &amp;quot;Title&amp;quot;: &amp;quot;Not Found&amp;quot;,
    &amp;quot;Status&amp;quot;: 404,
    &amp;quot;Detail&amp;quot;: &amp;quot;Account 1 not found.&amp;quot;,
    &amp;quot;TraceId&amp;quot;: &amp;quot;00-50f63c5d7921484e4797d82687f43033-915b95474bf55ff2-00&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;but it does not, at least from what I can tell. Maybe this is by design since the spec (https://www.rfc-editor.org/rfc/rfc7807) explicitly lists the properties lower/regular camel case, but it also doesn't seem to explicitly call out camelcase must be used. I think anyone who is using problem details should be able to use whatever casing their API uses already rather than being forced to either a) have inconsistent casing returned or b) use camel case.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Originally posted by @jchoca in https://github.com/dotnet/aspnetcore/issues/43261#issuecomment-1248777800&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Repro:&lt;/strong&gt;: https://github.com/jchoca/ProblemDetailsJsonSettings&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 20:47:11 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44130</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44130</link>
      <title>Issue: Checkbox is not checked when the bound value is true and if the input type is set by code - @satikcz</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;If the input type is determined from a string variable (InputType in the sample), the binding for checked value does not properly work for the first time and checkbox stays unchecked even if the bound Value is true.
Consecutive clicking the checkbox works and fixes the checkbox state to match the bound variable.&lt;/p&gt;
&lt;p&gt;Use following simplified code in blazor component.
After launching the first checkbox is unchecked and second one is checked although both are bound to Values set to true so both should be checked.&lt;/p&gt;
&lt;p&gt;`&amp;lt;input type=&amp;quot;@InputType&amp;quot; @bind=&amp;quot;Value&amp;quot;/&amp;gt;
&amp;lt;input type=&amp;quot;checkbox&amp;quot; @bind=&amp;quot;Value2&amp;quot;/&amp;gt;&lt;/p&gt;
&lt;p&gt;@code {
private string InputType =&amp;gt; &amp;quot;checkbox&amp;quot;;&lt;/p&gt;
&lt;p&gt;[Parameter, EditorRequired]
public bool Value {get;set;} = true;
public bool Value2 {get;set;} = true;
}
`&lt;/p&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;Both checkboxes should be checked initially&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Run following Blazor component code:&lt;/li&gt;
&lt;li&gt;Observe first checkbox is not checked while the second one is checked although both should be checked&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;`&amp;lt;input type=&amp;quot;@InputType&amp;quot; @bind=&amp;quot;Value&amp;quot;/&amp;gt;
&amp;lt;input type=&amp;quot;checkbox&amp;quot; @bind=&amp;quot;Value2&amp;quot;/&amp;gt;&lt;/p&gt;
&lt;p&gt;@code {
private string InputType =&amp;gt; &amp;quot;checkbox&amp;quot;;&lt;/p&gt;
&lt;p&gt;[Parameter, EditorRequired]
public bool Value {get;set;} = true;
public bool Value2 {get;set;} = true;
}
`&lt;/p&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;6.0.401&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;.NET SDK (reflecting any global.json):
Version:   6.0.401
Commit:    0906eae6f8&lt;/p&gt;
&lt;p&gt;Runtime Environment:
OS Name:     Windows
OS Version:  10.0.19044
OS Platform: Windows
RID:         win10-x64
Base Path:   C:\Program Files\dotnet\sdk\6.0.401\&lt;/p&gt;
&lt;p&gt;global.json file:
Not found&lt;/p&gt;
&lt;p&gt;Host:
Version:      6.0.9
Architecture: x64
Commit:       163a63591c&lt;/p&gt;
&lt;p&gt;.NET SDKs installed:
3.1.423 [C:\Program Files\dotnet\sdk]
6.0.304 [C:\Program Files\dotnet\sdk]
6.0.401 [C:\Program Files\dotnet\sdk]&lt;/p&gt;
&lt;p&gt;.NET runtimes installed:
Microsoft.AspNetCore.All 2.1.30 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
Microsoft.AspNetCore.App 2.1.30 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 3.1.25 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 3.1.28 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 3.1.29 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 5.0.17 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 6.0.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 6.0.8 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 6.0.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.NETCore.App 2.1.30 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 3.1.25 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 3.1.28 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 3.1.29 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 5.0.17 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 6.0.8 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 6.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.WindowsDesktop.App 3.1.25 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 3.1.28 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 3.1.29 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 5.0.17 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 6.0.8 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 6.0.9 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 20:37:55 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44124</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44124</link>
      <title>Issue: [Blazor Server] Blazor Server Freezes When Opening A New Tab - @taldorblackfire</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/64600382/191772729-79d30300-2283-4c14-b604-d4d03bcda34c.PNG" alt="loadingError" /&gt;&lt;/p&gt;
&lt;p&gt;When hosting the Blazor Server App on my own IIS with Windows 10 almost every time I open another instance of my application it freezes essentially as indicated in the screenshot above. Any clues what may be causing this? I am using a SignalR Hub that I created which is very simple.&lt;/p&gt;
&lt;p&gt;The above situation also occurs any time I press the refresh button on the browser.&lt;/p&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;It should not be stuck loading, but rather open a new instance of the app.&lt;/p&gt;
&lt;p&gt;In the event of a refresh, it should simply refresh the page.&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;p&gt;Simply go to the site linked and open a new instance of the home tab on the left side.&lt;/p&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;I see no exceptions or errors logged in the console.&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;dotnet --version 6.0.401&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://charactermanager.ddns.net/CharacterManager"&gt;https://charactermanager.ddns.net/CharacterManager&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There is a link to the site in question so you can do any troubleshooting necessary.&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 14:09:20 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44122</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44122</link>
      <title>Issue: Duende.IdentityServer from Blazor WebAssembly App protecting ASP.NET Core API using Client Credentials with custom allowed scope - invalid_scope - @Ogglas</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Is your feature request related to a problem? Please describe the problem.&lt;/h3&gt;
&lt;p&gt;I have a &lt;code&gt;Blazor WebAssembly App&lt;/code&gt; created with &lt;code&gt;Microsoft Visual Studio&lt;/code&gt; with these specifications: &lt;code&gt;Target Framework .NET 6.0&lt;/code&gt;, &lt;code&gt;Authentication Type Individual Accounts&lt;/code&gt; and &lt;code&gt;ASP.NET Core Hosted&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;Using this answer I have been able to add Client Credentials flow&lt;/p&gt;
&lt;p&gt;https://stackoverflow.com/a/67324222/3850405&lt;/p&gt;
&lt;p&gt;I removed this from &lt;code&gt;appsettings.json&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;Clients&amp;quot;: {
  &amp;quot;WebApplication4.Client&amp;quot;: {
    &amp;quot;Profile&amp;quot;: &amp;quot;IdentityServerSPA&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Edit &lt;code&gt;Startup.cs&lt;/code&gt; or &lt;code&gt;Program.cs&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;services.AddIdentityServer()
    .AddApiAuthorization&amp;lt;ApplicationUser, ApplicationDbContext&amp;gt;(options =&amp;gt;
    {
        options.Clients.AddIdentityServerSPA(&amp;quot;WebApplication4.Client&amp;quot;, builder =&amp;gt;
        {
            builder.WithRedirectUri(&amp;quot;/authentication/login-callback&amp;quot;);
            builder.WithLogoutRedirectUri(&amp;quot;/authentication/logout-callback&amp;quot;);
        });
        options.Clients.Add(new Duende.IdentityServer.Models.Client
        {
            ClientId = &amp;quot;WebApplication4.Integration&amp;quot;,
            AllowedGrantTypes = { GrantType.ClientCredentials },
            ClientSecrets = { new Secret(&amp;quot;MySecretValue&amp;quot;.Sha256()) },
            AllowedScopes = { &amp;quot;WebApplication4.ServerAPI&amp;quot;}
        });
    });
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This request will work:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;POST /connect/token HTTP/1.1
Host: localhost:44397
Content-Type: application/x-www-form-urlencoded

grant_type=client_credentials&amp;amp;client_id=WebApplication4.Integration&amp;amp;client_secret=MySecretValue&amp;amp;scope=WebApplication4.ServerAPI
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However I want this client to have its own &lt;code&gt;AllowedScopes&lt;/code&gt;. If I then change &lt;code&gt;AllowedScopes = { &amp;quot;WebApplication4.ServerAPI&amp;quot;}&lt;/code&gt; to &lt;code&gt;AllowedScopes = { &amp;quot;WebApplication4.IntegrationAPI&amp;quot;}&lt;/code&gt; and of course modifying the request.&lt;/p&gt;
&lt;p&gt;Server then responds with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    &amp;quot;error&amp;quot;: &amp;quot;invalid_scope&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If I look at logging I get the following history:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;info: Duende.IdentityServer.Hosting.IdentityServerMiddleware[0]
      Invoking IdentityServer endpoint: Duende.IdentityServer.Endpoints.TokenEndpoint for /connect/token
info: Duende.IdentityServer.Events.DefaultEventService[0]
      {
        &amp;quot;ClientId&amp;quot;: &amp;quot;WebApplication4.Integration&amp;quot;,
        &amp;quot;AuthenticationMethod&amp;quot;: &amp;quot;SharedSecret&amp;quot;,
        &amp;quot;Category&amp;quot;: &amp;quot;Authentication&amp;quot;,
        &amp;quot;Name&amp;quot;: &amp;quot;Client Authentication Success&amp;quot;,
        &amp;quot;EventType&amp;quot;: &amp;quot;Success&amp;quot;,
        &amp;quot;Id&amp;quot;: 1010,
        &amp;quot;ActivityId&amp;quot;: &amp;quot;80000009-0014-d600-b63f-84710c7967bb&amp;quot;,
        &amp;quot;TimeStamp&amp;quot;: &amp;quot;2022-09-22T09:30:31Z&amp;quot;,
        &amp;quot;ProcessId&amp;quot;: 17768,
        &amp;quot;LocalIpAddress&amp;quot;: &amp;quot;::1:44397&amp;quot;,
        &amp;quot;RemoteIpAddress&amp;quot;: &amp;quot;::1&amp;quot;
      }
fail: Duende.IdentityServer.Validation.DefaultResourceValidator[0]
      Scope WebApplication4.IntegrationAPI not found in store or not supported by requested resource indicators.
fail: Duende.IdentityServer.Validation.TokenRequestValidator[0]
      Invalid scopes requested, {
        &amp;quot;ClientId&amp;quot;: &amp;quot;WebApplication4.Integration&amp;quot;,
        &amp;quot;GrantType&amp;quot;: &amp;quot;client_credentials&amp;quot;,
        &amp;quot;AuthorizationCode&amp;quot;: &amp;quot;********&amp;quot;,
        &amp;quot;RefreshToken&amp;quot;: &amp;quot;********&amp;quot;,
        &amp;quot;Raw&amp;quot;: {
          &amp;quot;grant_type&amp;quot;: &amp;quot;client_credentials&amp;quot;,
          &amp;quot;client_id&amp;quot;: &amp;quot;WebApplication4.Integration&amp;quot;,
          &amp;quot;client_secret&amp;quot;: &amp;quot;***REDACTED***&amp;quot;,
          &amp;quot;scope&amp;quot;: &amp;quot;WebApplication4.IntegrationAPI&amp;quot;
        }
      }
info: Duende.IdentityServer.Events.DefaultEventService[0]
      {
        &amp;quot;ClientId&amp;quot;: &amp;quot;WebApplication4.Integration&amp;quot;,
        &amp;quot;Endpoint&amp;quot;: &amp;quot;Token&amp;quot;,
        &amp;quot;GrantType&amp;quot;: &amp;quot;client_credentials&amp;quot;,
        &amp;quot;Error&amp;quot;: &amp;quot;invalid_scope&amp;quot;,
        &amp;quot;Category&amp;quot;: &amp;quot;Token&amp;quot;,
        &amp;quot;Name&amp;quot;: &amp;quot;Token Issued Failure&amp;quot;,
        &amp;quot;EventType&amp;quot;: &amp;quot;Failure&amp;quot;,
        &amp;quot;Id&amp;quot;: 2001,
        &amp;quot;ActivityId&amp;quot;: &amp;quot;80000009-0014-d600-b63f-84710c7967bb&amp;quot;,
        &amp;quot;TimeStamp&amp;quot;: &amp;quot;2022-09-22T09:30:31Z&amp;quot;,
        &amp;quot;ProcessId&amp;quot;: 17768,
        &amp;quot;LocalIpAddress&amp;quot;: &amp;quot;::1:44397&amp;quot;,
        &amp;quot;RemoteIpAddress&amp;quot;: &amp;quot;::1&amp;quot;
      }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What I take with me is this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Scope WebApplication4.IntegrationAPI not found in store or not supported by requested resource indicators.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I then looked at these guides:&lt;/p&gt;
&lt;p&gt;https://github.com/IdentityServer/IdentityServer4/issues/4632#issuecomment-654685880&lt;/p&gt;
&lt;p&gt;https://docs.duendesoftware.com/identityserver/v5/quickstarts/1_client_credentials/&lt;/p&gt;
&lt;p&gt;I therefore added this code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public static class Config
{
    public static IEnumerable&amp;lt;ApiScope&amp;gt; ApiScopes =&amp;gt;
        new List&amp;lt;ApiScope&amp;gt;
        {
        new ApiScope(&amp;quot;WebApplication4.IntegrationAPI&amp;quot;, &amp;quot;Integration API&amp;quot;)
        };
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;services.AddIdentityServer()
    .AddInMemoryApiScopes(Config.ApiScopes)
    .AddApiAuthorization&amp;lt;ApplicationUser, ApplicationDbContext&amp;gt;(options =&amp;gt;...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This still gave me the same error.&lt;/p&gt;
&lt;p&gt;I then added a new list with clients:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public static IEnumerable&amp;lt;Duende.IdentityServer.Models.Client&amp;gt; Clients =&amp;gt;
    new List&amp;lt;Duende.IdentityServer.Models.Client&amp;gt;
    {
        new Duende.IdentityServer.Models.Client
        {
            ClientId = &amp;quot;WebApplication4.Integration&amp;quot;,
            AllowedGrantTypes = { GrantType.ClientCredentials },
            ClientSecrets = { new Secret(&amp;quot;MySecretValue&amp;quot;.Sha256()) },
            AllowedScopes = { &amp;quot;WebApplication4.IntegrationAPI&amp;quot; },
        }
    };
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Removed the old client from &lt;code&gt;AddApiAuthorization&lt;/code&gt; and used this code instead:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;services.AddIdentityServer()
    .AddInMemoryApiScopes(Config.ApiScopes)
    .AddInMemoryClients(Config.Clients)
    .AddApiAuthorization&amp;lt;ApplicationUser, ApplicationDbContext&amp;gt;(options =&amp;gt; ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This gave me a new error when requesting a token:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    &amp;quot;error&amp;quot;: &amp;quot;invalid_client&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Logs:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;info: Duende.IdentityServer.Hosting.IdentityServerMiddleware[0]
      Invoking IdentityServer endpoint: Duende.IdentityServer.Endpoints.TokenEndpoint for /connect/token
info: Duende.IdentityServer.Events.DefaultEventService[0]
      {
        &amp;quot;ClientId&amp;quot;: &amp;quot;WebApplication4.Integration&amp;quot;,
        &amp;quot;Category&amp;quot;: &amp;quot;Authentication&amp;quot;,
        &amp;quot;Name&amp;quot;: &amp;quot;Client Authentication Failure&amp;quot;,
        &amp;quot;EventType&amp;quot;: &amp;quot;Failure&amp;quot;,
        &amp;quot;Id&amp;quot;: 1011,
        &amp;quot;Message&amp;quot;: &amp;quot;Unknown client&amp;quot;,
        &amp;quot;ActivityId&amp;quot;: &amp;quot;8000000a-0016-e700-b63f-84710c7967bb&amp;quot;,
        &amp;quot;TimeStamp&amp;quot;: &amp;quot;2022-09-22T09:54:08Z&amp;quot;,
        &amp;quot;ProcessId&amp;quot;: 10676,
        &amp;quot;LocalIpAddress&amp;quot;: &amp;quot;::1:44397&amp;quot;,
        &amp;quot;RemoteIpAddress&amp;quot;: &amp;quot;::1&amp;quot;
      }
fail: Duende.IdentityServer.Validation.ClientSecretValidator[0]
      No client with id 'WebApplication4.Integration' found. aborting
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If I look at https://localhost:44397/.well-known/openid-configuration I only see &lt;code&gt;WebApplication4.ServerAPI&lt;/code&gt; in &lt;code&gt;scopes_supported&lt;/code&gt; no matter the configuration.&lt;/p&gt;
&lt;h3&gt;Describe the solution you'd like&lt;/h3&gt;
&lt;p&gt;I want to do it like this so that I can add a policy like this later:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;services.AddAuthorization(options =&amp;gt;
{
    options.AddPolicy(&amp;quot;IntegrationApiScope&amp;quot;, policy =&amp;gt;
    {
        policy.RequireAuthenticatedUser();
        policy.RequireClaim(&amp;quot;scope&amp;quot;, &amp;quot;WebApplication4.IntegrationAPI&amp;quot;);
    });
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Meaning that I only want Client Credentials flow to get the scope &lt;code&gt;WebApplication4.IntegrationAPI&lt;/code&gt; and I don't want Authorization Code Grant, normal login flow via &lt;code&gt;authorization_code&lt;/code&gt;, to have this scope or be able to request this scope.&lt;/p&gt;
&lt;h3&gt;Additional context&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 10:21:35 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44119</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44119</link>
      <title>Issue: `dotnet-getdocument` fails to resolve GetDocument.Insider for net7.0 - @captainsafia</title>
      <description>&lt;p&gt;While validating https://github.com/dotnet/aspnetcore/issues/43395, I realized that https://github.com/dotnet/aspnetcore/pull/43701 broke resolution for the &lt;code&gt;GetDocument.Insider&lt;/code&gt; assembly in the &lt;code&gt;dotnet-getdocument&lt;/code&gt; tool.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Build FAILED.

/Users/captainsafia/.nuget/packages/microsoft.extensions.apidescription.server/7.0.0-rtm.22471.6/build/Microsoft.Extensions.ApiDescription.Server.targets(66,5): error : The application to execute does not exist: '/Users/captainsafia/.nuget/packages/microsoft.extensions.apidescription.server/7.0.0-rtm.22471.6/tools/net7.0/GetDocument.Insider.dll' [/Users/captainsafia/tests/OpenApiThreading/OpenApiThreading.csproj]
/Users/captainsafia/.nuget/packages/microsoft.extensions.apidescription.server/7.0.0-rtm.22471.6/build/Microsoft.Extensions.ApiDescription.Server.targets(66,5): error MSB3073: The command &amp;quot;dotnet &amp;quot;/Users/captainsafia/.nuget/packages/microsoft.extensions.apidescription.server/7.0.0-rtm.22471.6/build/../tools/dotnet-getdocument.dll&amp;quot; --assembly &amp;quot;/Users/captainsafia/tests/OpenApiThreading/bin/Debug/net7.0/OpenApiThreading.dll&amp;quot; --file-list &amp;quot;obj/OpenApiThreading.OpenApiFiles.cache&amp;quot; --framework &amp;quot;.NETCoreApp,Version=v7.0&amp;quot; --output &amp;quot;obj/&amp;quot; --project &amp;quot;OpenApiThreading&amp;quot; --assets-file &amp;quot;/Users/captainsafia/tests/OpenApiThreading/obj/project.assets.json&amp;quot; --platform &amp;quot;AnyCPU&amp;quot; &amp;quot; exited with code 129. [/Users/captainsafia/tests/OpenApiThreading/OpenApiThreading.csproj]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It looks like the &lt;a href="https://github.com/dotnet/aspnetcore/blob/c735b8c98cf0b85fabfcdf48b8bf8ca0b68c1299/src/Tools/Extensions.ApiDescription.Server/src/Microsoft.Extensions.ApiDescription.Server.nuspec"&gt;NuSpec&lt;/a&gt; needs to be updated to package the net7.0 assembly correctly.&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 04:01:37 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44116</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44116</link>
      <title>Issue: Add an Analyzer to recommend using DIM properties with IHeaderDictionary instead of indexer - @JamesNK</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Is your feature request related to a problem? Please describe the problem.&lt;/h3&gt;
&lt;p&gt;IHeaderDictionary has DIM properties for many commonly used headers: https://github.com/dotnet/aspnetcore/blob/ff2148be7592be83f1f88e2f372ef04f02fdfdb8/src/Http/Http.Features/src/IHeaderDictionary.Keyed.cs&lt;/p&gt;
&lt;h3&gt;Describe the solution you'd like&lt;/h3&gt;
&lt;p&gt;An analyzer that looks for indexer use with a name that matches a property.&lt;/p&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-cs"&gt;if (request.Headers[&amp;quot;Content-Type&amp;quot;] == &amp;quot;application/json&amp;quot;)
{
    // ....
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After change (could be done via a fixer):&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-cs"&gt;if (request.Headers.ContentType == &amp;quot;application/json&amp;quot;)
{
    // ....
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Additional context&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 02:12:36 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44112</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44112</link>
      <title>Issue: TR @onclick only after tabbed - @hannespreishuber</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;Can not click with mouse but tab with finger to fire SetBinding&lt;/p&gt;
&lt;p&gt;following code&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-razor"&gt; &amp;lt;div class=&amp;quot;dropdown-menu show&amp;quot; style=&amp;quot;position: absolute; &amp;quot;&amp;gt;
        &amp;lt;table class=&amp;quot;table table-hover&amp;quot;&amp;gt;
            &amp;lt;tbody&amp;gt;
            @foreach (var item in Liste)
            {
                &amp;lt;tr class=&amp;quot;hover-overlay&amp;quot; 
                @onclick=&amp;quot;()=&amp;gt;SetBinding(item.Key)&amp;quot;&amp;gt;
                    @foreach (var td in item.Value.Split(&amp;quot;|&amp;quot;))
                    {
                        &amp;lt;td&amp;gt;@td&amp;lt;/td&amp;gt;
                    }
                &amp;lt;/tr&amp;gt;

            }
            &amp;lt;/tbody&amp;gt;
        &amp;lt;/table&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After ontime finger tab. also mouse click works&lt;/p&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;mouse click should fire @onclick event&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;p&gt;question - how to investigate in bound JavaScript bridged events?&lt;/p&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;net 6&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 19:03:35 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44111</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44111</link>
      <title>Issue: dot.net - @davincike</title>
      <description>&lt;h2&gt;Background and Motivation&lt;/h2&gt;
&lt;!--
We welcome API proposals! We have a process to evaluate the value and shape of new API. There is an overview of our process [here](https://github.com/dotnet/aspnetcore/blob/main/docs/APIReviewProcess.md). This template will help us gather the information we need to start the review process.
First, please describe the purpose and value of the new API here.
--&gt;
&lt;h2&gt;Proposed API&lt;/h2&gt;
&lt;!--
Please provide the specific public API signature diff that you are proposing. For example:
```diff
namespace Microsoft.AspNetCore.Http;

public static class HttpResponseWritingExtensions
{
+    public Task WriteAsync(this HttpResponse response, StringBuilder builder);
}
```
You may find the [Framework Design Guidelines](https://github.com/dotnet/runtime/blob/master/docs/coding-guidelines/framework-design-guidelines-digest.md) helpful.
--&gt;
&lt;h2&gt;Usage Examples&lt;/h2&gt;
&lt;!--
Please provide code examples that highlight how the proposed API additions are meant to be consumed.
This will help suggest whether the API has the right shape to be functional, performant and useable.
You can use code blocks like this:
```csharp
// some lines of code here
```
--&gt;
&lt;h2&gt;Alternative Designs&lt;/h2&gt;
&lt;!--
Were there other options you considered, such as alternative API shapes?
How does this compare to analogous APIs in other ecosystems and libraries?
--&gt;
&lt;h2&gt;Risks&lt;/h2&gt;
&lt;!--
Please mention any risks that to your knowledge the API proposal might entail, such as breaking changes, performance regressions, etc.
--&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 16:48:20 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44110</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44110</link>
      <title>Issue: Blazor Wasm ASP.NET Core Hosted IWebHostEnvironment.WebRootPath null when debugging - @groogiam</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;The IWebHostEnvironment.WebRootPath is null when debugging an ASP.NET Core hosted Blazor wasm application. This makes it very difficult to wire up an logic such as additional static file handlers for sub folders of wwwroot. The value is present in a published build.&lt;/p&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;IWebHostEnvironment.WebRootPath should contain be patched through to the wwwroot directory of the client project.&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Create an ASP.NET Core Hosted Blazor Wasm project using the default template.&lt;/li&gt;
&lt;li&gt;Add a breakpoint after line 15 in Program.cs of the Server project.&lt;/li&gt;
&lt;li&gt;The app.Envionrment.WebRootPath is null.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Publish the application and run the same procedure and the directory is not null.&lt;/p&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;6.0.401&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 15:58:46 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44109</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44109</link>
      <title>Issue: Using Lottie in Blazor - @Laftek</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;I am trying to use Lottie in Blazor and it should be straightforward but I guess I am doing something wrong.&lt;/p&gt;
&lt;p&gt;I followed this:
https://lottiefiles.com/blog/working-with-lottie/how-to-add-lottie-animation-in-web-page-html/&lt;/p&gt;
&lt;p&gt;Using &lt;script src="https://unpkg.com/@lottiefiles/lottie-player@latest/dist/lottie-player.js"&gt;&lt;/script&gt; in _Layout throws error because of &amp;quot;@&amp;quot; character -&amp;gt; I put one more to escape it -&amp;gt; but result is empty lottie player with yellow warning triangle instead of animation.&lt;/p&gt;
&lt;p&gt;I thought its maybe because of double @ character so I just copied whole script locally to scripts.js and import it in _Layout but the same result -&amp;gt; empty lottie player with yellow warning triangle instead of animation.&lt;/p&gt;
&lt;p&gt;Is there any known workaround or guide what should I do?&lt;/p&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;To display lottie animation.&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;p&gt;Create blazor project and folow https://lottiefiles.com/blog/working-with-lottie/how-to-add-lottie-animation-in-web-page-html/&lt;/p&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;7.0.100-rc.1.22431.12&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 15:46:58 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44108</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44108</link>
      <title>Issue: SPA running under IIS go to 503 but w3wp dont stop - @ilbarzo</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;We have a SPA in .NET Core 6, with angular (dotnet new angular --auth individual -uld)&lt;/p&gt;
&lt;p&gt;Aftere some request with success, we receive only 503.0 Server has been shutdown, but w3wp is running and no info related to error can be foundend in stdlog neither in event viewer.&lt;/p&gt;
&lt;p&gt;I can attach a ProcMon log of w3wp from start to first 503 reached.
&lt;a href="https://github.com/dotnet/aspnetcore/files/9616996/Logfile.zip"&gt;Logfile.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Similar reference here: &lt;a href="https://github.com/dotnet/aspnetcore/issues/42661"&gt;#42661&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;Error HTTP 503.0 - Server has been shutdown&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;6.0.202&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;dotnet --info
.NET SDK (che rispecchia un qualsiasi file global.json):
Version:   6.0.202
Commit:    f8a55617d2&lt;/p&gt;
&lt;p&gt;Ambiente di runtime:
OS Name:     Windows
OS Version:  10.0.19044
OS Platform: Windows
RID:         win10-x64
Base Path:   C:\Program Files\dotnet\sdk\6.0.202\&lt;/p&gt;
&lt;p&gt;global.json file:
Not found&lt;/p&gt;
&lt;p&gt;Host:
Version:      6.0.9
Architecture: x64
Commit:       163a63591c&lt;/p&gt;
&lt;p&gt;.NET SDKs installed:
1.0.0-preview2-003131 [C:\Program Files\dotnet\sdk]
2.1.2 [C:\Program Files\dotnet\sdk]
2.1.4 [C:\Program Files\dotnet\sdk]
2.1.101 [C:\Program Files\dotnet\sdk]
2.1.103 [C:\Program Files\dotnet\sdk]
2.1.104 [C:\Program Files\dotnet\sdk]
2.1.200 [C:\Program Files\dotnet\sdk]
2.1.201 [C:\Program Files\dotnet\sdk]
2.1.202 [C:\Program Files\dotnet\sdk]
2.1.400 [C:\Program Files\dotnet\sdk]
2.1.401 [C:\Program Files\dotnet\sdk]
2.1.402 [C:\Program Files\dotnet\sdk]
2.1.403 [C:\Program Files\dotnet\sdk]
2.1.526 [C:\Program Files\dotnet\sdk]
2.1.617 [C:\Program Files\dotnet\sdk]
2.1.700 [C:\Program Files\dotnet\sdk]
2.1.701 [C:\Program Files\dotnet\sdk]
2.1.813 [C:\Program Files\dotnet\sdk]
2.1.818 [C:\Program Files\dotnet\sdk]
3.0.103 [C:\Program Files\dotnet\sdk]
3.1.407 [C:\Program Files\dotnet\sdk]
3.1.423 [C:\Program Files\dotnet\sdk]
5.0.104 [C:\Program Files\dotnet\sdk]
5.0.303 [C:\Program Files\dotnet\sdk]
5.0.403 [C:\Program Files\dotnet\sdk]
5.0.404 [C:\Program Files\dotnet\sdk]
5.0.408 [C:\Program Files\dotnet\sdk]
6.0.109 [C:\Program Files\dotnet\sdk]
6.0.202 [C:\Program Files\dotnet\sdk]&lt;/p&gt;
&lt;p&gt;.NET runtimes installed:
Microsoft.AspNetCore.All 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
Microsoft.AspNetCore.All 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
Microsoft.AspNetCore.All 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
Microsoft.AspNetCore.All 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
Microsoft.AspNetCore.All 2.1.12 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
Microsoft.AspNetCore.All 2.1.13 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
Microsoft.AspNetCore.All 2.1.17 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
Microsoft.AspNetCore.All 2.1.19 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
Microsoft.AspNetCore.All 2.1.20 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
Microsoft.AspNetCore.All 2.1.22 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
Microsoft.AspNetCore.All 2.1.24 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
Microsoft.AspNetCore.All 2.1.30 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
Microsoft.AspNetCore.All 2.2.8 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
Microsoft.AspNetCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 2.1.12 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 2.1.13 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 2.1.17 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 2.1.19 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 2.1.20 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 2.1.22 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 2.1.24 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 2.1.30 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 2.2.8 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 3.0.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 3.1.10 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 3.1.13 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 3.1.22 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 3.1.24 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 3.1.29 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 5.0.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 5.0.8 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 5.0.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 5.0.10 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 5.0.12 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 5.0.13 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 5.0.17 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 6.0.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 6.0.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.NETCore.App 1.0.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 1.1.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.0.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.0.6 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.1.2 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.1.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.1.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.1.11 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.1.12 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.1.13 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.1.16 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.1.17 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.1.19 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.1.20 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.1.22 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.1.24 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.1.26 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.1.30 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 3.0.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 3.1.10 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 3.1.13 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 3.1.22 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 3.1.24 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 3.1.29 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 5.0.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 5.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 5.0.13 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 5.0.17 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 6.0.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 6.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.WindowsDesktop.App 3.0.3 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 3.1.10 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 3.1.13 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 3.1.22 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 3.1.24 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 3.1.29 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 5.0.4 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 5.0.9 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 5.0.13 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 5.0.17 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 6.0.4 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 6.0.9 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 13:29:53 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44106</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44106</link>
      <title>Issue: egrep are obsolescent now. use grep -E instead - @kxxt</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;egrep are obsolescent now. use grep -E instead. I opened this issue only because of the requirement of opening a PR.&lt;/p&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 11:00:12 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44105</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44105</link>
      <title>Issue: [Blazor] `Input*` - allow correct async handling of `ValueChanged` callbacks (incl. `@bind-Value:after`) - @hakenr</title>
      <description>&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;In the current &lt;code&gt;InputBase&lt;/code&gt; design, the binding to underlying &lt;code&gt;input&lt;/code&gt; element is implemented by synchronous setter (&lt;code&gt;CurrentValue_set&lt;/code&gt;). The asynchronous &lt;code&gt;ValueChanged&lt;/code&gt; callback is called from the synchronous setter as &amp;quot;fire and forget&amp;quot; task (line 78):
https://github.com/dotnet/aspnetcore/blob/905557eaca32f5ce9fd17a25e5187ceb7a75cf1c/src/Components/Web/src/Forms/InputBase.cs#L69-L82&lt;/p&gt;
&lt;p&gt;Although there already have been less frequent scenarios where this turned out to be an issue (e.g. manual binding using &lt;code&gt;Value&lt;/code&gt;, &lt;code&gt;ValueChanged&lt;/code&gt; and &lt;code&gt;ValueExpression&lt;/code&gt; parameters), starting with &lt;code&gt;@bind-Value:after&lt;/code&gt; this will become much bigger pain. Subscribtion to the &lt;code&gt;ValueChanged&lt;/code&gt; callback will become much easier and I expect the users will start using is much more (imagine continuous saving of values when filling the form).&lt;/p&gt;
&lt;p&gt;I would like to start discussion on this topic, try to find a new design for &lt;code&gt;InputBase&lt;/code&gt; and derived components and allow proper asynchronous handling of the &lt;code&gt;ValueChanged&lt;/code&gt; callback (incl. &lt;code&gt;@bind-Value:after&lt;/code&gt; variant).&lt;/p&gt;
&lt;h2&gt;Motivation and goals&lt;/h2&gt;
&lt;p&gt;Consider this sample code. The exception is &amp;quot;lost&amp;quot;, neither &lt;code&gt;blazor-error-ui&lt;/code&gt;, nor &lt;code&gt;ErrorBoundary&lt;/code&gt; or browser/server-console will capture the exception:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-razor"&gt;@page &amp;quot;/&amp;quot;

&amp;lt;EditForm Model=&amp;quot;model&amp;quot;&amp;gt;
    &amp;lt;ErrorBoundary&amp;gt;
        &amp;lt;InputText @bind-Value=&amp;quot;model&amp;quot; @bind-Value:after=&amp;quot;DoSomethingAfterValueChanged&amp;quot; /&amp;gt;
    &amp;lt;/ErrorBoundary&amp;gt;
    @*&amp;lt;input type=&amp;quot;text&amp;quot; @bind-value=&amp;quot;model&amp;quot; @bind-value:after=&amp;quot;DoSomethingAfterValueChanged&amp;quot; /&amp;gt;*@
&amp;lt;/EditForm&amp;gt;

@code {
    string model = String.Empty;

    private Task DoSomethingAfterValueChanged()
    {
        Console.WriteLine(&amp;quot;This executes.&amp;quot;);
        throw new InvalidOperationException(&amp;quot;[1] This exception is lost in async-over-sync call from InputBase.CurrentValue_set.&amp;quot;);
        // exception not logged in Console
        // exception not caught by ErrorBoundary
        // exception not caught by Blazor global error UI (the yellow strip of death :-D)
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(In opposite, the plain &lt;code&gt;input&lt;/code&gt; HTML element will behave correctly.)&lt;/p&gt;
&lt;h2&gt;Risks&lt;/h2&gt;
&lt;p&gt;It is obvious, that the solution will cause major breaking changes in current &lt;code&gt;Input*&lt;/code&gt; components as their &lt;code&gt;protected&lt;/code&gt; API for inherited components would have to change significantly (the &lt;code&gt;CurrentValue&lt;/code&gt; and &lt;code&gt;CurrentValueAsString&lt;/code&gt; properties will have to be replaced with some asynchronous subsitutes). With such major impact, consider creating of new set of &lt;code&gt;NewInput*&lt;/code&gt; components and keep the old ones as they are.&lt;/p&gt;
&lt;h2&gt;Examples&lt;/h2&gt;
&lt;p&gt;Give brief examples of possible developer experiences (e.g., code they would write).&lt;/p&gt;
&lt;p&gt;Don't be deeply concerned with how it would be implemented yet. Your examples could even be from other technology stacks.&lt;/p&gt;
&lt;h1&gt;Detailed design&lt;/h1&gt;
&lt;p&gt;I would like to discuss the issue first with major stakeholders (e.g. @SteveSandersonMS, @javiercn, ...) and based on the approval that &amp;quot;this is something we want to solve&amp;quot; we can elaborate more on the detailed design. It is obvious that we have to handle the &lt;code&gt;onchange&lt;/code&gt; callback from the &lt;code&gt;input&lt;/code&gt; element in some asynchronous method rather than synchronous property setter (line 38).
https://github.com/dotnet/aspnetcore/blob/905557eaca32f5ce9fd17a25e5187ceb7a75cf1c/src/Components/Web/src/Forms/InputText.cs#L32-L41&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 10:55:12 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44104</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44104</link>
      <title>Issue: [NetSDKE2E][Loc]With VS 17.4 preview 3 + NET7 RC2 installed on Local OS, the template "ASP.NET Core with React.js and Redux" is inconsistent with EN's template in dotnet new --list. - @vdanche</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[x] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;Environment: 17.4.0 Preview 3 [32920.363.main] + 7.0.100-rc.2.22466.28(runtime-7.0.0-rc.2.22464.1) on Loc OS and EN OS
Repro steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;dotnet new --list in CLI.&lt;/li&gt;
&lt;li&gt;check the template displaying&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;we found the template &amp;quot;&amp;quot;ASP.NET Core with React.js and Redux&amp;quot;&amp;quot; display in Loc OS, not EN
EN:
&lt;img src="https://user-images.githubusercontent.com/65637796/191470844-3f0ddcd1-af4d-4169-b6f7-48390db8fdd6.png" alt="image" /&gt;
e.g DE:
&lt;img src="https://user-images.githubusercontent.com/65637796/191470911-40791338-805f-4fc2-af8b-836257d43107.png" alt="image" /&gt;
SC:
&lt;img src="https://user-images.githubusercontent.com/65637796/191471900-c4b611ea-024c-4673-ab6f-9841fa4b580f.png" alt="image" /&gt;&lt;/p&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;The template should be consistent with EN.&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 09:38:28 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44102</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44102</link>
      <title>Issue: Should a required array bound to query string throw an exception when omitted? - @pstricks-fans</title>
      <description>&lt;p&gt;I am not sure whether the current implementation is a bug or a feature.&lt;/p&gt;
&lt;p&gt;If we navigate to &lt;code&gt;&amp;quot;/&amp;quot;&lt;/code&gt;  without specifying the required &lt;code&gt;x&lt;/code&gt;, the framework does &lt;strong&gt;not&lt;/strong&gt; throw an exception.
Interestingly &lt;code&gt;x&lt;/code&gt; is set to a zero-length array.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;app.MapGet(&amp;quot;/&amp;quot;, ([FromQuery] int[] x) =&amp;gt;
{
    return $&amp;quot;Length of x is : {x.Length}&amp;quot;;
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But if I change the binding source from &lt;code&gt;FromQuery&lt;/code&gt; to &lt;code&gt;FromBody&lt;/code&gt;, the framework behaves as expected.
It &lt;strong&gt;does&lt;/strong&gt; throw an exception if the required &lt;code&gt;x&lt;/code&gt; is omitted.&lt;/p&gt;
&lt;h3&gt;Question:&lt;/h3&gt;
&lt;p&gt;Should a required array bound to query string throw an exception when omitted?&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 05:57:33 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44101</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44101</link>
      <title>Issue: Opensource but why has not source? - @thanhnghiacntt</title>
      <description>&lt;p&gt;https://github.com/dotnet/aspnetcore/blob/ce2db7ea0b161fc5eb35710fca6feeafeeac37bc/src/Mvc/Mvc.Core/src/Filters/ActionFilterAttribute.cs#L54&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 01:44:39 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44100</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44100</link>
      <title>Issue: Write custom authentication failure information to the response body - @AlexandreBossard</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Is your feature request related to a problem? Please describe the problem.&lt;/h3&gt;
&lt;p&gt;I have written my Authentication Handler (loosely based on JwtBearHandler). Obviously, I have some &lt;code&gt;AuthenticateResult.fail(ex)&lt;/code&gt;. All that is good. But,  I would like to extract info from these errors and translate them to the Response body aside from the expected 401.&lt;/p&gt;
&lt;p&gt;Outside the authentication / authentication framework, I've written an exception handler that does exactly that for controllers.&lt;/p&gt;
&lt;p&gt;Unfortunately, I've failed to find a way to retrieve the &lt;code&gt;AuthenticateResult&lt;/code&gt; produced by the authentication Handler. &lt;code&gt;IAuthorizationMiddlewareResultHandler&lt;/code&gt; do expose the &lt;code&gt;AuthenticateResult&lt;/code&gt; but not when the authentication fails, only when it succeed, through &lt;code&gt;HttpContext.Features.Get&amp;lt;IAuthenticateResultFeature&amp;gt;()&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Describe the solution you'd like&lt;/h3&gt;
&lt;p&gt;I would like some ways to get the &lt;code&gt;AuthenticationResult&lt;/code&gt; and generate a response body from it. I suppose I could do that from the &lt;code&gt;IAuthorizationMiddlewareResultHandler&lt;/code&gt; assuming I had access to the result, regardless of the authentication state. I would throw from the resultHandler which would be translated by the exception handler.&lt;/p&gt;
&lt;p&gt;Or am I missing something here ? Any Documentation to point me to ?&lt;/p&gt;
&lt;h3&gt;Additional context&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 22:57:33 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44098</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44098</link>
      <title>Issue: [Blazor] Blazor App Randomly Freezes - @taldorblackfire</title>
      <description>&lt;p&gt;Blazor Server-App using SignalR
Developed in VS 2022
.NET Core 6.0
OS Windows 10
Hosted on IIS 10
EF Core with SQL Server&lt;/p&gt;
&lt;p&gt;Application Pool set to Classic &amp;amp; No Managed Code
AspNetCore Module Installed
URL Rewrite Module Installed&lt;/p&gt;
&lt;p&gt;I have an issue where my Blazor App when published to IIS will just randomly freeze. Sometimes it freezes when navigating to another page, sometimes it happens when I refresh on a page with a parameter, sometimes it happens when I have multiple instances of the app going. I am not sure if it is related, but sometimes the CSS will not fully load and so I am left with the block representing &amp;quot;the image file could not be found&amp;quot; instead of a &amp;quot;+&amp;quot; or other boostrap css icon files I have used.&lt;/p&gt;
&lt;p&gt;The only workaround I have found to get the site back up and running is to Stop &amp;amp; Start the Application Pool.&lt;/p&gt;
&lt;p&gt;Using Developer Tools monitoring the Network logs, it seems to simply freeze when trying to load the page with no error being displayed in the Console or other locations.&lt;/p&gt;
&lt;p&gt;I am hosting all of this on my machine, when I debug the app it works beautifully.&lt;/p&gt;
&lt;p&gt;Any thoughts on what could be causing this app to freeze? I have also ensured it is operating on HTTPS and it has a valid SSL certificate.&lt;/p&gt;
&lt;p&gt;Update 9/21/2022
One thing I noticed is that while debugging in VS 2022 I notice that requests to switch locations it makes a Websocket request GET versus on the IIS it makes a simple http get. This seems odd to me, and I am not sure why the debug is performing it this way versus the deployed app.&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 20:44:59 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44092</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44092</link>
      <title>Issue: Update React and Angular project templates to the latest versions - @mkArtakMSFT</title>
      <description />
      <pubDate>Tue, 20 Sep 2022 17:54:37 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44090</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44090</link>
      <title>Issue: Use more localized strategy for resolving WellKnownTypes in analyzers - @captainsafia</title>
      <description>&lt;p&gt;Currently, the analyzers in &lt;code&gt;src/Framework&lt;/code&gt; resolve for a set of common types related to the area that the analyzer. For example, the route handler analyzers will attempt to resolve the types defined &lt;a href="https://github.com/dotnet/aspnetcore/blob/ce2db7ea0b161fc5eb35710fca6feeafeeac37bc/src/Framework/AspNetCoreAnalyzers/src/Analyzers/RouteHandlers/WellKnownTypes.cs"&gt;here&lt;/a&gt;. Generally, each type that is resolve is required for one or more analyzers. However, if &lt;em&gt;any&lt;/em&gt; of the types fail to be resolved then &lt;em&gt;all&lt;/em&gt; of the analyzers will fail to run because of this check:&lt;/p&gt;
&lt;p&gt;https://github.com/dotnet/aspnetcore/blob/ce2db7ea0b161fc5eb35710fca6feeafeeac37bc/src/Framework/AspNetCoreAnalyzers/src/Analyzers/RouteHandlers/RouteHandlerAnalyzer.cs#L33-L37&lt;/p&gt;
&lt;p&gt;We should consider making the type resolution a little more fine-grained to the analyzers that specifically need it so that we don't fail outright for analyzers that don't have it. For example, the only type that matters for  &lt;em&gt;all&lt;/em&gt; route handler analyzers is &lt;code&gt;EndpointRouteBuilderExtensions&lt;/code&gt; which is used to check if the invocations in an app are &lt;code&gt;MapAction&lt;/code&gt; invocations. The other types resolved are only required for certain analyzers.&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 16:51:19 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44089</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44089</link>
      <title>Issue: Blazor Wasm SubDomain Routing - @Julien-Marpault</title>
      <description>&lt;p&gt;I'm working on an application with subdomain routing.
my url are:
https://profile1.foo.com
https://profile2.foo.com
https://profile3.foo.com
and so on...&lt;/p&gt;
&lt;p&gt;I made a Component to extract the subdomain from the url and use it to show correct data in my views.&lt;/p&gt;
&lt;p&gt;but navigating from one subdomain to another force application to reload. Internal routing is not working.&lt;/p&gt;
&lt;p&gt;Is there a way to force internal routing using NavigationManager of some other component ?&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 15:46:51 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44088</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44088</link>
      <title>Issue: JavaScript to C# argument passing achieves a whopping 235 kb/s of throughput - @devshgraphicsprogramming</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;We create and prime a 1M entry array of floats (&lt;code&gt;Float32Array&lt;/code&gt;) in JavaScript.&lt;/p&gt;
&lt;p&gt;We pass this via &lt;code&gt;invokeMethod&lt;/code&gt; as the only argument (&lt;code&gt;float[]&lt;/code&gt;) to a C# object method.&lt;/p&gt;
&lt;p&gt;A single invocation of the method takes 17 seconds, most of it before we even enter the C# method.&lt;/p&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;We would like to be somewhere close to Emscripten's C++ performance which is 2250x faster (all while using &lt;code&gt;Array&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;First of all making Float32Array JSON serializable would probably help (but ofc not ideal).&lt;/p&gt;
&lt;p&gt;235kb/s is less than:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;my 30 year old OG PCI slot running at 33Mhz&lt;/li&gt;
&lt;li&gt;almost less than USB 1.1&lt;/li&gt;
&lt;li&gt;a floppy disk&lt;/li&gt;
&lt;li&gt;my first ADSL internet connection when I moved to the UK&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Insights&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;converter_ssss&lt;/code&gt; munches through about 40MB of temporary memory allocations to serialize our 4MB of floats and pass them to emscripten.&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;p&gt;TODO: pending a push to our repository (will edit issue later)
https://github.com/Devsh-Graphics-Programming/GPU-With-C-Sharp-Angular-WASM&lt;/p&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;6.0&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;Reopens #26287&lt;/p&gt;
&lt;p&gt;This guy https://www.meziantou.net/optimizing-js-interop-in-a-blazor-webassembly-application.htm has a 100ms overhead on passing a small string around, I guess the issue has been around before but no one noticed how bad it is till now.&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 14:54:34 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44085</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44085</link>
      <title>Issue: Issue when YARP is combined into a "normal" app - @glatzert</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;After moving to .NET7, I found a problem, that occures, when YARP is part of the application.
Since it seems to be somewhere between YARP, ASP.Net core and .NET7, I like to bring it to your attention here.&lt;/p&gt;
&lt;p&gt;It makes using NET7 for use-cases with BFF driven by YARP &amp;quot;difficult&amp;quot; and ends up in lots of these:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;AmbiguousMatchException: The request matched multiple endpoints. Matches:

/Index
/Index
/Index
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Heres the Issue with repro https://github.com/microsoft/reverse-proxy/issues/1864&lt;/p&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;I'd expext YARP not to break by upgrading from .NET6 to .NET7&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;p&gt;https://github.com/glatzert/YARPBug&lt;/p&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;7.0.100-rc.1.22431.12&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 12:26:02 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44084</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44084</link>
      <title>Issue: force full render / avoid differential render flag - @omuleanu</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Is your feature request related to a problem? Please describe the problem.&lt;/h3&gt;
&lt;p&gt;I'm doing drag-and-drop using js, which does manipulate the DOM, and after &lt;code&gt;StateHasChanged()&lt;/code&gt; it won't render correctly.&lt;/p&gt;
&lt;p&gt;I can avoid DOM manipulations (revert some necessary DOM changes) but this will create a &lt;strong&gt;blink&lt;/strong&gt; effect after Drop.&lt;/p&gt;
&lt;h3&gt;Describe the solution you'd like&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;div @ForceFullRender=&amp;quot;@boolValue&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Additional context&lt;/h3&gt;
&lt;p&gt;my current drag-and-drop where I avoid manipulating DOM, and getting Blink
https://imgur.com/d0DX1A7&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 12:07:01 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44083</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44083</link>
      <title>Issue: WebApplication.RunAsync does not accept a cancellation token - @alex-ht-work</title>
      <description>&lt;p&gt;The documentation says: &amp;quot;Runs an application and returns a Task that only completes when the token is triggered or shutdown is triggered&amp;quot;, But the token is not in the method parameters.&lt;/p&gt;
&lt;p&gt;The underlying &lt;code&gt;HostingAbstractionsHostExtensions.RunAsync&lt;/code&gt; accepts a token, so it is not a problem to pass it, it was probably just  forgotten.&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 11:40:47 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44082</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44082</link>
      <title>Issue: Microsoft.AspNetCore.Owin.OwinEnvironment doesn't implement CopyTo which breaks owin's UseErrorPage - @CZEMacLeod</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;Since &lt;code&gt;void ICollection&amp;lt;KeyValuePair&amp;lt;string, object&amp;gt;&amp;gt;.CopyTo(KeyValuePair&amp;lt;string, object&amp;gt;[] array, int arrayIndex)&lt;/code&gt; is not implemented &lt;a href="https://github.com/dotnet/aspnetcore/blob/cbce9de4a41abdfaeb1b7f2c299564ca0cf15e3e/src/Http/Owin/src/OwinEnvironment.cs#L255"&gt;here&lt;/a&gt;.
This causes problems with Linq methods used on &lt;code&gt;Environment&lt;/code&gt;.
If we use something like &lt;code&gt;Microsoft.Owin.Diagnostics&lt;/code&gt;'s &lt;code&gt;UseErrorPage&lt;/code&gt; with ShowEnvironment we get a crash in the view rendering.&lt;/p&gt;
&lt;p&gt;This is because the view uses&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-cs"&gt;@foreach (var kv in Model.Environment.OrderBy(kv =&amp;gt; kv.Key))
{
    &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;@kv.Key&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;@kv.Value&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using &lt;code&gt;OrderBy&lt;/code&gt; causes &lt;code&gt;CopyTo&lt;/code&gt; to be invoked.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;System.NotImplementedException: The method or operation is not implemented.
         at Microsoft.AspNetCore.Owin.OwinEnvironment.System.Collections.Generic.ICollection&amp;lt;System.Collections.Generic.KeyValuePair&amp;lt;System.String,System.Object&amp;gt;&amp;gt;.CopyTo(KeyValuePair`2[] array, Int32 arrayIndex)
         at System.Collections.Generic.EnumerableHelpers.ToArray[T](IEnumerable`1 source, Int32&amp;amp; length)
         at System.Linq.Buffer`1..ctor(IEnumerable`1 source)
         at System.Linq.OrderedEnumerable`1.GetEnumerator()+MoveNext()
         at My.Owin.Test.OwinStartUp.StartUp.&amp;lt;Configuration2&amp;gt;b__0_1(IOwinContext context)
         at Microsoft.Owin.Diagnostics.ErrorPageMiddleware.Invoke(IDictionary`2 environment) in /_/src/Microsoft.Owin.Diagnostics/ErrorPageMiddleware.cs:line 59
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note this is on net6.0.9 with Owin 4.2.2&lt;/p&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;I would expect CopyTo to be implemented so that Linq queries against Environment work as expected, possibly by using the existing GetEnumerator function.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-cs"&gt;	void ICollection&amp;lt;KeyValuePair&amp;lt;string, object&amp;gt;&amp;gt;.CopyTo(KeyValuePair&amp;lt;string, object&amp;gt;[] array, int arrayIndex)
	{
		foreach(var kv in this)
		{
			array[arrayIndex++] = kv;
			if (arrayIndex == array.Length) break;
		}
	}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;p&gt;https://github.com/CZEMacLeod/AspNetCoreOwinEnvironmentIssue&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-cs"&gt;
using Microsoft.Owin.Builder;
using Owin;

var builder = WebApplication.CreateBuilder(args);
var app = builder.Build();

app.UseOwin(setup =&amp;gt; setup(next =&amp;gt;
{
	var owinAppBuilder = new AppBuilder();
	owinAppBuilder.Run(async context =&amp;gt;
	{
		context.Response.ContentType = &amp;quot;text/plain&amp;quot;;
		await context.Response.WriteAsync(&amp;quot;Environment\r\n&amp;quot;);
		foreach (var kv in context.Environment
			//.AsEnumerable()
			//.Select(kv =&amp;gt; new KeyValuePair&amp;lt;string, object?&amp;gt;(kv.Key, kv.Value))
			//.ToList()
			.OrderBy(kv =&amp;gt; kv.Key))
		{
			await context.Response.WriteAsync(kv.Key);
			await context.Response.WriteAsync(&amp;quot; : &amp;quot;);
			await context.Response.WriteAsync(kv.Value?.ToString() ?? String.Empty);
			await context.Response.WriteAsync(&amp;quot;\r\n&amp;quot;);
		}
	});

	return owinAppBuilder.Build&amp;lt;Func&amp;lt;IDictionary&amp;lt;string, object&amp;gt;, Task&amp;gt;&amp;gt;();
}));

app.Run();

&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;System.NotImplementedException: The method or operation is not implemented.
   at Microsoft.AspNetCore.Owin.OwinEnvironment.System.Collections.Generic.ICollection&amp;lt;System.Collections.Generic.KeyValuePair&amp;lt;System.String,System.Object&amp;gt;&amp;gt;.CopyTo(KeyValuePair`2[] array, Int32 arrayIndex)
   at System.Collections.Generic.EnumerableHelpers.ToArray[T](IEnumerable`1 source, Int32&amp;amp; length)
   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)
   at System.Linq.OrderedEnumerable`1.GetEnumerator()+MoveNext()
   at Program.&amp;lt;&amp;gt;c.&amp;lt;&amp;lt;&amp;lt;Main&amp;gt;$&amp;gt;b__0_2&amp;gt;d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Owin.WebSocketAcceptAdapter.&amp;lt;&amp;gt;c__DisplayClass6_0.&amp;lt;&amp;lt;AdaptWebSockets&amp;gt;b__0&amp;gt;d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.ExecuteWithFilterAsync(IHttpSocketAdapter injectScriptSocket, String requestId, HttpContext httpContext)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
The program '[101316] OwinEnvironmentIssue.exe' has exited with code 4294967295 (0xffffffff).
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;7.0.100-preview.7.22377.5&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;Microsoft.AspNetCore.App 6.0.9
net6.0
VS2022 17.3.4&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 10:19:20 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44095</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44095</link>
      <title>Issue: [NetSDKE2E]With NET7 RC2 installed, a duplicate template display in dotnet new --list - @vdanche</title>
      <description>&lt;p&gt;Environment: 7.0.100-rc.2.22466.28(runtime-7.0.0-rc.2.22464.1)
Repro steps:
1.Install 7.0.100-rc.2.22466.28(runtime-7.0.0-rc.2.22464.1) on Loc OS
2. dotnet new --list in CLI.
3. check the template displaying&lt;/p&gt;
&lt;p&gt;Actual Result:
a duplicate template display in dotnet new --list&lt;/p&gt;
&lt;p&gt;EN:
&lt;img src="https://user-images.githubusercontent.com/65637796/191227682-8639014e-d16d-4210-9c0b-7a245d5e4966.png" alt="image" /&gt;&lt;/p&gt;
&lt;p&gt;DE:
&lt;img src="https://user-images.githubusercontent.com/65637796/191227821-c385ef87-d338-46ef-8e1f-a94b40bdd2db.png" alt="image" /&gt;&lt;/p&gt;
&lt;p&gt;JP:
&lt;img src="https://user-images.githubusercontent.com/65637796/191228002-fa44e26a-d987-42a2-b135-2a62836af67b.png" alt="image" /&gt;&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 09:56:10 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44071</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44071</link>
      <title>Issue: Blazor WASM routing issue - @Julien-Marpault</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;I'm working on a blazor WASM app with a base url of http://foo.com.
in this app I have a link&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;a hred=&amp;quot;/books&amp;quot;&amp;gt; books &amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;when clicking the link te page is loaded, but all async calls are not awaited ( call to my apis for exemple)&lt;/p&gt;
&lt;p&gt;if the base url is http://whatever.foo.com everything works perfectly.&lt;/p&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;.Net 7 RC1&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;Visual studio 2022 last preview version&lt;/p&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 23:18:28 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44067</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44067</link>
      <title>Issue: Blazor server page route template "catch-all" gives error in case of double asterisk in the pattern - @FabioPagano</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[x] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;In Blazor Server if in the standard project template I add a catch-all route with a double asterisk (eg. @page &amp;quot;/foo/{**path}&amp;quot;) the error &amp;quot;Object reference not set to an instance of an object.&amp;quot; appears when I execute the program.&lt;/p&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;No error should appear. The &amp;quot;catch-all&amp;quot; double asterisk explaination is present in &lt;a href="https://learn.microsoft.com/en-us/aspnet/core/fundamentals/routing?view=aspnetcore-6.0"&gt;https://learn.microsoft.com/en-us/aspnet/core/fundamentals/routing?view=aspnetcore-6.0&lt;/a&gt; (section &amp;quot;Route templates&amp;quot; - round-trip path separator characters).&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;p&gt;Create a new Blazor Server project, then in &amp;quot;Pages/Index.razor&amp;quot; under the line @page &amp;quot;/&amp;quot; add the following line:
@page &amp;quot;/foo/{**path}&amp;quot;
Then execute the program and see the exception.&lt;/p&gt;
&lt;p&gt;Simple repro:
https://github.com/FabioPagano/testdoubleasterisk&lt;/p&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;Object reference not set to an instance of an object.
at Microsoft.AspNetCore.Components.Routing.Router.Refresh(Boolean isNavigationIntercepted)
at Microsoft.AspNetCore.Components.Routing.Router.&lt;SetParametersAsync&gt;d__56.MoveNext()
at Microsoft.AspNetCore.Components.Rendering.HtmlRenderer.HandleException(Exception exception)
at Microsoft.AspNetCore.Components.RenderTree.Renderer.HandleExceptionViaErrorBoundary(Exception error, ComponentState errorSourceOrNull)
at Microsoft.AspNetCore.Components.RenderTree.Renderer.AddToPendingTasks(Task task, ComponentState owningComponentState)
at Microsoft.AspNetCore.Components.Rendering.ComponentState.SupplyCombinedParameters(ParameterView directAndCascadingParameters)
at Microsoft.AspNetCore.Components.Rendering.ComponentState.SetDirectParameters(ParameterView parameters)
at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.InitializeNewComponentFrame(DiffContext&amp;amp; diffContext, Int32 frameIndex)
at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.InitializeNewSubtree(DiffContext&amp;amp; diffContext, Int32 frameIndex)
at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.InsertNewFrame(DiffContext&amp;amp; diffContext, Int32 newFrameIndex)
at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext&amp;amp; diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)
at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.ComputeDiff(Renderer renderer, RenderBatchBuilder batchBuilder, Int32 componentId, ArrayRange&lt;code&gt;1 oldTree, ArrayRange&lt;/code&gt;1 newTree)
at Microsoft.AspNetCore.Components.Rendering.ComponentState.RenderIntoBatch(RenderBatchBuilder batchBuilder, RenderFragment renderFragment, Exception&amp;amp; renderFragmentException)
at Microsoft.AspNetCore.Components.RenderTree.Renderer.ProcessRenderQueue()
--- End of stack trace from previous location ---
at Microsoft.AspNetCore.Components.Rendering.HtmlRenderer.HandleException(Exception exception)
at Microsoft.AspNetCore.Components.RenderTree.Renderer.ProcessRenderQueue()
at Microsoft.AspNetCore.Components.RenderTree.Renderer.ProcessPendingRender()
at Microsoft.AspNetCore.Components.RenderTree.Renderer.AddToRenderQueue(Int32 componentId, RenderFragment renderFragment)
at Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged()
at Microsoft.AspNetCore.Components.ComponentBase.CallOnParametersSetAsync()
at Microsoft.AspNetCore.Components.ComponentBase.&lt;RunInitAndSetParametersAsync&gt;d__20.MoveNext()
at Microsoft.AspNetCore.Components.Rendering.HtmlRenderer.HandleException(Exception exception)
at Microsoft.AspNetCore.Components.RenderTree.Renderer.HandleExceptionViaErrorBoundary(Exception error, ComponentState errorSourceOrNull)
at Microsoft.AspNetCore.Components.RenderTree.Renderer.AddToPendingTasks(Task task, ComponentState owningComponentState)
at Microsoft.AspNetCore.Components.Rendering.ComponentState.SupplyCombinedParameters(ParameterView directAndCascadingParameters)
at Microsoft.AspNetCore.Components.Rendering.ComponentState.SetDirectParameters(ParameterView parameters)
at Microsoft.AspNetCore.Components.RenderTree.Renderer.&lt;RenderRootComponentAsync&gt;d__39.MoveNext()
at Microsoft.AspNetCore.Components.Rendering.HtmlRenderer.&lt;CreateInitialRenderAsync&gt;d__17.MoveNext()
at Microsoft.AspNetCore.Components.Rendering.HtmlRenderer.&lt;RenderComponentAsync&gt;d__8.MoveNext()
at Microsoft.AspNetCore.Components.Rendering.RendererSynchronizationContext.&amp;lt;&amp;gt;c__11`1.&amp;lt;&lt;InvokeAsync&gt;b__11_0&amp;gt;d.MoveNext()
at Microsoft.AspNetCore.Mvc.ViewFeatures.StaticComponentRenderer.&lt;PrerenderComponentAsync&gt;d__4.MoveNext()
at Microsoft.AspNetCore.Mvc.ViewFeatures.ComponentRenderer.&lt;PrerenderedServerComponentAsync&gt;d__11.MoveNext()
at Microsoft.AspNetCore.Mvc.ViewFeatures.ComponentRenderer.&lt;RenderComponentAsync&gt;d__6.MoveNext()
at Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.&lt;ProcessAsync&gt;d__21.MoveNext()
at Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner.&amp;lt;&lt;RunAsync&gt;g__Awaited|0_0&amp;gt;d.MoveNext()
at TestDoubleAsterisk.Pages.Pages__Host.&lt;ExecuteAsync&gt;d__7.MoveNext() in C:_eic\test\TestDoubleAsterisk\TestDoubleAsterisk\Pages_Host.cshtml:line 8&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;6.0.401&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;Microsoft Visual Studio Enterprise 2022 (64-bit) - Version 17.3.4&lt;/p&gt;
&lt;p&gt;.NET runtimes installed:
Microsoft.AspNetCore.All 2.1.25 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
Microsoft.AspNetCore.All 2.1.30 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
Microsoft.AspNetCore.App 2.1.25 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 2.1.30 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 3.1.10 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 3.1.12 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 3.1.25 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 3.1.28 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 3.1.29 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 5.0.1 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 5.0.3 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 5.0.4 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 5.0.7 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 5.0.10 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 5.0.17 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 6.0.5 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 6.0.8 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.AspNetCore.App 6.0.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
Microsoft.NETCore.App 2.1.25 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 2.1.30 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 3.1.10 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 3.1.12 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 3.1.25 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 3.1.28 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 3.1.29 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 5.0.1 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 5.0.3 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 5.0.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 5.0.7 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 5.0.10 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 5.0.17 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 6.0.4 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 6.0.5 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 6.0.8 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.NETCore.App 6.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
Microsoft.WindowsDesktop.App 3.1.12 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 3.1.25 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 3.1.28 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 3.1.29 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 5.0.3 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 5.0.4 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 5.0.10 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 5.0.17 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 6.0.4 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 6.0.5 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 6.0.8 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
Microsoft.WindowsDesktop.App 6.0.9 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]&lt;/p&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 22:11:28 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44064</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44064</link>
      <title>Issue: DotNetObjectReference multiple instances created, only last one disposed - @omuleanu</title>
      <description>&lt;p&gt;I see in docs you have code that only disposes the last instance of &lt;code&gt;DotNetObjectReference&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@page &amp;quot;/call-dotnet-example-2&amp;quot;
...
    &amp;lt;button @onclick=&amp;quot;TriggerDotNetInstanceMethod&amp;quot;&amp;gt;
        Trigger .NET instance method
...
@code {
  ...
    public async Task TriggerDotNetInstanceMethod()
    {
        objRef = DotNetObjectReference.Create(this);
        result = await JS.InvokeAsync&amp;lt;string&amp;gt;(&amp;quot;sayHello1&amp;quot;, objRef);
    }
    public void Dispose()
    {
        objRef?.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You're calling &lt;code&gt;DotNetObjectReference.Create&lt;/code&gt; on each button click, so &lt;code&gt;Dispose&lt;/code&gt; will only execute on the last created instance.
Is that an issue ?&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;also I see here:
https://docs.microsoft.com/en-us/dotnet/api/microsoft.jsinterop.dotnetobjectreference-1?view=aspnetcore-6.0&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;the reference must later be disposed by JS code or by .NET code&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;can you dispose the DotNetObjectReference in JS or it is an error in the doc ?&lt;/p&gt;
&lt;p&gt;cc: @guardrex https://github.com/dotnet/AspNetCore.Docs/issues/27036&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;6&lt;/p&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 19:27:40 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44062</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44062</link>
      <title>Issue: BlazorServer doesn't release circuits/component instances after 25mins+forced GC2 - @chrdlx</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;Blazor component instances and circuit objects/instances don't seem to be released from memory after 25+ minutes and forced 2nd generation garbage collection using the basic out of the box Blazor Server template.  I tried to follow the recommendations from @javiercn in this post https://github.com/dotnet/aspnetcore/issues/30210#issuecomment-779849309 to test this.&lt;/p&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;The amount of Counter instances &amp;amp; Circuits should go to zero after 10/20/30 minutes and a forced garbage collection &lt;code&gt;( GC.Collect(2, GCCollectionMode.Forced);).&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Create a default Blazor Server template app in Visual Studio 17.4.0 Preview 2.&lt;/li&gt;
&lt;li&gt;Go to the Counter.razor component and change the method to&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;private void IncrementCount() { GC.Collect(2, GCCollectionMode.Forced); }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;as recommended by @javiercn here https://github.com/dotnet/aspnetcore/issues/30210#issuecomment-779849309   so we can force a GC collect after 20 minutes.&lt;/p&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Set the build mode to *Release&lt;/li&gt;
&lt;li&gt;Execute the application&lt;/li&gt;
&lt;li&gt;Click on the Counter tab button so we navigate to the counter page.&lt;/li&gt;
&lt;li&gt;Now on the counter page, press F5 (refresh page) 10 times.&lt;/li&gt;
&lt;li&gt;Open the Diagnostics Tool in VS and take a memory snapshot.&lt;/li&gt;
&lt;li&gt;Search in the snapshot for *Counter and *Circuits.circuit&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/20750172/191066861-069a1a5e-c369-4511-8181-015ef010b058.png" alt="image" /&gt;
and
&lt;img src="https://user-images.githubusercontent.com/20750172/191066977-3d713a58-5541-4a00-b862-a2d646123659.png" alt="image" /&gt;&lt;/p&gt;
&lt;p&gt;So you can see there're 11 instances (1 web request + 10 refreshes) of the component as expected in memory, and the related circuits.&lt;/p&gt;
&lt;ol start="9"&gt;
&lt;li&gt;&lt;p&gt;Wait 10 minutes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Take a new snapshot.
&lt;img src="https://user-images.githubusercontent.com/20750172/191069533-da5d628e-5313-4b2b-9e36-5f481af39da7.png" alt="image" /&gt;
&lt;img src="https://user-images.githubusercontent.com/20750172/191069623-1cbe388f-2a1f-4deb-a400-6ea36fca01bf.png" alt="image" /&gt;
Component instances &amp;amp; circuits still there after 10 minutes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wait another 10 minutes (just in case)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Take a new snapshot&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/20750172/191072164-32bccb8c-2f7f-4fc2-a4cd-28b1300f57ee.png" alt="image" /&gt;
&lt;img src="https://user-images.githubusercontent.com/20750172/191072238-843e39f0-72dc-40cf-bcf4-7eec48f16a8c.png" alt="image" /&gt;&lt;/p&gt;
&lt;ol start="13"&gt;
&lt;li&gt;So we waited 20 minutes (the double recommended by javier), all the instances are still there... So now let's trigger a forced GC collect using the Counter button for which we changed the code:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/20750172/191072601-63717298-e81d-42af-9bad-a357d5a972f1.png" alt="image" /&gt;&lt;/p&gt;
&lt;p&gt;We can see a GC has occured.&lt;/p&gt;
&lt;ol start="14"&gt;
&lt;li&gt;Take another snapshot to see if after 25+ minutes and a forced GC,  Counter components &amp;amp; circuit instances have been released.
&lt;img src="https://user-images.githubusercontent.com/20750172/191072995-dd864499-57f8-49e2-b9bb-3a65fabd59bf.png" alt="image" /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/20750172/191073058-2c08f150-9726-43e5-aa1e-f8afa297772d.png" alt="image" /&gt;&lt;/p&gt;
&lt;p&gt;So nothing has changed,  11 instances are still there after almost half an hour, and a forced GC.&lt;/p&gt;
&lt;p&gt;Just in case I forced GC a couple more times.
&lt;img src="https://user-images.githubusercontent.com/20750172/191073245-14a26aa6-a57c-415f-9369-6fa804ebc47d.png" alt="image" /&gt;&lt;/p&gt;
&lt;p&gt;Still nothing is released.&lt;/p&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;7.0.100-rc.1.22431.12&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;What I've tried to see if this gets fixed:&lt;/p&gt;
&lt;p&gt;1)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; builder.Services.AddServerSideBlazor(options =&amp;gt; {
                options.DisconnectedCircuitMaxRetained = 0;
                options.DisconnectedCircuitRetentionPeriod = TimeSpan.FromSeconds(0);
            });
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="2"&gt;
&lt;li&gt;&lt;p&gt;Changing the GC mode to Workstation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Debug &amp;amp; Release modes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Closed the browser completely (but left the server running).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Nothing seems to make .NET to release Counter component instances &amp;amp; circuits after half an hour.&lt;/p&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 17:23:12 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44060</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44060</link>
      <title>Issue: .NET 7 RC1 blazor WASM size regression - @jirisykora83</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;I try to update .NET 6 prototype to .NET 7 RC1 and i notice significant size increase is that expected with .NET 7?&lt;/p&gt;
&lt;p&gt;dotnet.wasm.br went from ~786.9 KiB to ~952.9 KiB
System.Private.CoreLib.dll.br 403.9 KiB -&amp;gt; 510.6 KiB
_framework/icudt_EFIGS.dat.br 145.7 KiB -&amp;gt; 194.6 KiB&lt;/p&gt;
&lt;p&gt;Overall increase from 3,672 KiB -&amp;gt; 4,325 KiB&lt;/p&gt;
&lt;img width="349" alt="image" src="https://user-images.githubusercontent.com/7279825/191059436-47670df9-b6b1-4b00-ae2c-21c50881d871.png"&gt;
&lt;img width="346" alt="image" src="https://user-images.githubusercontent.com/7279825/191059475-c5cd8457-47a1-4dbf-8a08-a890f56c53db.png"&gt;
&lt;p&gt;Also I notice that &lt;code&gt;--blazor-load-percentage&lt;/code&gt; is added to HTML tag and it seems base on build in browser profiler that is cause &amp;quot;Recalculate style&amp;quot; several times during loading. This isnt issue when it is standard WASM app but with prerendering enable its add some delay (correct me if I am wrong).&lt;/p&gt;
&lt;img width="560" alt="image" src="https://user-images.githubusercontent.com/7279825/191058599-e7862483-7988-45a7-b1fd-f32f97c6c023.png"&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;I expect that new version of .NET improve both performance and size of the app.&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;7.0.100-rc.1.22431.12&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 15:51:53 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44057</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44057</link>
      <title>Issue: Receive an error alert pop when I debug a fresh BlazorWasm app in VS Code - @jammerware</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;When I attempt to debug a freshly-created BlazorWasm app, the debug browser appears, but my app is not loaded, and I get the alert shown below.&lt;/p&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;Expect no error alert after the debug browser is open and my app to be loaded by the browser for debugging.&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Install the version of .NET Core described below.&lt;/li&gt;
&lt;li&gt;Install Visual Studio Code in user setup configuration.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;dotnet new blazorwasm -o SomeDirectory&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open VS Code in SomeDirectory&lt;/li&gt;
&lt;li&gt;Press F5.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;Excuse the screenshot, but I can't seem to get this text from anywhere else when the problem occurs:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/296034/191036072-e4372503-e1a4-4498-bec2-9959b247a739.png" alt="image" /&gt;&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;6.0.401&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;h2&gt;IDE&lt;/h2&gt;
&lt;p&gt;Visual Studio Code 1.71.2 (user setup)&lt;/p&gt;
&lt;h2&gt;&lt;code&gt;dotnet --info&lt;/code&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;$ dotnet --info
.NET SDK (reflecting any global.json):
 Version:   6.0.401
 Commit:    0906eae6f8

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.19044
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\6.0.401\

global.json file:
  Not found

Host:
  Version:      6.0.9
  Architecture: x64
  Commit:       163a63591c

.NET SDKs installed:
  6.0.401 [C:\Program Files\dotnet\sdk]

.NET runtimes installed:
  Microsoft.AspNetCore.App 6.0.9 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 6.0.9 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 6.0.9 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]

Download .NET:
  https://aka.ms/dotnet-download

Learn about .NET Runtimes and SDKs:
  https://aka.ms/dotnet/runtimes-sdk-info
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;My &lt;code&gt;properties/launchSettings.json&lt;/code&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code class="language-json"&gt;{
  &amp;quot;iisSettings&amp;quot;: {
    &amp;quot;windowsAuthentication&amp;quot;: false,
    &amp;quot;anonymousAuthentication&amp;quot;: true,
    &amp;quot;iisExpress&amp;quot;: {
      &amp;quot;applicationUrl&amp;quot;: &amp;quot;http://localhost:45599&amp;quot;,
      &amp;quot;sslPort&amp;quot;: 44323
    }
  },
  &amp;quot;profiles&amp;quot;: {
    &amp;quot;HiBlazor&amp;quot;: {
      &amp;quot;commandName&amp;quot;: &amp;quot;Project&amp;quot;,
      &amp;quot;dotnetRunMessages&amp;quot;: true,
      &amp;quot;launchBrowser&amp;quot;: true,
      &amp;quot;inspectUri&amp;quot;: &amp;quot;{wsProtocol}://{url.hostname}:{url.port}/_framework/debug/ws-proxy?browser={browserInspectUri}&amp;quot;,
      &amp;quot;applicationUrl&amp;quot;: &amp;quot;https://localhost:7258;http://localhost:5178&amp;quot;,
      &amp;quot;environmentVariables&amp;quot;: {
        &amp;quot;ASPNETCORE_ENVIRONMENT&amp;quot;: &amp;quot;Development&amp;quot;
      }
    },
    &amp;quot;IIS Express&amp;quot;: {
      &amp;quot;commandName&amp;quot;: &amp;quot;IISExpress&amp;quot;,
      &amp;quot;launchBrowser&amp;quot;: true,
      &amp;quot;inspectUri&amp;quot;: &amp;quot;{wsProtocol}://{url.hostname}:{url.port}/_framework/debug/ws-proxy?browser={browserInspectUri}&amp;quot;,
      &amp;quot;environmentVariables&amp;quot;: {
        &amp;quot;ASPNETCORE_ENVIRONMENT&amp;quot;: &amp;quot;Development&amp;quot;
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;My &lt;code&gt;.vscode/launch.json&lt;/code&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code class="language-json"&gt;{
    &amp;quot;version&amp;quot;: &amp;quot;0.2.0&amp;quot;,
    &amp;quot;configurations&amp;quot;: [
        {
            &amp;quot;name&amp;quot;: &amp;quot;Launch and Debug Standalone Blazor WebAssembly App&amp;quot;,
            &amp;quot;type&amp;quot;: &amp;quot;blazorwasm&amp;quot;,
            &amp;quot;request&amp;quot;: &amp;quot;launch&amp;quot;,
            &amp;quot;cwd&amp;quot;: &amp;quot;${workspaceFolder}&amp;quot;
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 14:07:52 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44053</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44053</link>
      <title>Issue: mimetype for br and gz files is missing from published web.config WASM app - @mrpmorris</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;I created a dotnet 6 WASM PWA app and published to  folder.  The resulting web.config does not have &lt;code&gt;mimeMap&lt;/code&gt; entries for &lt;code&gt;br&lt;/code&gt; or &lt;code&gt;gz&lt;/code&gt; files.&lt;/p&gt;
&lt;p&gt;So when I try to download the &lt;code&gt;br&lt;/code&gt; files, I get a 404.&lt;/p&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;6.0.304&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 12:32:48 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44049</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44049</link>
      <title>Issue: GH Issue label descriptions for severity-* labels - @gldraphael</title>
      <description>&lt;p&gt;Most labels in this repo's issue tracker are self explanatory. However, it'd be nice if someone could take the time to add Label Descriptions to the &lt;a href="https://github.com/dotnet/aspnetcore/labels?q=severity"&gt;severity labels&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thank you!&lt;/p&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 11:59:49 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44047</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44047</link>
      <title>Issue: Creating TestServer without WebApplicationFactory - @arialdomartini</title>
      <description>&lt;p&gt;Is is possible to create a pair of TestServer and TestClient without using &lt;code&gt;WebApplicationFactory&lt;/code&gt;?&lt;/p&gt;
&lt;p&gt;I tried with the following, but each call gets &amp;quot;404 Not Found&amp;quot;.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;internal class Program
{
    public static void Main()
    {
        var builder = CreateBuilder();

        var app = CreateApp(builder);

        app.Run();
    }

    internal static WebApplicationBuilder CreateBuilder()
    {
        var builder = WebApplication.CreateBuilder();

        builder.Services.AddControllers();
        builder.Services.AddEndpointsApiExplorer();
        builder.Services.AddSwaggerGen();

        builder.Services.AddScoped&amp;lt;DeploymentInfo.Controller&amp;gt;();
        return builder;
    }

    internal static WebApplication CreateApp(WebApplicationBuilder builder)
    {
        var app = builder.Build();

        app.UseHttpsRedirection();

        app.MapControllers();
        return app;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;with a dummy controller like:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;[ApiController]
public class Controller : ControllerBase
{
    [HttpGet(&amp;quot;foo&amp;quot;)]
    public IActionResult GetDeploymentInfo()
    {
        return new OkResult();
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, creating TestServer and TestClient with the following just works:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;[Fact]
async Task this_works()
{
    var webApplicationFactory = new WebApplicationFactory&amp;lt;Program&amp;gt;();

    var client = webApplicationFactory.CreateClient();

    var result = await client.GetAsync(&amp;quot;/foo&amp;quot;);

    Assert.Equal(HttpStatusCode.OK, result.StatusCode);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Instead, the following fails, as it gets &lt;code&gt;404 Not Found&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;[Fact]
async Task this_gets_404_Not_Found()
{
    var builder = Program.CreateBuilder();
    builder.WebHost.UseTestServer();
    var app = Program.CreateApp(builder);

    app.Start();

    var testClient = app.GetTestClient();

    var response = await testClient.GetAsync(&amp;quot;/foo&amp;quot;);
    
    Assert.Equal(HttpStatusCode.OK, response.StatusCode);

    await app.DisposeAsync();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The only 2 differences between this test and the production code are the lines&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;builder.WebHost.UseTestServer();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var testClient = app.GetTestClient();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I assumed that they were enough, but apparently something is missing.&lt;/p&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 11:06:10 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/aspnetcore/issues/44046</guid>
      <link>https://github.com/dotnet/aspnetcore/issues/44046</link>
      <title>Issue: Android SignalR Java Client - OnErrorNotImplementedException - @fi8er1</title>
      <description>&lt;h3&gt;Is there an existing issue for this?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[X] I have searched the existing issues&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;Recently started having this issue after updating the lib from 3.0.0 to 6.0.8, I can't seem to reproduce it myself, but it's being reported on the crashlytics and is gaining momentum.&lt;/p&gt;
&lt;p&gt;&lt;a href="url"&gt;https://github.com/dotnet/aspnetcore/blob/main/src/SignalR/clients/java/signalr/core/src/main/java/com/microsoft/signalr/HubConnection.java#L436-L442&lt;/a&gt; appears to be an oversight in the SignalR client: subscribe() without error handling here.&lt;/p&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No response&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Exceptions (if any)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Fatal Exception: io.reactivex.rxjava3.exceptions.OnErrorNotImplementedException: The exception was not handled due to missing onError handler in the subscribe() method call. Further reading: https://github.com/ReactiveX/RxJava/wiki/Error-Handling | java.lang.RuntimeException: java.net.SocketException: Socket closed at io.reactivex.rxjava3.internal.observers.EmptyCompletableObserver.onError(EmptyCompletableObserver.java:50) at io.reactivex.rxjava3.internal.operators.completable.CompletableAndThenCompletable$SourceObserver.onError(CompletableAndThenCompletable.java:62) at io.reactivex.rxjava3.internal.operators.completable.CompletableAndThenCompletable$NextObserver.onError(CompletableAndThenCompletable.java:104) at io.reactivex.rxjava3.internal.operators.completable.CompletableDoOnEvent$DoOnEvent.onError(CompletableDoOnEvent.java:64) at io.reactivex.rxjava3.subjects.CompletableSubject.onError(CompletableSubject.java:126) at com.microsoft.signalr.OkHttpWebSocketWrapper$SignalRWebSocketListener.onFailure(OkHttpWebSocketWrapper.java:141) at okhttp3.internal.ws.RealWebSocket.failWebSocket(RealWebSocket.kt:592) at okhttp3.internal.ws.RealWebSocket$connect$1.onResponse(RealWebSocket.kt:197) at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:519) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641) at java.lang.Thread.run(Thread.java:923)&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;.NET Version&lt;/h3&gt;
&lt;p&gt;6.0.9&lt;/p&gt;
&lt;h3&gt;Anything else?&lt;/h3&gt;
&lt;p&gt;I think this is related to: https://github.com/dotnet/aspnetcore/issues/23820
Regression?&lt;/p&gt;
&lt;p&gt;More info https://stackoverflow.com/questions/73754257/android-signalr-java-client-onerrornotimplementedexception&lt;/p&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 10:23:43 Z</pubDate>
    </item>
  </channel>
</rss>