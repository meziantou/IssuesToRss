<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>dotnet/roslyn Pull Requests</title>
    <description>Pull Requests from https://github.com/dotnet/roslyn, generated by https://github.com/meziantou/IssuesToRss/</description>
    <managingEditor>meziantousite@outlook.com</managingEditor>
    <ttl>60</ttl>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64245</guid>
      <link>https://github.com/dotnet/roslyn/pull/64245</link>
      <title>PR: Support `scoped` keyword in `using` statements. - @AlekseyTs</title>
      <description>&lt;p&gt;Related to #62039.
https://github.com/dotnet/csharplang/blob/main/proposals/low-level-struct-improvements.md#syntax&lt;/p&gt;
</description>
      <pubDate>Fri, 23 Sep 2022 15:24:33 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64242</guid>
      <link>https://github.com/dotnet/roslyn/pull/64242</link>
      <title>PR: Add support to avoid showing F1 help for TS diagnostics - @mavasani</title>
      <description>&lt;p&gt;Fixes #64145&lt;/p&gt;
&lt;p&gt;TS diagnostics do not help corresponding help links, so the default help navigation invokes F1 help for the diagnostic ID. F1 help returns 404 error code for all TS diagnostics, so they wish to avoid showing F1 help. This PR adds a special well-known custom tag to allow diagnostics to skip F1 help navigation.&lt;/p&gt;
</description>
      <pubDate>Fri, 23 Sep 2022 12:03:49 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64241</guid>
      <link>https://github.com/dotnet/roslyn/pull/64241</link>
      <title>PR: Improve ref assignment error message wording - @jjonescz</title>
      <description>&lt;p&gt;Fixes #62756 using suggestion from https://github.com/dotnet/roslyn/pull/64183#issuecomment-1255202829
Closes #64183&lt;/p&gt;
</description>
      <pubDate>Fri, 23 Sep 2022 10:35:35 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64240</guid>
      <link>https://github.com/dotnet/roslyn/pull/64240</link>
      <title>PR: Add a new Location.Create overload for external file location with a different mappedLineSpan - @mavasani</title>
      <description>&lt;p&gt;Closes #64236&lt;/p&gt;
&lt;p&gt;Proposal details in https://github.com/dotnet/roslyn/issues/64236#issue-1383197448&lt;/p&gt;
</description>
      <pubDate>Fri, 23 Sep 2022 10:23:02 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64232</guid>
      <link>https://github.com/dotnet/roslyn/pull/64232</link>
      <title>PR: Remove code that thinks it needs to close a document before removing - @jasonmalinowski</title>
      <description>&lt;p&gt;This hasn't been needed for many many years: https://github.com/dotnet/roslyn/pull/12308&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 23:36:16 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64231</guid>
      <link>https://github.com/dotnet/roslyn/pull/64231</link>
      <title>PR: Remove TextDocumentState.sourceText - @jasonmalinowski</title>
      <description>&lt;p&gt;First, some background: if we are opening a document, and the document is unchanged from the copy on disk, we try to reuse the version stamp from the disk version to avoid invalidating caches. If the file being opened has already been read, we have a fast path where we quickly compare against the prior text. If it's not read, we would then create a deferred text loader which would read the file on disk and then compare when somebody later asks for the version.&lt;/p&gt;
&lt;p&gt;This sourceText argument was to guarantee that if somebody were to synchronously ask for the text (and only the text) of a file that was just opened, and they didn't care about the version, we'd be able to get the text quickly without actually going through the TextLoader.&lt;/p&gt;
&lt;p&gt;It's unclear to me what benefit this really brings: if a file has already been read in the background, we'll take the fast path and none of this gets used. If the file hasn't been read previously, we'll be persisting a version that hasn't yet been observed -- but since we hadn't read the file nobody could have that version number to compare to.&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 23:16:17 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64229</guid>
      <link>https://github.com/dotnet/roslyn/pull/64229</link>
      <title>PR: Remove editor item from MatchResult  - @genlu</title>
      <description>&lt;p&gt;And a few other clean-ups&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 21:33:44 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64228</guid>
      <link>https://github.com/dotnet/roslyn/pull/64228</link>
      <title>PR: Revert "Deprecate usage of Workspace in TextLoader (breaking change)" - @333fred</title>
      <description>&lt;p&gt;Reverts dotnet/roslyn#63616. Seeing thousands of exceptions on VS insertion.&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 21:17:22 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64226</guid>
      <link>https://github.com/dotnet/roslyn/pull/64226</link>
      <title>PR: Remove unused TS brace completion code - @MariaSolOs</title>
      <description>&lt;p&gt;Since &lt;a href="https://devdiv.visualstudio.com/DevDiv/_git/TypeScript-VS/pullrequest/417608"&gt;this PR&lt;/a&gt; TypeScript is now using &lt;code&gt;language-configuration.json&lt;/code&gt; for brace completion and matching, so we don't need this service anymore.&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 21:01:33 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64223</guid>
      <link>https://github.com/dotnet/roslyn/pull/64223</link>
      <title>PR: EnC: Add a couple of filters to improve diagnosability of crash dumps - @tmat</title>
      <description />
      <pubDate>Thu, 22 Sep 2022 19:55:48 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64221</guid>
      <link>https://github.com/dotnet/roslyn/pull/64221</link>
      <title>PR: Remove exportProvider parameter from TestWorkspace ctor - @tmat</title>
      <description>&lt;p&gt;Test should pass in &lt;code&gt;TestComposition&lt;/code&gt; and then they can ask the &lt;code&gt;TestWorkspace&lt;/code&gt; for exported services.&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 17:50:10 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64214</guid>
      <link>https://github.com/dotnet/roslyn/pull/64214</link>
      <title>PR: Add support for reporting analyzer diagnostics in editorconfig files - @mavasani</title>
      <description>&lt;p&gt;Closes #64213&lt;/p&gt;
&lt;p&gt;Design proposal and public APIs discussed in https://github.com/dotnet/roslyn/issues/64213#issuecomment-1254764899&lt;/p&gt;
&lt;p&gt;With this change, analyzers can report diagnostics in editorconfig and globalconfig files, which will be reported both in CI and in the IDE. Additionally, analyzers can access raw source text and file paths for all editorconfig and globalconfig files that are being applied to the compilation from AnalyzerOptions exposed off all analysis contexts for all analyzer callbacks (similar to how they can currently access raw text and file paths of additional files).&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 10:08:08 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64209</guid>
      <link>https://github.com/dotnet/roslyn/pull/64209</link>
      <title>PR: Support `scoped` keyword in `foreach` statement. - @AlekseyTs</title>
      <description>&lt;p&gt;Related to #62039.
https://github.com/dotnet/csharplang/blob/main/proposals/low-level-struct-improvements.md#syntax&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 02:56:29 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64207</guid>
      <link>https://github.com/dotnet/roslyn/pull/64207</link>
      <title>PR: Skip some more tests that are currently failing on debug 32-bit - @jasonmalinowski</title>
      <description>&lt;p&gt;We have some unit tests that are failing on debug 32-bit only due to https://github.com/dotnet/roslyn/issues/64195, this skips them on debug so they aren't impacting CI.&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 00:16:41 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64204</guid>
      <link>https://github.com/dotnet/roslyn/pull/64204</link>
      <title>PR: Add multiple language support to stack trace explorer - @ryzngard</title>
      <description>&lt;p&gt;Fixes #62436&lt;/p&gt;
&lt;p&gt;We now support&lt;/p&gt;
&lt;p&gt;English
Czech
German
Spanish
French
Italian
Japanese
Korean
Polish
Portuguese (Brazil)
Russian
Chinese (Simplified)
Chinese (Traditional)&lt;/p&gt;
&lt;p&gt;If more languages need to be added later they should be fairly straightforward&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 00:02:59 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64202</guid>
      <link>https://github.com/dotnet/roslyn/pull/64202</link>
      <title>PR: Merge main into features/solutionEvents - @CyrusNajmabadi</title>
      <description />
      <pubDate>Wed, 21 Sep 2022 23:42:42 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64201</guid>
      <link>https://github.com/dotnet/roslyn/pull/64201</link>
      <title>PR: Emit `[module: RefSafetyRules]` attribute only if the module contains type declarations - @cston</title>
      <description>&lt;p&gt;Emit &lt;code&gt;[module: RefSafetyRules(11)]&lt;/code&gt; attribute when compiling with &lt;code&gt;-langversion:11&lt;/code&gt; or higher, or compiling with .NET 7 or higher, &lt;em&gt;only if the module contains type declarations&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;This avoids adding type declarations, in particular the synthesized &lt;code&gt;RefSafetyRulesAttribute&lt;/code&gt; type, to modules that would otherwise not contain type declarations, such as modules that contain type forwards only.&lt;/p&gt;
&lt;p&gt;See also https://github.com/dotnet/roslyn/pull/63916.&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 22:58:58 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64199</guid>
      <link>https://github.com/dotnet/roslyn/pull/64199</link>
      <title>PR: Skip some tests that are currently failing on debug 32-bit - @jasonmalinowski</title>
      <description>&lt;p&gt;We have some unit tests that are failing on debug 32-bit only due to https://github.com/dotnet/roslyn/issues/64195, this skips them on debug so they aren't impacting CI.&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 21:23:09 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64194</guid>
      <link>https://github.com/dotnet/roslyn/pull/64194</link>
      <title>PR: Switch to main thread before calling TryApplyChanges - @ryzngard</title>
      <description>&lt;p&gt;Fixes &lt;a href="https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/1595706"&gt;AB#1595706&lt;/a&gt;&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 20:25:58 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64193</guid>
      <link>https://github.com/dotnet/roslyn/pull/64193</link>
      <title>PR: Fix CI badges - @jasonmalinowski</title>
      <description>&lt;ol&gt;
&lt;li&gt;Point to dnceng-public now and update job numbers&lt;/li&gt;
&lt;li&gt;Update various job names that have changed&lt;/li&gt;
&lt;li&gt;Add new columns for new job types&lt;/li&gt;
&lt;/ol&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 19:18:39 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64192</guid>
      <link>https://github.com/dotnet/roslyn/pull/64192</link>
      <title>PR: TextLoader method override detection - @tmat</title>
      <description>&lt;p&gt;Implements pattern used by BCL to deprecate public abstract methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Update old method to call the new method.&lt;/li&gt;
&lt;li&gt;Change &lt;code&gt;abstract&lt;/code&gt; to &lt;code&gt;virtual&lt;/code&gt; if needed&lt;/li&gt;
&lt;li&gt;New method:
&lt;ul&gt;
&lt;li&gt;Use reflection to ask if the old method was overridden.&lt;/li&gt;
&lt;li&gt;If it was overridden, call it, otherwise call old method.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can still stack overflow if the old method is overridden but calls the base implementation.&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 18:56:08 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64190</guid>
      <link>https://github.com/dotnet/roslyn/pull/64190</link>
      <title>PR: Add ScopedKind to IParameterSymbol and ILocalSymbol - @cston</title>
      <description>&lt;p&gt;See https://github.com/dotnet/roslyn/issues/61647.&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 18:43:48 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64187</guid>
      <link>https://github.com/dotnet/roslyn/pull/64187</link>
      <title>PR: Update localization-suggestion.md - @JoeRobich</title>
      <description>&lt;p&gt;I wanted to draw more attention to the instructions the Roslyn team should follow for localization suggestions.&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 17:14:38 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64186</guid>
      <link>https://github.com/dotnet/roslyn/pull/64186</link>
      <title>PR: Use warnings for escape analysis in unsafe context - @jcouv</title>
      <description>&lt;p&gt;Relates to https://github.com/dotnet/csharplang/issues/6476&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 16:32:28 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64183</guid>
      <link>https://github.com/dotnet/roslyn/pull/64183</link>
      <title>PR: Fix confusing `ref` usage error messages - @jjonescz</title>
      <description>&lt;p&gt;Fixes #62756&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 12:35:16 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64180</guid>
      <link>https://github.com/dotnet/roslyn/pull/64180</link>
      <title>PR: Fix regression in error list updates - @mavasani</title>
      <description>&lt;p&gt;Fixes &lt;a href="https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1618061"&gt;AB#1618061&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This was introduced by me with #63130. Earlier we used to cache full document diagnostics computed only from background analysis, which also handles updating the error list simulataneously. With the above PR, we also do this caching from other code paths if we are computing full document diagnostics (diagnostic tagger, LSP pull diags, etc.), but we don't raise events to update the error list from these code paths - basically the code added here: https://github.com/mavasani/roslyn/blob/cd5e6895d3dc8dfad270505b37d28be70077a645/src/Features/LanguageServer/Protocol/Features/Diagnostics/EngineV2/DiagnosticIncrementalAnalyzer_GetDiagnosticsForSpan.cs#L323-L329. So when background analysis gets to refreshing the document diagnostics, it founds cached items and ends up not updating the error list.&lt;/p&gt;
&lt;p&gt;With this PR, we now cache the computed full document diagnostics in the new code paths only in LSP pull diagnostics mode. Verified that the repro in the above bug is fixed after this change.&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 12:01:58 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64179</guid>
      <link>https://github.com/dotnet/roslyn/pull/64179</link>
      <title>PR: Format parameters as names in error messages - @jjonescz</title>
      <description>&lt;p&gt;Fixes #62096&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 11:29:40 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64176</guid>
      <link>https://github.com/dotnet/roslyn/pull/64176</link>
      <title>PR: Reduce GetTypeByMetadataName allocations for fail-path - @Youssef1313</title>
      <description>&lt;p&gt;Fixes #64142&lt;/p&gt;
&lt;p&gt;Per my understanding, this is the root cause of https://github.com/unoplatform/uno/issues/7506&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 09:33:53 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64172</guid>
      <link>https://github.com/dotnet/roslyn/pull/64172</link>
      <title>PR: Try to reduce JIT costs for AbstractLogAggregator - @jasonmalinowski</title>
      <description>&lt;p&gt;We're seeing some heavier JIT costs for derived types of AbstractLogAggregator because we often instantiate the types with a TKey that is a value type; the CLR always has to JIT separate native code for each value type being used since the code can't be shared. Since the JIT cost is providing to be larger than we'd like, this changes the underlying dictionary to be a ConcurrentDictionary where both generic parameters are strongly typed as reference types, which the JIT is able to reuse. TKey is changed to an object (where we will now pay boxing costs), and TValue is simply constrained to be a class since in practice it always was.&lt;/p&gt;
&lt;p&gt;Fixes &lt;a href="https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/1580049"&gt;AB#1580049&lt;/a&gt;&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 03:03:51 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64164</guid>
      <link>https://github.com/dotnet/roslyn/pull/64164</link>
      <title>PR: Introduce the new EA extensibility points for UnitTesting to actually implement/export to light up in the forked solution crawler. - @CyrusNajmabadi</title>
      <description />
      <pubDate>Tue, 20 Sep 2022 23:57:36 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64163</guid>
      <link>https://github.com/dotnet/roslyn/pull/64163</link>
      <title>PR: don't run compiler-only tests unless there is a compiler change - @jmarolf</title>
      <description />
      <pubDate>Tue, 20 Sep 2022 23:52:47 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64161</guid>
      <link>https://github.com/dotnet/roslyn/pull/64161</link>
      <title>PR: Remove the ILegacyWorkspaceDescriptor concept - @CyrusNajmabadi</title>
      <description />
      <pubDate>Tue, 20 Sep 2022 23:26:28 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64160</guid>
      <link>https://github.com/dotnet/roslyn/pull/64160</link>
      <title>PR: Solution services cleanup - @tmat</title>
      <description />
      <pubDate>Tue, 20 Sep 2022 23:19:21 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64159</guid>
      <link>https://github.com/dotnet/roslyn/pull/64159</link>
      <title>PR: Cherrypick for 17.3: Fix potential deadlock if we are previewing a rename change - @Cosifne</title>
      <description>&lt;p&gt;Cherrypick from https://github.com/dotnet/roslyn/pull/63652&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 22:57:59 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64158</guid>
      <link>https://github.com/dotnet/roslyn/pull/64158</link>
      <title>PR: Use workspace services to implement test hooks - @tmat</title>
      <description>&lt;p&gt;... instead of directly manipulating workspace instance&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 22:21:35 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64156</guid>
      <link>https://github.com/dotnet/roslyn/pull/64156</link>
      <title>PR: use xunit apis for test discovery - @jmarolf</title>
      <description>&lt;p&gt;This change uses xUnit directly to discover tests instead of using the TestPlatform apis&lt;/p&gt;
&lt;p&gt;| Build | Current | With Change |
|-------|---------|-------------|
| Build_Windows_Debug | &lt;img width="174" alt="current Build_Windows_Debug" src="https://user-images.githubusercontent.com/9797472/191381142-3d6b752b-6166-436e-9b20-2f7e1c2b0ad0.png"&gt; | &lt;img width="175" alt="Build_Windows_Debug with changes" src="https://user-images.githubusercontent.com/9797472/191381223-ad1a6f65-561c-49b0-87e6-24fe41c94928.png"&gt; |
| Build_Windows_Release | &lt;img width="175" alt="current Build_Windows_Release" src="https://user-images.githubusercontent.com/9797472/191381309-39f6bcf7-7dda-43ec-9cc2-91d4ac21a5b1.png"&gt; | &lt;img width="180" alt="Build_Windows_Release with changes" src="https://user-images.githubusercontent.com/9797472/191381343-63cae05f-f14a-49c8-bc7e-b2edad139424.png"&gt; |
| Build_Unix_Debug | &lt;img width="179" alt="image" src="https://user-images.githubusercontent.com/9797472/191381449-89ac1302-7c52-4e41-b4ce-8f4f89922d57.png"&gt; | &lt;img width="179" alt="image" src="https://user-images.githubusercontent.com/9797472/191381473-b623ec34-499b-4b76-a5fa-30ab98b0acc1.png"&gt; |&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 22:04:34 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64154</guid>
      <link>https://github.com/dotnet/roslyn/pull/64154</link>
      <title>PR: Support `scoped` keyword in `for` statement. - @AlekseyTs</title>
      <description>&lt;p&gt;Related to #62039.
https://github.com/dotnet/csharplang/blob/main/proposals/low-level-struct-improvements.md#syntax&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 21:12:15 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64152</guid>
      <link>https://github.com/dotnet/roslyn/pull/64152</link>
      <title>PR: Change RSTE of RTRS to ReturnOnly by default - @RikkiGibson</title>
      <description>&lt;p&gt;Closes #64122&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 21:02:57 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64150</guid>
      <link>https://github.com/dotnet/roslyn/pull/64150</link>
      <title>PR: Hook up the new remote-solution-events-stream to the UnitTest-SolutionCrawler. - @CyrusNajmabadi</title>
      <description>&lt;p&gt;This PR contains the changes to the new unit-testing crawler to move it off from having direct Workspace dependencies (since we won't have a workspace in the future in OOP) and to hook it up to the new legacy-solution-events stream created in the prior PR.   Relevant pieces are documented to look at.&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 20:21:18 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64149</guid>
      <link>https://github.com/dotnet/roslyn/pull/64149</link>
      <title>PR: Hard 'fork' the solution crawler code.  Placing the fork in the unit-testing EA layer. - @CyrusNajmabadi</title>
      <description>&lt;p&gt;Followup to https://github.com/dotnet/roslyn/pull/64147&lt;/p&gt;
&lt;p&gt;This creates a full copy of all the code necessary for SolutionCrawler, and places it in the unit testing EA layer.  Important notes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;None of this code has, or is allowed to add, a reference to Microsoft.CodeAnalysis.SolutionCrawler.  That namespace+types are going to go away entirely, so this fork must be independently compilable.&lt;/li&gt;
&lt;li&gt;Currently, nothing starts this crawler.  The registration hooks are not activated by any existing code in roslyn, and there is no equivalent to HostSolutionCrawlerWorkspaceEventListener which is listening to the workspace and activating this.  This will be activated in a future PR by the new 'ILegacySolutionEvent' component when there is a listener that UnitTesting exports.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;All&lt;/em&gt; the types have had 'UnitTesting' added to their names to make it clear that this is only for that purpose, and to prevent confusion with the coexisting types in the workspace today.&lt;/li&gt;
&lt;li&gt;Other than the naming, the move to hte new namespace, and removal of any 'using' of hte old namespace, the code was not touched &lt;em&gt;at all&lt;/em&gt;.  The intent is to keep the logic untouched in this PR so that future logic changes are trivial to review.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There will be many more PRs coming on this.  I'm trying ot break these up into manageable chunks though to keep the overall design and individual steps clear.  This is all going into a feature branch as well until ready to actually merge in.&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 18:36:37 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64148</guid>
      <link>https://github.com/dotnet/roslyn/pull/64148</link>
      <title>PR: Don't place bogus data in an in/out variable in venus - @CyrusNajmabadi</title>
      <description />
      <pubDate>Tue, 20 Sep 2022 18:26:53 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/pull/64147</guid>
      <link>https://github.com/dotnet/roslyn/pull/64147</link>
      <title>PR: Rename 'Solution Events' to 'Legacy Solution Events' - @CyrusNajmabadi</title>
      <description>&lt;p&gt;Added docs as well to indicate this is a transitional API, and should not be used for new features.&lt;/p&gt;
&lt;p&gt;I also simplified the data model here.  I realized i didn't need to transform this into solution-crawler concepts.  I could just just keep this close to the existing WorkspaceEvents concept we already have (And which solution-crawler wants to consume.  We're just now effectively providing a stream of those raw events directly to OOP for this legacy case for the new owners of the solution crawler to consume until they move off onto their own pull model.&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 17:55:18 Z</pubDate>
    </item>
  </channel>
</rss>