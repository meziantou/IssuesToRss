<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>dotnet/interactive Issues</title>
    <description>Issues from https://github.com/dotnet/interactive, generated by https://github.com/meziantou/IssuesToRss/</description>
    <managingEditor>meziantousite@outlook.com</managingEditor>
    <ttl>60</ttl>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2284</guid>
      <link>https://github.com/dotnet/interactive/issues/2284</link>
      <title>Issue: Notebooks: Mermaid user journey titles appear cut off without sections - @burkeholland</title>
      <description>&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;Mermaid diagrams for user journeys cut the title text off when there are no sections&lt;/p&gt;
&lt;h3&gt;Please complete the following:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Which version of .NET Interactive are you using?&lt;/strong&gt; (In a notebook, run the &lt;code&gt;#!about&lt;/code&gt; magic command. ):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS
&lt;ul&gt;
&lt;li&gt;[ ] Windows 11&lt;/li&gt;
&lt;li&gt;[ ] Windows 10&lt;/li&gt;
&lt;li&gt;[x] macOS&lt;/li&gt;
&lt;li&gt;[ ] Linux (Please specify distro)&lt;/li&gt;
&lt;li&gt;[ ] iOS&lt;/li&gt;
&lt;li&gt;[ ] Android&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Browser
&lt;ul&gt;
&lt;li&gt;[ ] Chrome&lt;/li&gt;
&lt;li&gt;[x] Edge&lt;/li&gt;
&lt;li&gt;[ ] Firefox&lt;/li&gt;
&lt;li&gt;[ ] Safari&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Frontend
&lt;ul&gt;
&lt;li&gt;[ ] Jupyter Notebook&lt;/li&gt;
&lt;li&gt;[ ] Jupyter Lab&lt;/li&gt;
&lt;li&gt;[ ] nteract&lt;/li&gt;
&lt;li&gt;[x] Visual Studio Code&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio Code Insiders&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio&lt;/li&gt;
&lt;li&gt;[ ] Other (please specify)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Screenshots&lt;/h3&gt;
&lt;p&gt;https://user-images.githubusercontent.com/686963/191856731-0593e3d7-096b-4811-9dcc-19d48342e140.mp4&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 21:43:42 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2283</guid>
      <link>https://github.com/dotnet/interactive/issues/2283</link>
      <title>Issue: Notebooks: Mermaid diagrams don't render if the first line is blank - @burkeholland</title>
      <description>&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;If there are blank lines at the top of a mermaid cell, the diagram won't render.&lt;/p&gt;
&lt;h3&gt;Please complete the following:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Which version of .NET Interactive are you using?&lt;/strong&gt; (In a notebook, run the &lt;code&gt;#!about&lt;/code&gt; magic command. ):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS
&lt;ul&gt;
&lt;li&gt;[ ] Windows 11&lt;/li&gt;
&lt;li&gt;[ ] Windows 10&lt;/li&gt;
&lt;li&gt;[x] macOS&lt;/li&gt;
&lt;li&gt;[ ] Linux (Please specify distro)&lt;/li&gt;
&lt;li&gt;[ ] iOS&lt;/li&gt;
&lt;li&gt;[ ] Android&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Browser
&lt;ul&gt;
&lt;li&gt;[ ] Chrome&lt;/li&gt;
&lt;li&gt;[x] Edge&lt;/li&gt;
&lt;li&gt;[ ] Firefox&lt;/li&gt;
&lt;li&gt;[ ] Safari&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Frontend
&lt;ul&gt;
&lt;li&gt;[ ] Jupyter Notebook&lt;/li&gt;
&lt;li&gt;[ ] Jupyter Lab&lt;/li&gt;
&lt;li&gt;[ ] nteract&lt;/li&gt;
&lt;li&gt;[x] Visual Studio Code&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio Code Insiders&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio&lt;/li&gt;
&lt;li&gt;[ ] Other (please specify)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Screenshots&lt;/h3&gt;
&lt;p&gt;If applicable, add screenshots to help explain your problem.&lt;/p&gt;
&lt;p&gt;https://user-images.githubusercontent.com/686963/191855989-7620b7d0-b778-47ca-a07d-3e860c3e59b3.mp4&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 21:38:50 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2282</guid>
      <link>https://github.com/dotnet/interactive/issues/2282</link>
      <title>Issue: Notebooks: Mermaid syntax highlighting not working - @burkeholland</title>
      <description>&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;Mermaid syntax is not highlighted in Mermaid cells. The syntax highlighting I'm using comes from &lt;a href="https://marketplace.visualstudio.com/items?itemName=bpruitt-goddard.mermaid-markdown-syntax-highlighting"&gt;this extension&lt;/a&gt; which is most certainly scoped to &lt;code&gt;MD&lt;/code&gt; files. Note that change the language mode has no effect.&lt;/p&gt;
&lt;h3&gt;Please complete the following:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Which version of .NET Interactive are you using?&lt;/strong&gt; (In a notebook, run the &lt;code&gt;#!about&lt;/code&gt; magic command. ):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS
&lt;ul&gt;
&lt;li&gt;[ ] Windows 11&lt;/li&gt;
&lt;li&gt;[ ] Windows 10&lt;/li&gt;
&lt;li&gt;[x] macOS&lt;/li&gt;
&lt;li&gt;[ ] Linux (Please specify distro)&lt;/li&gt;
&lt;li&gt;[ ] iOS&lt;/li&gt;
&lt;li&gt;[ ] Android&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Browser
&lt;ul&gt;
&lt;li&gt;[ ] Chrome&lt;/li&gt;
&lt;li&gt;[x] Edge&lt;/li&gt;
&lt;li&gt;[ ] Firefox&lt;/li&gt;
&lt;li&gt;[ ] Safari&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Frontend
&lt;ul&gt;
&lt;li&gt;[ ] Jupyter Notebook&lt;/li&gt;
&lt;li&gt;[ ] Jupyter Lab&lt;/li&gt;
&lt;li&gt;[ ] nteract&lt;/li&gt;
&lt;li&gt;[x] Visual Studio Code&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio Code Insiders&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio&lt;/li&gt;
&lt;li&gt;[ ] Other (please specify)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Screenshots&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;https://user-images.githubusercontent.com/686963/191855712-8bac369e-42d9-4c04-baa5-2d45273a0a1f.mp4&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 21:36:09 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2280</guid>
      <link>https://github.com/dotnet/interactive/issues/2280</link>
      <title>Issue: Await Kernel.root.send commandtype = 'Submit Code' gives varied results. Missing kernel, and hangs - @mattscheffer</title>
      <description>&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;Open this repo in VSCode with the Interactive vsix installed.
Open NotebookTestScript.dib
Execute the cell labeled the following: &amp;quot;# Execude the next cell. After execution, the output immediately below should be:&amp;quot;&lt;/p&gt;
&lt;p&gt;Expected: As the cell says, 1234 should be outputted and .NET Interactive: Values should have a variable with the name asdf, value 1234, and kernel name csharp.&lt;/p&gt;
&lt;p&gt;Actual: That result occurs 1/3 times. The other times (after reload) can be it hanging when running, or execute stopps with the kernel not being found.&lt;/p&gt;
&lt;h3&gt;Please complete the following:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Which version of .NET Interactive are you using?&lt;/strong&gt; (In a notebook, run the &lt;code&gt;#!about&lt;/code&gt; magic command. ):
&lt;img src="https://user-images.githubusercontent.com/10537189/191622096-98481614-19c1-45a6-990f-2fca00e22d4b.png" alt="image" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS
&lt;ul&gt;
&lt;li&gt;[ ] Windows 11&lt;/li&gt;
&lt;li&gt;[x] Windows 10&lt;/li&gt;
&lt;li&gt;[ ] macOS&lt;/li&gt;
&lt;li&gt;[ ] Linux (Please specify distro)&lt;/li&gt;
&lt;li&gt;[ ] iOS&lt;/li&gt;
&lt;li&gt;[ ] Android&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Browser
&lt;ul&gt;
&lt;li&gt;[ ] Chrome&lt;/li&gt;
&lt;li&gt;[x] Edge&lt;/li&gt;
&lt;li&gt;[ ] Firefox&lt;/li&gt;
&lt;li&gt;[ ] Safari&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Frontend
&lt;ul&gt;
&lt;li&gt;[ ] Jupyter Notebook&lt;/li&gt;
&lt;li&gt;[ ] Jupyter Lab&lt;/li&gt;
&lt;li&gt;[ ] nteract&lt;/li&gt;
&lt;li&gt;[X] Visual Studio Code&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio Code Insiders&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio&lt;/li&gt;
&lt;li&gt;[ ] Other (please specify)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Screenshots&lt;/h3&gt;
&lt;p&gt;If applicable, add screenshots to help explain your problem.
&lt;img src="https://user-images.githubusercontent.com/10537189/191621846-0d7a4f53-0ed2-4612-bf4d-a447c90e3adb.png" alt="image" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/10537189/191621883-ea9b9e2f-9865-4c95-92b2-ed05c267bb2e.png" alt="image" /&gt;&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 22:34:07 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2279</guid>
      <link>https://github.com/dotnet/interactive/issues/2279</link>
      <title>Issue: Notebooks HTML: Setting the background-color property on html changes the whole notebook - @burkeholland</title>
      <description>&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;If you set the &lt;code&gt;background-color&lt;/code&gt; for the &lt;code&gt;html&lt;/code&gt; tag, it changes the background for the whole notebook.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;style&amp;gt;
  html {
    background-color: white;
  }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Please complete the following:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Which version of .NET Interactive are you using?&lt;/strong&gt; (In a notebook, run the &lt;code&gt;#!about&lt;/code&gt; magic command. ):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS
&lt;ul&gt;
&lt;li&gt;[ ] Windows 11&lt;/li&gt;
&lt;li&gt;[ ] Windows 10&lt;/li&gt;
&lt;li&gt;[ x] macOS&lt;/li&gt;
&lt;li&gt;[ ] Linux (Please specify distro)&lt;/li&gt;
&lt;li&gt;[ ] iOS&lt;/li&gt;
&lt;li&gt;[ ] Android&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Browser
&lt;ul&gt;
&lt;li&gt;[ ] Chrome&lt;/li&gt;
&lt;li&gt;[ x] Edge&lt;/li&gt;
&lt;li&gt;[ ] Firefox&lt;/li&gt;
&lt;li&gt;[ ] Safari&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Frontend
&lt;ul&gt;
&lt;li&gt;[ x] Jupyter Notebook&lt;/li&gt;
&lt;li&gt;[ ] Jupyter Lab&lt;/li&gt;
&lt;li&gt;[ ] nteract&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio Code&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio Code Insiders&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio&lt;/li&gt;
&lt;li&gt;[ ] Other (please specify)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Screenshots&lt;/h3&gt;
&lt;p&gt;https://user-images.githubusercontent.com/686963/191589817-ad8f0a94-bca2-493f-8c3a-5695627d7965.mp4&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 19:08:32 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2278</guid>
      <link>https://github.com/dotnet/interactive/issues/2278</link>
      <title>Issue: Notebooks: Emmet should "just work" in HTML Cells - @burkeholland</title>
      <description>&lt;p&gt;Emmet does not work in HTML cells by default. This is because the language identifier is different and needs to be mapped like so...&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;emmet.includeLanguages&amp;quot;: {
    &amp;quot;javascript&amp;quot;: &amp;quot;javascriptreact&amp;quot;,
    &amp;quot;dotnet-interactive.html&amp;quot;: &amp;quot;html&amp;quot;
  },
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Describe the solution you'd like&lt;/strong&gt;
Emmet should &amp;quot;just work&amp;quot; out of the box. Perhaps we add the mapping ourselves?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Describe alternatives you've considered&lt;/strong&gt;
We could put it on the user to turn it on. We do this with React by forcing a mapping of &amp;quot;javascriptreact&amp;quot;. Doesn't stop anyone from using React in VS Code. &lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 18:34:17 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2276</guid>
      <link>https://github.com/dotnet/interactive/issues/2276</link>
      <title>Issue: Add default properties to telemetry events - @colombod</title>
      <description>&lt;p&gt;Ensure telemetry events have the default set of properties set:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[ ] MachineId&lt;/li&gt;
&lt;li&gt;[ ] Frontend&lt;/li&gt;
&lt;li&gt;[ ] Verb&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 23:09:47 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2275</guid>
      <link>https://github.com/dotnet/interactive/issues/2275</link>
      <title>Issue: Html Browser kernel handled script tags - @colombod</title>
      <description>&lt;p&gt;Ensure that script tags with inner text are evaluated after being added to the dom&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 21:45:55 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2274</guid>
      <link>https://github.com/dotnet/interactive/issues/2274</link>
      <title>Issue: Extension causes high cpu load - @lanzetti1</title>
      <description>&lt;ul&gt;
&lt;li&gt;Issue Type: &lt;code&gt;Performance&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Extension Name: &lt;code&gt;dotnet-interactive-vscode&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Extension Version: &lt;code&gt;1.0.3405010&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;OS Version: &lt;code&gt;Windows_NT x64 10.0.22622&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;VS Code version: &lt;code&gt;1.71.2&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;:warning: Make sure to &lt;strong&gt;attach&lt;/strong&gt; this file from your &lt;em&gt;home&lt;/em&gt;-directory:
:warning:&lt;code&gt;file:///c%3A/Users/Claudio/AppData/Local/Temp/ms-dotnettools.dotnet-interactive-vscode-unresponsive.cpuprofile.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Find more details here: https://github.com/microsoft/vscode/wiki/Explain-extension-causes-high-cpu-load&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 17:05:19 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2271</guid>
      <link>https://github.com/dotnet/interactive/issues/2271</link>
      <title>Issue: F# values displaying strangely in notebooks - @bmitc</title>
      <description>&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;In general, I have found that F# is now displaying values strangely in VS Code. I feel that it didn't used to be this way, so maybe I missed a feature change or it's possible that this is a regression.&lt;/p&gt;
&lt;p&gt;For example, see the following screenshot:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/65685447/190971734-4ad0fe36-09b2-4b08-bd59-4cab136deda4.png" alt="image" /&gt;&lt;/p&gt;
&lt;p&gt;For the most part, I am now usually defining a helper function &lt;code&gt;let print value = printfn &amp;quot;%A&amp;quot; value&lt;/code&gt; and piping any output into &lt;code&gt;print&lt;/code&gt; to get reasonable and readable displays of values.&lt;/p&gt;
&lt;h3&gt;Please complete the following:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Which version of .NET Interactive are you using?&lt;/strong&gt; (In a notebook, run the &lt;code&gt;#!about&lt;/code&gt; magic command. ):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS
&lt;ul&gt;
&lt;li&gt;[x] Windows 11&lt;/li&gt;
&lt;li&gt;[ ] Windows 10&lt;/li&gt;
&lt;li&gt;[ ] macOS&lt;/li&gt;
&lt;li&gt;[ ] Linux (Please specify distro)&lt;/li&gt;
&lt;li&gt;[ ] iOS&lt;/li&gt;
&lt;li&gt;[ ] Android&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Browser
&lt;ul&gt;
&lt;li&gt;[ ] Chrome&lt;/li&gt;
&lt;li&gt;[ ] Edge&lt;/li&gt;
&lt;li&gt;[ ] Firefox&lt;/li&gt;
&lt;li&gt;[ ] Safari&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Frontend
&lt;ul&gt;
&lt;li&gt;[ ] Jupyter Notebook&lt;/li&gt;
&lt;li&gt;[ ] Jupyter Lab&lt;/li&gt;
&lt;li&gt;[ ] nteract&lt;/li&gt;
&lt;li&gt;[x] Visual Studio Code&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio Code Insiders&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio&lt;/li&gt;
&lt;li&gt;[ ] Other (please specify)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Screenshots&lt;/h3&gt;
&lt;p&gt;See above. Also, here's version information:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/65685447/190972248-2535f5fc-2311-4677-9692-6223771d1406.png" alt="image" /&gt;&lt;/p&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 07:50:33 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2269</guid>
      <link>https://github.com/dotnet/interactive/issues/2269</link>
      <title>Issue: jupyter doesn't work in .net 6.0, doesn't work after install 3.1 - @anirugu</title>
      <description>&lt;p&gt;https://github.com/dotnet/try/issues/1033
https://github.com/dotnet/sdk/issues/27976&lt;/p&gt;
</description>
      <pubDate>Sat, 17 Sep 2022 16:12:06 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2253</guid>
      <link>https://github.com/dotnet/interactive/issues/2253</link>
      <title>Issue: September 2022 rough plan of work - @AbhitejJohn</title>
      <description>&lt;ul&gt;
&lt;li&gt;[ ] #2078 @jonsequitur @claudiaregio
&lt;ul&gt;
&lt;li&gt;[ ] #2187&lt;/li&gt;
&lt;li&gt;[ ] #2188&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] #2060 @jonsequitur&lt;/li&gt;
&lt;li&gt;[x] #2184 @jonsequitur&lt;/li&gt;
&lt;li&gt;[ ] #2000 @brettfo&lt;/li&gt;
&lt;li&gt;[ ] #2101 @brettfo&lt;/li&gt;
&lt;li&gt;[ ] #1852  @brettfo @colombod&lt;/li&gt;
&lt;li&gt;[ ] #1440 @colombod&lt;/li&gt;
&lt;li&gt;[x] #2251 @colombod&lt;/li&gt;
&lt;li&gt;[ ] #2117 @colombod @brettfo&lt;/li&gt;
&lt;li&gt;[ ] #2111 @colombod @brettfo&lt;/li&gt;
&lt;li&gt;[ ] #2100 @colombod&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;[ ] #2025 @colombod @brettfo&lt;/li&gt;
&lt;li&gt;[ ] #2104 @colombod @brettfo&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Thu, 08 Sep 2022 16:26:53 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2252</guid>
      <link>https://github.com/dotnet/interactive/issues/2252</link>
      <title>Issue: HTML kernel in automation doesn't store dom as output - @colombod</title>
      <description>&lt;p&gt;Headless html kernel doesn't persist the element as output&lt;/p&gt;
</description>
      <pubDate>Tue, 06 Sep 2022 17:13:53 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2251</guid>
      <link>https://github.com/dotnet/interactive/issues/2251</link>
      <title>Issue: HTML kernel should not wrap the submit code  - @colombod</title>
      <description>&lt;p&gt;The typescript implementation of the html kernel should be configurable in order to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;decide how code submission are wrapped or not in a container&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Tue, 06 Sep 2022 15:34:09 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2249</guid>
      <link>https://github.com/dotnet/interactive/issues/2249</link>
      <title>Issue: Picture in html and markdown is not refreshed - @marckruzik</title>
      <description>&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;After modifying a picture, the old version of the picture is still displayed.
It's happening with the following commands (in their respective cells):
&lt;code&gt;HTML(&amp;quot;&amp;lt;img src=\&amp;quot;data_output/picture.png\&amp;quot; /&amp;gt;&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;img src=&amp;quot;data_output/picture.png&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;![](data_output/picture.png)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I tried to restart the current notebook's Kernel (C#), but the pictures stay the same.&lt;/p&gt;
&lt;p&gt;If I close and restart Visual Studio Code, it clears the cache. But if I have a markdown cell which displays the picture before the new version is generated, the old picture will be displayed everywhere.&lt;/p&gt;
&lt;p&gt;The only get around I found is to render a base64 encoded html version of the picture.
I'm looking for a better way to refresh the pictures.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;using System.Drawing;
using System.IO;

public static void from_bmp_filepath_display_bmp(string bmp_filepath)
{
    Bitmap bmp = new Bitmap(bmp_filepath);
    string bmp64;
    using (var ms = new MemoryStream())
    {
        bmp.Save(ms, System.Drawing.Imaging.ImageFormat.Png);
        bmp64 = Convert.ToBase64String(ms.GetBuffer()); //Get Base64
    }
    bmp.Dispose();
    string str = $&amp;quot;&amp;lt;img src=\&amp;quot;data:image/png;base64,{bmp64}\&amp;quot; /&amp;gt;&amp;quot;;
    display(HTML(str));
}

from_bmp_filepath_display_bmp(@&amp;quot;data_output\picture.png&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Please complete the following:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Which version of .NET Interactive are you using?&lt;/strong&gt; (In a notebook, run the &lt;code&gt;#!about&lt;/code&gt; magic command. ):
1.0.325601+1743a009db9b6b64e33146e1681731acc785a7cf&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS
&lt;ul&gt;
&lt;li&gt;[ ] Windows 11&lt;/li&gt;
&lt;li&gt;[x] Windows 10&lt;/li&gt;
&lt;li&gt;[ ] macOS&lt;/li&gt;
&lt;li&gt;[ ] Linux (Please specify distro)&lt;/li&gt;
&lt;li&gt;[ ] iOS&lt;/li&gt;
&lt;li&gt;[ ] Android&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Browser
&lt;ul&gt;
&lt;li&gt;[ ] Chrome&lt;/li&gt;
&lt;li&gt;[ ] Edge&lt;/li&gt;
&lt;li&gt;[ ] Firefox&lt;/li&gt;
&lt;li&gt;[ ] Safari&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Frontend
&lt;ul&gt;
&lt;li&gt;[ ] Jupyter Notebook&lt;/li&gt;
&lt;li&gt;[ ] Jupyter Lab&lt;/li&gt;
&lt;li&gt;[ ] nteract&lt;/li&gt;
&lt;li&gt;[x] Visual Studio Code&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio Code Insiders&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio&lt;/li&gt;
&lt;li&gt;[ ] Other (please specify)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Screenshots&lt;/h3&gt;
&lt;p&gt;If applicable, add screenshots to help explain your problem.&lt;/p&gt;
</description>
      <pubDate>Sun, 04 Sep 2022 09:03:19 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2246</guid>
      <link>https://github.com/dotnet/interactive/issues/2246</link>
      <title>Issue: Change VS Code Extension Icon PRIOR to removal from Preview - @claudiaregio</title>
      <description>&lt;p&gt;Image files located here: https://devdiv-design.visualstudio.com/D3%20Studio/_workitems/edit/17192&lt;/p&gt;
</description>
      <pubDate>Fri, 02 Sep 2022 17:13:56 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2244</guid>
      <link>https://github.com/dotnet/interactive/issues/2244</link>
      <title>Issue: Support npm-based subkernel - @claudiaregio</title>
      <description>&lt;p&gt;During a user study, someone wanted to use Javascript in their notebook. Due to this user also being familiar with Python/Python notebooks, he started googling things like &amp;quot;.net interactive install npm&amp;quot; thinking that he could select a specific environment the same way he would in Python&lt;/p&gt;
</description>
      <pubDate>Thu, 01 Sep 2022 17:31:52 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2240</guid>
      <link>https://github.com/dotnet/interactive/issues/2240</link>
      <title>Issue: Hang upon execute cell while waiting for input - @mattscheffer</title>
      <description>&lt;p&gt;Repro steps are intermittent or might just be a first launch after VSCode or extension installation.&lt;/p&gt;
&lt;p&gt;The general repro steps are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open the folder for interactive in VSCode&lt;/li&gt;
&lt;li&gt;Open the NotebookTestScript.dib&lt;/li&gt;
&lt;li&gt;Scroll down to the “vscode kernel and user input prompts” section.&lt;/li&gt;
&lt;li&gt;Press the execute cell button for the first interactive cell in that section.
Expected: A prompt opens at the top of the screen asking for input.
Actual: The prompt never opened and VSCode became unresponsive. The timer kept counting up but wasn’t stoppable.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Dmp file at: &lt;em&gt;externaldrive&lt;/em&gt;\public\v-masche\dumps\interactiveInput.dmp&lt;/p&gt;
</description>
      <pubDate>Tue, 30 Aug 2022 22:23:36 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2239</guid>
      <link>https://github.com/dotnet/interactive/issues/2239</link>
      <title>Issue: Kernel fails to start when current directory is set to nonexistent directory - @jonsequitur</title>
      <description>&lt;p&gt;From https://github.com/dotnet/interactive/issues/2236#issuecomment-1231972664:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Starting kernel for 'untitled:Untitled-1.ipynb?jupyter-notebook' using: dotnet tool run dotnet-interactive -- [vscode] stdio --working-dir c:\Users\EDDIEH~1\AppData\Local\Temp\git-difftool.a12908\left
Kernel for 'untitled:Untitled-1.ipynb?jupyter-notebook' started (1004).
kernel (1004) stderr: Unhandled exception: 
kernel (1004) stderr: System.IO.DirectoryNotFoundException: Could not find a part of the path 'c:\Users\EddieHartman\AppData\Local\Temp\git-difftool.a12908\left'.
   at System.Environment.set_CurrentDirectoryCore(String value)
   at System.Environment.set_CurrentDirectory(String value)
   at Microsoft.DotNet.Interactive.App.CommandLine.CommandLineParser.&amp;lt;&amp;gt;c__DisplayClass5_0.&amp;lt;&amp;lt;Create&amp;gt;b__19&amp;gt;d.MoveNext() in D:\a\_work\1\s\src\dotnet-interactive\CommandLine\CommandLineParser.cs:line 365
--- End of stack trace from previous location ---
   at System.CommandLine.NamingConventionBinder.CommandHandler.GetExitCodeAsync(Object returnValue, InvocationContext context)
   at System.CommandLine.NamingConventionBinder.ModelBindingCommandHandler.InvokeAsync(InvocationContext context)
   at System.CommandLine.Invocation.InvocationPipeline.&amp;lt;&amp;gt;c__DisplayClass4_0.&amp;lt;&amp;lt;BuildInvocationChain&amp;gt;b__0&amp;gt;d.MoveNext()
--- End of stack trace from previous location ---
   at System.CommandLine.Builder.CommandLineBuilderExtensions.&amp;lt;&amp;gt;c__DisplayClass17_0.&amp;lt;&amp;lt;UseParseErrorReporting&amp;gt;b__0&amp;gt;d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.DotNet.Interactive.App.CommandLine.CommandLineParser.&amp;lt;&amp;gt;c__DisplayClass5_0.&amp;lt;&amp;lt;Create&amp;gt;b__3&amp;gt;d.MoveNext() in D:\a\_work\1\s\src\dotnet-interactive\CommandLine\CommandLineParser.cs:line 222
--- End of stack trace from previous location ---
   at System.CommandLine.Builder.CommandLineBuilderExtensions.&amp;lt;&amp;gt;c__DisplayClass12_0.&amp;lt;&amp;lt;UseHelp&amp;gt;b__0&amp;gt;d.MoveNext()
--- End of stack trace from previous location ---
   at System.CommandLine.Builder.CommandLineBuilderExtensions.&amp;lt;&amp;gt;c__DisplayClass22_0.&amp;lt;&amp;lt;UseVersionOption&amp;gt;b__0&amp;gt;d.MoveNext()
--- End of stack trace from previous location ---
   at System.CommandLine.Builder.CommandLineBuilderExtensions.&amp;lt;&amp;gt;c__DisplayClass19_0.&amp;lt;&amp;lt;UseTypoCorrections&amp;gt;b__0&amp;gt;d.MoveNext()
--- End of stack trace from previous location ---
   at System.CommandLine.Builder.CommandLineBuilderExtensions.&amp;lt;&amp;gt;c.&amp;lt;&amp;lt;UseSuggestDirective&amp;gt;b__18_0&amp;gt;d.MoveNext()
--- End of stack trace from previous location ---
   at System.CommandLine.Builder.CommandLineBuilderExtensions.&amp;lt;&amp;gt;c__DisplayClass16_0.&amp;lt;&amp;lt;UseParseDirective&amp;gt;b__0&amp;gt;d.MoveNext()
--- End of stack trace from previous location ---
   at System.CommandLine.Builder.CommandLineBuilderExtensions.&amp;lt;&amp;gt;c.&amp;lt;&amp;lt;RegisterWithDotnetSuggest&amp;gt;b__5_0&amp;gt;d.MoveNext()
--- End of stack trace from previous location ---
   at System.CommandLine.Builder.CommandLineBuilderExtensions.&amp;lt;&amp;gt;c__DisplayClass8_0.&amp;lt;&amp;lt;UseExceptionHandler&amp;gt;b__0&amp;gt;d.MoveNext()
&lt;/code&gt;&lt;/pre&gt;
</description>
      <pubDate>Tue, 30 Aug 2022 17:55:48 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2238</guid>
      <link>https://github.com/dotnet/interactive/issues/2238</link>
      <title>Issue: Set theme info in HTML outputs, e.g., `#!lsmagic` - @brettfo</title>
      <description>&lt;p&gt;By getting creative with CSS themes and VS Code well-known variables we can come up with a good solution where HTML output is always appropriately colored in both VS Code and Jupyter lab.&lt;/p&gt;
</description>
      <pubDate>Tue, 30 Aug 2022 17:19:23 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2236</guid>
      <link>https://github.com/dotnet/interactive/issues/2236</link>
      <title>Issue: Extension Completely Stopped Running Notebooks - @Eddie-Hartman</title>
      <description>&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;Interactive notebooks have worked great for me in the past. At some point, whether due to an update, or some cause I'm unaware of, I cannot run notebooks at all anymore. What I mean by that is when I click to run, it will just run forever and nothing will happen. I can't use the display command, do simple addition, anything at all. Even the &lt;code&gt;#!about&lt;/code&gt; magic command just hangs. I've tried updating Windows, VsCode, the Extensions, Uninstalling and re-installing the extensions, most of the general debugging steps.&lt;/p&gt;
&lt;p&gt;I've not seen similar issues within the GitHub, so I'm guessing I'm somehow an isolated case, but I simply can't get this to work at all. Please advise.&lt;/p&gt;
&lt;p&gt;My workflow is I'll typically want to test some small portion of code, so I'll put it into a new notebook, then run that. I use .ipynb extension with the .net kernel.&lt;/p&gt;
&lt;h3&gt;Please complete the following:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Which version of .NET Interactive are you using?&lt;/strong&gt; (In a notebook, run the &lt;code&gt;#!about&lt;/code&gt; magic command. ):
Even the about magic command doesn't run, but VsCode says 1.0.3405010&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS
&lt;ul&gt;
&lt;li&gt;[ ] Windows 11&lt;/li&gt;
&lt;li&gt;[X] Windows 10&lt;/li&gt;
&lt;li&gt;[ ] macOS&lt;/li&gt;
&lt;li&gt;[ ] Linux (Please specify distro)&lt;/li&gt;
&lt;li&gt;[ ] iOS&lt;/li&gt;
&lt;li&gt;[ ] Android&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Browser
&lt;ul&gt;
&lt;li&gt;[X] Chrome&lt;/li&gt;
&lt;li&gt;[ ] Edge&lt;/li&gt;
&lt;li&gt;[ ] Firefox&lt;/li&gt;
&lt;li&gt;[ ] Safari&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Frontend
&lt;ul&gt;
&lt;li&gt;[ ] Jupyter Notebook&lt;/li&gt;
&lt;li&gt;[ ] Jupyter Lab&lt;/li&gt;
&lt;li&gt;[ ] nteract&lt;/li&gt;
&lt;li&gt;[X] Visual Studio Code&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio Code Insiders&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio&lt;/li&gt;
&lt;li&gt;[ ] Other (please specify)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Screenshots&lt;/h3&gt;
&lt;p&gt;If applicable, add screenshots to help explain your problem.
&lt;img src="https://user-images.githubusercontent.com/14089997/187104712-94f164bb-a809-46a1-93ab-ad623c28e1da.png" alt="image" /&gt;&lt;/p&gt;
</description>
      <pubDate>Mon, 29 Aug 2022 01:23:53 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2235</guid>
      <link>https://github.com/dotnet/interactive/issues/2235</link>
      <title>Issue: Pretty print DateOnly and TimeOnly - @nhirschey</title>
      <description>&lt;p&gt;&lt;strong&gt;Is your feature request related to a problem? Please describe.&lt;/strong&gt;
&lt;code&gt;DateTime&lt;/code&gt; has a nice pretty printer. It would be useful to have this for DateOnly and TimeOnly too. I know that I can use the object formatters to do it myself, but having it built in is easier to use.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/5226115/187091762-d889b1bf-2c48-4af7-b2ba-9c7b12976903.png" alt="image" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Describe the solution you'd like&lt;/strong&gt;
Output printers for DateOnly that are like DateTime and for TimeOnly that are like TimeSpan&lt;/p&gt;
&lt;p&gt;Such as:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-fsharp"&gt;Formatter.Register&amp;lt;DateOnly&amp;gt;(fun (dt: DateOnly) -&amp;gt; dt.ToString(&amp;quot;o&amp;quot;))
Formatter.SetPreferredMimeTypesFor(typeof&amp;lt;DateOnly&amp;gt;,&amp;quot;text/plain&amp;quot;)

Formatter.Register&amp;lt;TimeOnly&amp;gt;(fun (tm: TimeOnly) -&amp;gt; tm.ToString(&amp;quot;o&amp;quot;))
Formatter.SetPreferredMimeTypesFor(typeof&amp;lt;TimeOnly&amp;gt;,&amp;quot;text/plain&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Describe alternatives you've considered&lt;/strong&gt;
Do it manually on every notebook.&lt;/p&gt;
</description>
      <pubDate>Sun, 28 Aug 2022 19:47:17 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2233</guid>
      <link>https://github.com/dotnet/interactive/issues/2233</link>
      <title>Issue: [F#] Treat F# cell as a `task` CE if `let!` or `do!` binding is present - @xperiandri</title>
      <description>&lt;p&gt;&lt;strong&gt;Is your feature request related to a problem? Please describe.&lt;/strong&gt;
It is very inconvenient to write &lt;code&gt;.Result&lt;/code&gt; for each async call in a cell in F# code.
When you write a tutorial, your end consumer must remove &lt;code&gt;.Result&lt;/code&gt; and add the bang operator to each call!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Describe the solution you'd like&lt;/strong&gt;
If a cell contains at least one &lt;code&gt;let!&lt;/code&gt; or &lt;code&gt;do!&lt;/code&gt; binding accepting a &lt;code&gt;Task&lt;/code&gt; the whole cell must be wrapped into a &lt;code&gt;task { }&lt;/code&gt; computation expression. And &lt;code&gt;cancellationToken&lt;/code&gt; parameter must become automatically available for the cell.
All &lt;code&gt;let&lt;/code&gt; bindings must appear in the &lt;code&gt;.NET Interactive: Values&lt;/code&gt; output window.&lt;/p&gt;
&lt;p&gt;Also, It would be nice to implicitly reference and load &lt;a href="https://www.nuget.org/packages/FSharp.Control.FusionTasks"&gt;FSharp.Control.FusionTasks&lt;/a&gt; to have seamless &lt;code&gt;async&lt;/code&gt;-&lt;code&gt;task&lt;/code&gt; interop&lt;/p&gt;
</description>
      <pubDate>Sat, 27 Aug 2022 11:19:33 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2218</guid>
      <link>https://github.com/dotnet/interactive/issues/2218</link>
      <title>Issue: Add validation and/or diagnostics to `#r "nuget:..."` magic commands - @brettfo</title>
      <description>&lt;p&gt;It's very easy to specify an invalid value to &lt;code&gt;#r &amp;quot;nuget:...&amp;quot;&lt;/code&gt; and we don't currently do a good job of communicating this to the user, e.g., missing commas, extra commas, unsupported values, etc.&lt;/p&gt;
&lt;p&gt;The user experience will be greatly improved if we can provide diagnostics for this.&lt;/p&gt;
</description>
      <pubDate>Tue, 23 Aug 2022 17:13:36 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2217</guid>
      <link>https://github.com/dotnet/interactive/issues/2217</link>
      <title>Issue: Add `environmentVariables` section to allowable notebook metadata - @brettfo</title>
      <description>&lt;p&gt;This issue builds on top of #2184.&lt;/p&gt;
&lt;p&gt;Add a section to notebook metadata that specifies additional environment variables to set on kernel start, e.g.:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
  &amp;quot;environmentVariables&amp;quot;: {
    &amp;quot;MY_VARIABLE&amp;quot;: &amp;quot;myvalue&amp;quot;,
    &amp;quot;PI&amp;quot;: &amp;quot;3&amp;quot;
  },
...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will allow things like .NET Framework values and/or top-level telemetry values to be set on a per-notebook basis.&lt;/p&gt;
</description>
      <pubDate>Tue, 23 Aug 2022 16:52:51 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2213</guid>
      <link>https://github.com/dotnet/interactive/issues/2213</link>
      <title>Issue: #r nuget error "Value cannot be null. (Parameter 'path1')" - @jmlane</title>
      <description>&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;Hello. I'm trying to load public NuGet packages in my F# interactive notebooks:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-dni"&gt;#r &amp;quot;nuget: Fuchu, 1.1.0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I'm getting the following error for the cell containing the nuget directive:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Error: c:\program files\dotnet\sdk\6.0.101\NuGet.targets(564,5): error : Value cannot be null. (Parameter 'path1') [C:\Users\jmlane.packagemanagement\nuget\Projects\2008--b2087166-1f52-442d-a7cd-e1b30cd5ae8d\Project.fsproj]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;These exact notebooks had been working as recently as a couple of weeks ago. I can't figure out what may have changed to cause this error.&lt;/p&gt;
&lt;p&gt;I can restore the requested package and build the equivalent code in an F# project, so my issue is most likely related to my VS Code .NET Interactive notebook extension or some relevant configuration.&lt;/p&gt;
&lt;h3&gt;Please complete the following:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Which version of .NET Interactive are you using?&lt;/strong&gt; (In a notebook, run the &lt;code&gt;#!about&lt;/code&gt; magic command. ):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Version: 1.0.341901+846a87324b4b21ee09299c42ed2f55f77a2831fa&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Library version: 1.0.0-beta.22419.1+846a87324b4b21ee09299c42ed2f55f77a2831fa&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OS&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[x] Windows 10&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Frontend&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[x] Visual Studio Code Insiders&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Screenshots&lt;/h3&gt;
&lt;p&gt;N/A.&lt;/p&gt;
</description>
      <pubDate>Sun, 21 Aug 2022 22:10:18 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2212</guid>
      <link>https://github.com/dotnet/interactive/issues/2212</link>
      <title>Issue: Extension causes high cpu load - @AndersonGabrielSilva</title>
      <description>&lt;ul&gt;
&lt;li&gt;Issue Type: &lt;code&gt;Performance&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Extension Name: &lt;code&gt;dotnet-interactive-vscode&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Extension Version: &lt;code&gt;1.0.3405010&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;OS Version: &lt;code&gt;Windows_NT x64 10.0.19043&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;VS Code version: &lt;code&gt;1.70.2&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;:warning: Make sure to &lt;strong&gt;attach&lt;/strong&gt; this file from your &lt;em&gt;home&lt;/em&gt;-directory:
:warning:&lt;code&gt;file:///c%3A/Users/ANDERS~1/AppData/Local/Temp/ms-dotnettools.dotnet-interactive-vscode-unresponsive.cpuprofile.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Find more details here: https://github.com/microsoft/vscode/wiki/Explain-extension-causes-high-cpu-load&lt;/p&gt;
</description>
      <pubDate>Sun, 21 Aug 2022 16:45:07 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2210</guid>
      <link>https://github.com/dotnet/interactive/issues/2210</link>
      <title>Issue: Running .NET interactive in only client side browser - @martasp</title>
      <description>&lt;p&gt;Is it possible an to run .net interactive in only client-side browser mode similar to how blazor client side works without running localhost or hosting on the server?&lt;/p&gt;
</description>
      <pubDate>Sat, 20 Aug 2022 07:19:57 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2209</guid>
      <link>https://github.com/dotnet/interactive/issues/2209</link>
      <title>Issue: Support `.dib` notebook rendering in GitHub - @bmitc</title>
      <description>&lt;p&gt;&lt;strong&gt;Is your feature request related to a problem? Please describe.&lt;/strong&gt;
When creating .NET Interactive notebooks with the &lt;code&gt;.dib&lt;/code&gt; file format, I would like to upload the notebooks to GitHub and/or GitHub Gist to share direct links to or embed in webpages.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Describe the solution you'd like&lt;/strong&gt;
I would like the &lt;code&gt;.dib&lt;/code&gt; format to render in the browser just as &lt;code&gt;.ipynb&lt;/code&gt; notebooks render. &lt;a href="https://gist.github.com/bmitc/a1a2a22a646cac95b323a0de2757e0cb"&gt;This Gist contains the same content in &lt;code&gt;.dib&lt;/code&gt; and &lt;code&gt;.ipynb&lt;/code&gt; formats&lt;/a&gt;, and only the latter renders.&lt;/p&gt;
&lt;p&gt;The major benefit of the render is that Gists can be easily embedded, such as in blogs, and &lt;code&gt;.ipynb&lt;/code&gt; notebooks are still rendered when embedded.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Describe alternatives you've considered&lt;/strong&gt;
Convert the &lt;code&gt;.dib&lt;/code&gt; format notebooks to the &lt;code&gt;.ipynb&lt;/code&gt; format. However, I prefer the &lt;code&gt;.dib&lt;/code&gt; format since the raw format is much more concise and readable. I also prefer not having the Python association in my notebook file names. &lt;/p&gt;
&lt;p&gt;A related discussion thread is https://github.com/dotnet/interactive/issues/467, but I thought it would be good having a separate issue tracking this. It isn't clear to me how one gets custom file formats to render on GitHub. From my searching, it appears that GitHub doesn't expose a public method to do this and needs to implement the rendering themselves. Maybe the .NET Interactive team would have to collaborate with the GitHub team on that internally?&lt;/p&gt;
&lt;p&gt;The only documents I found were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://docs.github.com/en/repositories/working-with-files/using-files/working-with-non-code-files&lt;/li&gt;
&lt;li&gt;https://github.blog/2015-05-07-github-jupyter-notebooks-3/&lt;/li&gt;
&lt;li&gt;https://blog.jupyter.org/rendering-notebooks-on-github-f7ac8736d686&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Sat, 20 Aug 2022 05:03:31 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2207</guid>
      <link>https://github.com/dotnet/interactive/issues/2207</link>
      <title>Issue: Error launch New interactive NoteBook - @Shahid-Roofi-Khan</title>
      <description>&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;Please provide as much information as you can.&lt;/p&gt;
&lt;h3&gt;Please complete the following:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Which version of .NET Interactive are you using?&lt;/strong&gt; (In a notebook, run the &lt;code&gt;#!about&lt;/code&gt; magic command. ):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS
&lt;ul&gt;
&lt;li&gt;[ ] Windows 11&lt;/li&gt;
&lt;li&gt;[X] Windows 10&lt;/li&gt;
&lt;li&gt;[ ] macOS&lt;/li&gt;
&lt;li&gt;[ ] Linux (Please specify distro)&lt;/li&gt;
&lt;li&gt;[ ] iOS&lt;/li&gt;
&lt;li&gt;[ ] Android&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Browser
&lt;ul&gt;
&lt;li&gt;[ ] Chrome&lt;/li&gt;
&lt;li&gt;[ ] Edge&lt;/li&gt;
&lt;li&gt;[ ] Firefox&lt;/li&gt;
&lt;li&gt;[ ] Safari&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Frontend
&lt;ul&gt;
&lt;li&gt;[ ] Jupyter Notebook&lt;/li&gt;
&lt;li&gt;[ ] Jupyter Lab&lt;/li&gt;
&lt;li&gt;[ ] nteract&lt;/li&gt;
&lt;li&gt;[X] Visual Studio Code&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio Code Insiders&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio&lt;/li&gt;
&lt;li&gt;[ ] Other (please specify)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Screenshots&lt;/h3&gt;
&lt;p&gt;If applicable, add screenshots to help explain your problem.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/65172780/185414310-aea9a1f0-20e6-4cd5-94e1-a1f9ed11920a.png" alt="image" /&gt;&lt;/p&gt;
&lt;p&gt;I have latest as of today, VSCode, and latest dotnet-interactive.&lt;/p&gt;
&lt;p&gt;There are two issues with same description but those are not the only reason issue happens, i did all mentioned in them.&lt;/p&gt;
&lt;p&gt;https://github.com/dotnet/interactive/issues/1729     (this points to path to SDKs and some other minors things, still addressing that won't solve the issue)&lt;/p&gt;
&lt;p&gt;https://github.com/dotnet/interactive/issues/1775    (this points to other techniques but doing them also won't solve this issue as i have latest everything (except that windows is not 11, its windows 10)&lt;/p&gt;
</description>
      <pubDate>Thu, 18 Aug 2022 14:06:11 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2206</guid>
      <link>https://github.com/dotnet/interactive/issues/2206</link>
      <title>Issue: Don't let extension activation fail, but instead set a flag that's checked before every command invocation - @brettfo</title>
      <description>&lt;p&gt;Currently if there is an issue with the user's dotnet SDK, extension activation fails and no commands get registered, so if the user then tries to create a new notebook, etc., they're given the very unhelpful message that the command isn't defined.  If instead we effectively wrap the entire activation in &lt;code&gt;try&lt;/code&gt;/&lt;code&gt;catch&lt;/code&gt;, we can then set an extension-wide global indicating the status of activation and check this on all command invocations.&lt;/p&gt;
</description>
      <pubDate>Wed, 17 Aug 2022 20:28:35 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2204</guid>
      <link>https://github.com/dotnet/interactive/issues/2204</link>
      <title>Issue: Creating a new F# notebook switches initial cell to C# after saving - @bmitc</title>
      <description>&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Open Visual Studio Code&lt;/li&gt;
&lt;li&gt;Create a new blank notebook&lt;/li&gt;
&lt;li&gt;Select &amp;quot;Create as '.dib'&amp;quot; (note: this bug doesn't happen if the &lt;code&gt;.ipynb&lt;/code&gt; format is selected at this step)&lt;/li&gt;
&lt;li&gt;Select &amp;quot;F#&amp;quot; as default language&lt;/li&gt;
&lt;li&gt;Note that the initial cell is an F# cell&lt;/li&gt;
&lt;li&gt;Save the notebook to disk&lt;/li&gt;
&lt;li&gt;Note that the initial cell has now switched to a C# cell&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Please complete the following:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Which version of .NET Interactive are you using?&lt;/strong&gt; (In a notebook, run the &lt;code&gt;#!about&lt;/code&gt; magic command. ):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Version: 1.0.340501+e6a4bd71118e0f7b202c761dd208cfa38bd5683b

Library version: 1.0.0-beta.22405.1+e6a4bd71118e0f7b202c761dd208cfa38bd5683b

Build date: 2022-08-12T03:08:59.0408371Z
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;OS
&lt;ul&gt;
&lt;li&gt;[x] Windows 11&lt;/li&gt;
&lt;li&gt;[ ] Windows 10&lt;/li&gt;
&lt;li&gt;[ ] macOS&lt;/li&gt;
&lt;li&gt;[ ] Linux (Please specify distro)&lt;/li&gt;
&lt;li&gt;[ ] iOS&lt;/li&gt;
&lt;li&gt;[ ] Android&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Browser
&lt;ul&gt;
&lt;li&gt;[ ] Chrome&lt;/li&gt;
&lt;li&gt;[ ] Edge&lt;/li&gt;
&lt;li&gt;[ ] Firefox&lt;/li&gt;
&lt;li&gt;[ ] Safari&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Frontend
&lt;ul&gt;
&lt;li&gt;[ ] Jupyter Notebook&lt;/li&gt;
&lt;li&gt;[ ] Jupyter Lab&lt;/li&gt;
&lt;li&gt;[ ] nteract&lt;/li&gt;
&lt;li&gt;[x] Visual Studio Code&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio Code Insiders&lt;/li&gt;
&lt;li&gt;[ ] Visual Studio&lt;/li&gt;
&lt;li&gt;[ ] Other (please specify)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Screenshots&lt;/h3&gt;
&lt;p&gt;If applicable, add screenshots to help explain your problem.&lt;/p&gt;
</description>
      <pubDate>Sun, 14 Aug 2022 21:03:01 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2203</guid>
      <link>https://github.com/dotnet/interactive/issues/2203</link>
      <title>Issue: Right click -&gt; Inspect Variable -&gt; Open Variable Explorer - @claudiaregio</title>
      <description>&lt;p&gt;Requested by user during study:
Ability to right click and select &amp;quot;Inspect Variable&amp;quot; which would open up the variable explorer to improve discoverability.&lt;/p&gt;
&lt;p&gt;Something like this:
&lt;img src="https://user-images.githubusercontent.com/19276747/184427550-d9408d3f-2328-4cbd-8a76-bdacc093eecf.png" alt="image" /&gt;&lt;/p&gt;
</description>
      <pubDate>Fri, 12 Aug 2022 19:12:46 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2202</guid>
      <link>https://github.com/dotnet/interactive/issues/2202</link>
      <title>Issue: Right click to share variables  - @claudiaregio</title>
      <description>&lt;p&gt;Not sure if this is possible, but it would be nice if I could right click on a variable and select &amp;quot;share&amp;quot; in the context menu to bring up the quick pick flow to share with another variable. Today the variable explorer is the only UI we have to bring up the quick pick flow to generate the sharing variable syntax and a user may not want to open up the variable explorer every time just to do so.&lt;/p&gt;
&lt;p&gt;Something like this:
&lt;img src="https://user-images.githubusercontent.com/19276747/184257983-83221dc9-0847-41c7-a178-45071afae661.png" alt="image" /&gt;&lt;/p&gt;
</description>
      <pubDate>Thu, 11 Aug 2022 23:19:39 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2198</guid>
      <link>https://github.com/dotnet/interactive/issues/2198</link>
      <title>Issue: Minimum PowerShell Host Version Error - @stvpwrs</title>
      <description>&lt;p&gt;When trying to run a script with the &lt;code&gt;Microsoft.Xrm.Data.Powershell&lt;/code&gt; module I get the following error:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;The current PowerShell host is: '.NET Interactive Host' (version 0.0.1). The module 'C:\Users\...\Documents\PowerShell\Modules\Microsoft.Xrm.Data.Powershell\2.8.14\Microsoft.Xrm.Data.Powershell.psd1' requires a minimum PowerShell host version of '1.0' to run.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I'm not sure if this is an issue with how this module is checking the PowerShell version or something unexpected with the new .NET Interactive Host.&lt;/p&gt;
</description>
      <pubDate>Wed, 10 Aug 2022 17:43:12 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2191</guid>
      <link>https://github.com/dotnet/interactive/issues/2191</link>
      <title>Issue: variable explorer shouldn't offer to share to a kernel that doesn't support it - @brettfo</title>
      <description>&lt;p&gt;E.g., it's meaningless to share to the &lt;code&gt;mermaid&lt;/code&gt; kernel.&lt;/p&gt;
</description>
      <pubDate>Fri, 05 Aug 2022 18:17:06 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2190</guid>
      <link>https://github.com/dotnet/interactive/issues/2190</link>
      <title>Issue: HTML display for JSON is not left-aligned - @jonsequitur</title>
      <description>&lt;img width="906" alt="image" src="https://user-images.githubusercontent.com/547415/183126878-8ed4d335-3c8d-4790-b364-6a03325d657d.png"&gt;
</description>
      <pubDate>Fri, 05 Aug 2022 17:08:39 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2188</guid>
      <link>https://github.com/dotnet/interactive/issues/2188</link>
      <title>Issue: Update VS Code extension page - @jonsequitur</title>
      <description />
      <pubDate>Thu, 04 Aug 2022 18:17:30 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2187</guid>
      <link>https://github.com/dotnet/interactive/issues/2187</link>
      <title>Issue: Update Repo README - @jonsequitur</title>
      <description />
      <pubDate>Thu, 04 Aug 2022 18:17:27 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2186</guid>
      <link>https://github.com/dotnet/interactive/issues/2186</link>
      <title>Issue: August 2022 rough plan of work - @AbhitejJohn</title>
      <description>&lt;ul&gt;
&lt;li&gt;[ ] #2078 @jonsequitur @claudiaregio
&lt;ul&gt;
&lt;li&gt;[ ] #2187&lt;/li&gt;
&lt;li&gt;[ ] #2188&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[x] #2081 @brettfo @colombod @jonsequitur&lt;/li&gt;
&lt;li&gt;[ ] #2060 @jonsequitur&lt;/li&gt;
&lt;li&gt;[x]  #2059 @jonsequitur&lt;/li&gt;
&lt;li&gt;[ ] #2184 @jonsequitur&lt;/li&gt;
&lt;li&gt;[ ] #2000 @brettfo&lt;/li&gt;
&lt;li&gt;[ ] #2101 @brettfo&lt;/li&gt;
&lt;li&gt;[x] #2154 @jonsequitur&lt;/li&gt;
&lt;li&gt;[x] #2178 @jonsequitur&lt;/li&gt;
&lt;li&gt;[ ] #1852  @brettfo @colombod&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Thu, 04 Aug 2022 16:30:30 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2184</guid>
      <link>https://github.com/dotnet/interactive/issues/2184</link>
      <title>Issue: Add `#!metadata` kernel - @brettfo</title>
      <description>&lt;h1&gt;Current state of the world&lt;/h1&gt;
&lt;p&gt;The addition of a metadata kernel will allow &lt;code&gt;.dib&lt;/code&gt; notebooks to have cell specifiers separate from the well-known ones of &lt;code&gt;#!csharp&lt;/code&gt;, &lt;code&gt;#!fsharp&lt;/code&gt;, etc.  E.g., if one cell of a notebook connects to a SQL database with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!connect mssql --kernel-name adventureworks &amp;quot;&amp;lt;my connection string&amp;gt;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;then the user adds their queries, the current resultant .dib will look like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!csharp

#!connect mssql --kernel-name adventureworks &amp;quot;&amp;lt;my connection string&amp;gt;&amp;quot;

#!csharp

#!sql-adventureworks
SELECT * FROM CUSTOMERS
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This gives an odd view to the user because the query cell isn't &lt;em&gt;really&lt;/em&gt; C# (or SQL, or F#, ...), and the user specified that they wanted the new kernel to be named &lt;code&gt;adventureworks&lt;/code&gt;, not &lt;code&gt;sql-adventureworks&lt;/code&gt;.  The ideal would be something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!csharp

#!connect mssql --kernel-name adventureworks &amp;quot;&amp;lt;my connection string&amp;gt;&amp;quot;

#!adventureworks
SELECT * FROM CUSTOMERS
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;however, it's not known at parse time that &lt;code&gt;#!adventureworks&lt;/code&gt; is a kernel selector, so when loaded, the notebook would have a single cell that looked like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!connect mssql --kernel-name adventureworks &amp;quot;&amp;lt;my connection string&amp;gt;&amp;quot;

#!adventureworks
SELECT * FROM CUSTOMERS
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;Proposal&lt;/h1&gt;
&lt;p&gt;Add a kernel named &lt;code&gt;#!metadata&lt;/code&gt; which at runtime is a no-op, but at parse time can specify various bits of document metadata, possibly expected to be valid JSON.  The example above would result in something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!metadata
{
  &amp;quot;kernels&amp;quot;: [
    {
      &amp;quot;name&amp;quot;: &amp;quot;csharp&amp;quot;,
      &amp;quot;language&amp;quot;: &amp;quot;csharp&amp;quot;
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;fsharp&amp;quot;,
      &amp;quot;language&amp;quot;: &amp;quot;fsharp&amp;quot;
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;adventureworks&amp;quot;,
      &amp;quot;language&amp;quot;: &amp;quot;sql&amp;quot;
    },
  ]
}

#!csharp

#!connect mssql --kernel-name adventureworks &amp;quot;&amp;lt;my connection string&amp;gt;&amp;quot;

#!adventureworks
SELECT * FROM CUSTOMERS
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The parser knows about the special &lt;code&gt;#!metadata&lt;/code&gt; kernel, parses its contents, and it suddently knows that further down the file that &lt;code&gt;#!adventureworks&lt;/code&gt; is a cell splitter and its language is SQL.&lt;/p&gt;
</description>
      <pubDate>Wed, 03 Aug 2022 17:02:04 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2183</guid>
      <link>https://github.com/dotnet/interactive/issues/2183</link>
      <title>Issue: Support for Windows PowerShell - @vojtech-kasny</title>
      <description>&lt;p&gt;&lt;strong&gt;The package and version I'm asking about&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.NET Interactive
© 2020 Microsoft Corporation
Version: 1.0.336204+b3c79a386ecdd5b487649ae0f557851a5da43df9
Library version: 1.0.0-beta.22362.4+b3c79a386ecdd5b487649ae0f557851a5da43df9
Build date: 2022-08-03T08:23:13.2723164Z
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Question&lt;/h3&gt;
&lt;p&gt;Hello.&lt;br /&gt;
Is there any way to run Windows PowerShell (desktop edition) instead of PowerShell core?&lt;/p&gt;
&lt;p&gt;Thank you&lt;/p&gt;
</description>
      <pubDate>Wed, 03 Aug 2022 09:55:26 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2182</guid>
      <link>https://github.com/dotnet/interactive/issues/2182</link>
      <title>Issue: Commands and Events should be classes in typescript - @colombod</title>
      <description>&lt;p&gt;to reflect the logic around routing slip and parent management the contract file should be with classes with constructors instead of bare interfaces&lt;/p&gt;
</description>
      <pubDate>Tue, 02 Aug 2022 16:15:27 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2181</guid>
      <link>https://github.com/dotnet/interactive/issues/2181</link>
      <title>Issue: Hide the 'index' column in a dataframe/table? - @boyedarat</title>
      <description>&lt;p&gt;&lt;strong&gt;The package and version I'm asking about&lt;/strong&gt;:
&lt;img src="https://user-images.githubusercontent.com/22816484/182201574-9000085a-9eec-4a4f-b5c5-acf81026c70e.png" alt="image" /&gt;&lt;/p&gt;
&lt;h3&gt;Question&lt;/h3&gt;
&lt;p&gt;How do I hide the &lt;em&gt;index&lt;/em&gt; column in the output below?
&lt;img src="https://user-images.githubusercontent.com/22816484/182202029-b0a43732-eee1-4542-a63d-56ba3d1680bd.png" alt="image" /&gt;&lt;/p&gt;
</description>
      <pubDate>Mon, 01 Aug 2022 16:53:55 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2180</guid>
      <link>https://github.com/dotnet/interactive/issues/2180</link>
      <title>Issue: send a dispose command before killing the child process - @brettfo</title>
      <description>&lt;p&gt;When stopping/restarting the backing process from the VS Code extension, we &lt;a href="https://github.com/dotnet/interactive/blob/e47da735a08e4a0e65a2cf0c365d0b1b4efddc49/src/dotnet-interactive-vscode-common/src/stdioDotnetInteractiveChannel.ts#L211"&gt;blindly call &lt;code&gt;.kill()&lt;/code&gt;&lt;/a&gt;, but some kernels, particularly remote proxies, might need to clean up some resources.  We should first send &lt;code&gt;DisposeCommand&lt;/code&gt; or similar, give the backing process a short amount of time to respond, and only then would we manually send the &lt;code&gt;.kill()&lt;/code&gt; signal if it didn't gracefully exit on its own.&lt;/p&gt;
</description>
      <pubDate>Fri, 29 Jul 2022 20:44:35 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/interactive/issues/2179</guid>
      <link>https://github.com/dotnet/interactive/issues/2179</link>
      <title>Issue: Implement deferred command support in typescript library - @colombod</title>
      <description>&lt;p&gt;Implement deferred command support in the typescript port to reflect the api surface of the .NET code base&lt;/p&gt;
</description>
      <pubDate>Fri, 29 Jul 2022 09:10:51 Z</pubDate>
    </item>
  </channel>
</rss>