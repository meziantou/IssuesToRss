<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>dotnet/EntityFramework.Docs Issues</title>
    <description>Issues from https://github.com/dotnet/EntityFramework.Docs, generated by https://github.com/meziantou/IssuesToRss/</description>
    <managingEditor>meziantousite@outlook.com</managingEditor>
    <ttl>60</ttl>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4049</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4049</link>
      <title>Issue: Mistake in reference to Include extension method - @malbruk</title>
      <description>&lt;p&gt;Include is an extension method in the Microsoft.EntityFrameworkCore namespace  and not in the System.Data.Entity namespace as written.&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 09:47:48 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4047</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4047</link>
      <title>Issue: Breaking change: throw when using relational FromSqlRaw with Cosmos, or vice-versa - @ajcvickers</title>
      <description>&lt;p&gt;https://github.com/dotnet/efcore/issues/26502&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 20:37:39 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4046</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4046</link>
      <title>Issue: Split query generation/docs [possible repeat] - @DickBaker</title>
      <description>&lt;ol&gt;
&lt;li&gt;the code examples will bring back all the Blogs &amp;amp; Posts rows. Better that examples have a WHERE Rating&amp;gt;=4 or somesuch to show how that will also be present in the 2nd SELECT split.&lt;/li&gt;
&lt;li&gt;the &amp;quot;cartesian explosion&amp;quot; duplicates only applies when querying Posts with an INCLUDE(&amp;quot;Blogs&amp;quot;) that will have dups of Blogs with multiple Posts, so I would suggest you revise the examples given.&lt;/li&gt;
&lt;li&gt;surely the EF code generation should impose a DISTINCT in the split statements to suppress such dups?&lt;/li&gt;
&lt;li&gt;I am surprised that the generated split code shown uses the b.BlogId and not the p.BlogId - yes I know they are the same per the ON clause but it rankles when you are really looking for all the p.* fields to match the EF entity definition [just requires more brain-cycles to validate the resulant match!]&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Apologies if this shows up as a repeat as I can't see Issue against my Participating filter. Maybe I never hit the Submit button [brain fade] or EF team summarily Closed it?!
[Enter feedback here]&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for learn.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: 43baa9f3-c415-c328-6c10-53aabaaec652&lt;/li&gt;
&lt;li&gt;Version Independent ID: 4e789a1b-aa88-d194-dc2e-0a23251250d7&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://learn.microsoft.com/en-us/ef/core/querying/single-split-queries"&gt;Single vs. Split Queries - EF Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/querying/single-split-queries.md"&gt;entity-framework/core/querying/single-split-queries.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @smitpatel&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 18:47:35 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4045</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4045</link>
      <title>Issue: piggyback split queries - @DickBaker</title>
      <description>&lt;h2&gt;Docpage states &amp;quot;Each query currently implies an additional network roundtrip to your database.&amp;quot; but surely this ain't necessarily so ? I supposethat current EF would batch the 1st &amp;amp; 2nd (i.e. split) query into a single TSQL request payload, so achieves a single round-trip [i.e. not needing MARS to multiplex the session, and EF also receives &amp;amp; digests both resultsets from a single tx from MSSQL/etc]&lt;/h2&gt;
&lt;h4&gt;Document details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: 43baa9f3-c415-c328-6c10-53aabaaec652&lt;/li&gt;
&lt;li&gt;Version Independent ID: 4e789a1b-aa88-d194-dc2e-0a23251250d7&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://learn.microsoft.com/en-gb/ef/core/querying/single-split-queries"&gt;Single vs. Split Queries - EF Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/querying/single-split-queries.md"&gt;entity-framework/core/querying/single-split-queries.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @smitpatel&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 18:15:46 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4044</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4044</link>
      <title>Issue: encourage WHERE even if splitting - @DickBaker</title>
      <description>&lt;ol&gt;
&lt;li&gt;the code examples will bring back all the Blogs &amp;amp; Posts rows. Better that examples have a WHERE Rating&amp;gt;=4 or somesuch to show how that will also be present in the 2nd SELECT split.&lt;/li&gt;
&lt;li&gt;the &amp;quot;cartesian explosion&amp;quot; duplicates only applies when querying Posts with an INCLUDE(&amp;quot;Blog&amp;quot;) that will have dups of Blogs with multiple Posts, so I would suggest you revise the examples given.&lt;/li&gt;
&lt;li&gt;surely the EF code generation should impose a DISTINCT in the split statements to suppress such dups?&lt;/li&gt;
&lt;li&gt;I am surprised that the generated split code shown uses the b.BlogId and not the p.BlogId - yes I know they are the same per the ON clause but it rankles when you are really looking for all the p.* fields to match the EF entity definition [just requires more brain-cycles to validate the resulant match!]&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h4&gt;Document details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: 43baa9f3-c415-c328-6c10-53aabaaec652&lt;/li&gt;
&lt;li&gt;Version Independent ID: 4e789a1b-aa88-d194-dc2e-0a23251250d7&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://learn.microsoft.com/en-gb/ef/core/querying/single-split-queries"&gt;Single vs. Split Queries - EF Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/querying/single-split-queries.md"&gt;entity-framework/core/querying/single-split-queries.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @smitpatel&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 13:04:56 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4041</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4041</link>
      <title>Issue: Document SQL queries for scalar, non-entity types - @roji</title>
      <description>&lt;p&gt;See https://github.com/dotnet/efcore/issues/11624&lt;/p&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 13:27:58 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4039</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4039</link>
      <title>Issue: EF Core no longer fixes up to Deleted entities - @ajcvickers</title>
      <description>&lt;p&gt;https://github.com/dotnet/efcore/issues/28249&lt;/p&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 09:41:43 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4036</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4036</link>
      <title>Issue: I'm struggling here ar FRomExpression seems not to exist in DbContaxt in EF 6.4.4 and I can't find the documentation of why or what to use instead.  I assume its perhaps no longer needed to map a TVF? - @ianonahillroad</title>
      <description>&lt;p&gt;[Enter feedback here]&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: e34d3f39-600f-0c37-a0a4-11a245d3010c&lt;/li&gt;
&lt;li&gt;Version Independent ID: 5b51ed49-1035-1a8f-a08e-7400d571c77b&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://learn.microsoft.com/en-us/ef/core/querying/user-defined-function-mapping?source=recommendations"&gt;User-defined function mapping - EF Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/querying/user-defined-function-mapping.md"&gt;entity-framework/core/querying/user-defined-function-mapping.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @maumar&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Sun, 18 Sep 2022 10:00:45 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4034</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4034</link>
      <title>Issue: Document SqlQuery - @smitpatel</title>
      <description />
      <pubDate>Fri, 16 Sep 2022 18:33:46 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4033</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4033</link>
      <title>Issue: Document client GroupBy - @smitpatel</title>
      <description />
      <pubDate>Fri, 16 Sep 2022 18:32:47 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4032</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4032</link>
      <title>Issue: Document ExecuteDelete/ExecuteUpdate - @smitpatel</title>
      <description />
      <pubDate>Fri, 16 Sep 2022 18:32:14 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4031</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4031</link>
      <title>Issue: OwnedNavigationBuilder Does not Have Option to Specify Backing Field  - @jakingmsft</title>
      <description>&lt;p&gt;Say my model has parent-children relations where children are considered owned by parent, and say I want to represent as JSON like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    // ... 
   &amp;quot;children&amp;quot;: [ ... ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and my C# model like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class Parent
{
     // ...

      public IReadOnlyCollection&amp;lt;Child&amp;gt; Children =&amp;gt; this._children;

      private List&amp;lt;Child&amp;gt; _children;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This works because of conventionally named &lt;code&gt;_children&lt;/code&gt; matching &lt;code&gt;Children&lt;/code&gt;. However, if I wanted to customize, there appears to be no way, like there is with normal properties.&lt;/p&gt;
&lt;p&gt;Cannot do&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;builder.OwnsMany(p =&amp;gt; p.Children, onb =&amp;gt;
{
     onb.ToJsonProperty(&amp;quot;children&amp;quot;);
     // ...
})
.Property(p =&amp;gt; p.Children).HasField(...);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;because owned entities are incompatible with properties (Error at runtime).&lt;/p&gt;
&lt;p&gt;Also cannot do&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;builder.OwnsMany(p =&amp;gt; p.Children, onb =&amp;gt;
{
     onb.HasField(...);
     onb.ToJsonProperty(&amp;quot;children&amp;quot;);
     // ...
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;because there is no such method on &lt;code&gt;OwnedNavigationBuilder&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;Note that this is more like a feature request to make the model building a litttttllllle more flexible :)&lt;/p&gt;
</description>
      <pubDate>Thu, 15 Sep 2022 21:19:09 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4030</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4030</link>
      <title>Issue: Are you sure that the keys of entities in Added state have been set?  - @pstricks-fans</title>
      <description>&lt;p&gt;According to the documentation,&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/50270635/190344462-5bd5cb19-5ccf-4989-b8a9-bb96f86f8c40.png" alt="trackedid" /&gt;&lt;/p&gt;
&lt;p&gt;keys are set as soon as entities are tracked by the context, even if the entity is in the &lt;code&gt;Added&lt;/code&gt;  state.&lt;/p&gt;
&lt;p&gt;In the following code, I found the claim is not correct.
Right before &lt;code&gt;SaveChangeAsync()&lt;/code&gt; is invoked but after &lt;code&gt;AddAsync()&lt;/code&gt; is invoked,  the entity is in &lt;code&gt;Added&lt;/code&gt; state and the &lt;code&gt;IsKeySet&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt; (rather than &lt;code&gt;True&lt;/code&gt; as the documentation claims). It means the key has not been set yet.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;private static async Task&amp;lt;IResult&amp;gt; Add(StudentEnrollmentDbContext ctx, Course course, ILogger&amp;lt;Program&amp;gt; logger)
{
    var added = await ctx.Courses.AddAsync(course);
    logger.LogError(added.Entity.Id.ToString()); // output: 0
    logger.LogError(added.State.ToString()); // output: Added
    logger.LogError(added.IsKeySet.ToString()); // output: False
    await ctx.SaveChangesAsync();
    logger.LogError(&amp;quot;=========================&amp;quot;);
    logger.LogError(added.Entity.Id.ToString()); // output: 1006
    logger.LogError(added.State.ToString()); // output: Unchanged
    logger.LogError(added.IsKeySet.ToString()); // output: True
    return Results.CreatedAtRoute(nameof(Get), new { id = added.Entity.Id }, added.Entity);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/50270635/190346046-70e53e65-8f89-4ae9-a273-14e347b37cf7.png" alt="log" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: b9826f28-46b2-e845-f1bf-5cbc2d940208&lt;/li&gt;
&lt;li&gt;Version Independent ID: 9c4a46cf-daa2-0e14-7ff1-c195db237cd0&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/core/saving/disconnected-entities"&gt;Disconnected Entities - EF Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/saving/disconnected-entities.md"&gt;entity-framework/core/saving/disconnected-entities.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @ajcvickers&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Thu, 15 Sep 2022 07:56:33 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4029</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4029</link>
      <title>Issue: Document warnings configured to throw by default will now do so again - @ajcvickers</title>
      <description>&lt;p&gt;See https://github.com/dotnet/efcore/issues/29069&lt;/p&gt;
</description>
      <pubDate>Wed, 14 Sep 2022 10:01:15 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4028</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4028</link>
      <title>Issue: database EnsureDeleted &amp; EnsureCreated - @DickBaker</title>
      <description>&lt;p&gt;docs at https://docs.microsoft.com/en-us/ef/core/testing/testing-with-the-database#efficient-database-creation debate when EnsureX is called (worrying about outdated schema). Surely this 1-off db drop+create could be best implemented in a static ctor since this must be executed [once] before any instance ctor is invoked ?&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: b7fc3c3b-c859-2ad5-78f3-ce57d3c9bc2d&lt;/li&gt;
&lt;li&gt;Version Independent ID: b7fc3c3b-c859-2ad5-78f3-ce57d3c9bc2d&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/core/testing/testing-with-the-database"&gt;Testing against your Production Database System - EF Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/testing/testing-with-the-database.md"&gt;entity-framework/core/testing/testing-with-the-database.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @roji&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Tue, 13 Sep 2022 19:10:49 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4025</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4025</link>
      <title>Issue: Very poor documentation! Please explain the sample codes. Please also provide scenarios where it could be used. - @geetmenon</title>
      <description>&lt;p&gt;For e.g. in the section &amp;quot;Shared-type entity types and property bags&amp;quot;, the documentation is so poor that we can't understand anything. I clicked on the property bags link  &lt;code&gt;https://docs.microsoft.com/en-us/ef/core/modeling/shadow-properties#property-bag-entity-types&lt;/code&gt;  hoping it will provide a detailed explanation. But that was even worse.  Remember, the documentation is not for Microsoft but the external users/developers. So give proper explanation (especially of the examples) so that we can actually appreciate the feature and start using it (instead of making it very confusing or ambiguous for the developers). These features are of no use if you have it but we can't use it for lack of proper documentation.&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: 32360b50-1129-b3d2-2d71-c6b89cd9f2c6&lt;/li&gt;
&lt;li&gt;Version Independent ID: 4f18f8dc-5cd5-cb37-0f59-fb1767609b2b&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/core/what-is-new/ef-core-5.0/whatsnew"&gt;What's New in EF Core 5.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/what-is-new/ef-core-5.0/whatsnew.md"&gt;entity-framework/core/what-is-new/ef-core-5.0/whatsnew.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @ajcvickers&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Tue, 13 Sep 2022 00:34:28 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4022</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4022</link>
      <title>Issue: Mixed usage of `EF Core` and `EF` - @mkArtak</title>
      <description>&lt;p&gt;I think the terminology here gets mixed up a bit. It starts with using &lt;code&gt;EF Core&lt;/code&gt; and then sometimes just &lt;code&gt;EF&lt;/code&gt; is used. Specifically, this spot:
&lt;img src="https://user-images.githubusercontent.com/7347708/189511279-d39a217f-0a18-4b85-9832-6629062c000c.png" alt="image" /&gt;&lt;/p&gt;
&lt;p&gt;The first paragraph starts with &lt;code&gt;EF Core&lt;/code&gt; and the second one mentions only &lt;code&gt;EF&lt;/code&gt;. Should the second one also be EF Core?&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: 1b15cd4c-9cba-c0e2-7618-7d621a3c5936&lt;/li&gt;
&lt;li&gt;Version Independent ID: f4681bc6-57be-6e69-cad9-776ce64d93bd&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/core/"&gt;Overview of Entity Framework Core - EF Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/index.md"&gt;entity-framework/core/index.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @ajcvickers&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Sun, 11 Sep 2022 03:35:37 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4021</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4021</link>
      <title>Issue: Unable to follow the documentation - @BusHero</title>
      <description>&lt;p&gt;I'm not able to follow the documentation. The documentation doesn't describe all the components a project should have to successfully use the commands described in the documentation. Apparently, it's not enough to just have a model and a Context in your project.&lt;/p&gt;
&lt;p&gt;I have a model that looks like this&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-c#"&gt;public class Schema
{
    public int Id { get; set; }
    public string Namespace { get; set; }
    public string Xsd { get; set; }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and a Context class that looks like this&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-c#"&gt;public class SchemaContext : DbContext
{
    public SchemaContext(DbContextOptions&amp;lt;SchemaContext&amp;gt; options) : base(options)
    {
    }

    public DbSet&amp;lt;Schema&amp;gt; Schemas { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity&amp;lt;Schema&amp;gt;().ToTable(&amp;quot;Schemas&amp;quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and when I run:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;dotnet ef migrations add InitialCreate
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I get: &lt;code&gt;Unable to create an object of type 'SchemaContext'. For the different patterns supported at design time, see https://go.microsoft.com/fwlink/?linkid=851728&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: 6e28b0a8-b7e4-4c07-9e60-0df403bbee28&lt;/li&gt;
&lt;li&gt;Version Independent ID: 12300b31-6f7b-b75c-970d-693365e77013&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/core/managing-schemas/migrations/?tabs=dotnet-core-cli"&gt;Migrations Overview - EF Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/managing-schemas/migrations/index.md"&gt;entity-framework/core/managing-schemas/migrations/index.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @bricelam&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Fri, 09 Sep 2022 18:35:24 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4018</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4018</link>
      <title>Issue: Add documentation quickstart for .NET Interactive - @JeremyLikness</title>
      <description>&lt;p&gt;Using the basic getting started as a template, show how to run the example in a Jupyter notebook with .NET Interactive.&lt;/p&gt;
</description>
      <pubDate>Wed, 07 Sep 2022 14:51:51 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4017</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4017</link>
      <title>Issue: Cosmos provider has many more limitations than those documented - @dougclutter</title>
      <description>&lt;p&gt;Here are a few Cosmos Provider limitations that &lt;strong&gt;should&lt;/strong&gt; be mentioned on this page:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EF Core Migrations are not supported by the Cosmos Provider. Since this wasn't specifically mentioned on this page, I tried to use Migrations, and it ended...poorly. The error message returned by the Cosmos Provider when trying to initialize migrations is less than useless. Please save other developers the time and frustration by specifically mentioning this limitation on this page.&lt;/li&gt;
&lt;li&gt;Indexes defined on the DbContext are not created by EnsureDatabaseExists.  The containers are created, but the indexes are not.&lt;/li&gt;
&lt;li&gt;Check constraints, et al - I haven't specifically tried these yet, but I'm betting they don't work either.  If not, please let us know on this page.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I've spent most of my career working with Oracle/SQL Server databases, so my feedback is tainted by my RDBMS background. Nonetheless, I hope this was helpful.&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: a102d2e4-41d0-4619-a463-3e3862311a01&lt;/li&gt;
&lt;li&gt;Version Independent ID: a80b35f2-09dc-da67-df83-253ca5fd78cb&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/core/providers/cosmos/limitations"&gt;Azure Cosmos DB Provider - Limitations - EF Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/providers/cosmos/limitations.md"&gt;entity-framework/core/providers/cosmos/limitations.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @AndriySvyryd&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Wed, 07 Sep 2022 12:47:31 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4014</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4014</link>
      <title>Issue: Poor documentation - @geetmenon</title>
      <description>&lt;p&gt;Very poor documentation! Please explain the sample codes. Please also provide scenarios where it could be used.&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: 32360b50-1129-b3d2-2d71-c6b89cd9f2c6&lt;/li&gt;
&lt;li&gt;Version Independent ID: 4f18f8dc-5cd5-cb37-0f59-fb1767609b2b&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/core/what-is-new/ef-core-5.0/whatsnew"&gt;What's New in EF Core 5.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/what-is-new/ef-core-5.0/whatsnew.md"&gt;entity-framework/core/what-is-new/ef-core-5.0/whatsnew.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @ajcvickers&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Tue, 06 Sep 2022 03:43:03 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4024</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4024</link>
      <title>Issue: How to upgrade use of GetColumnName() method - @ygoe</title>
      <description>&lt;p&gt;I'm upgrading an application from ASP.NET Core 3.1 to 6.0. Reading the migration documents, I found this:&lt;/p&gt;
&lt;p&gt;https://docs.microsoft.com/en-us/ef/core/what-is-new/ef-core-5.0/breaking-changes#getcolumnname-obsolete&lt;/p&gt;
&lt;p&gt;And I'm using that method here:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-C#"&gt;	public class MainDbContext : DbContext
	{
		protected override void OnModelCreating(ModelBuilder modelBuilder)
		{
			base.OnModelCreating(modelBuilder);
			// ...

			// Map JSON string properties to the native type jsonb.
			foreach (var entity in modelBuilder.Model.GetEntityTypes())
			{
				foreach (var property in entity.GetProperties())
				{
					if (property.GetColumnName().EndsWith(&amp;quot;Json&amp;quot;) &amp;amp;&amp;amp;
						property.ClrType == typeof(string))
					{
						property.SetColumnType(&amp;quot;jsonb&amp;quot;);
					}
				}
			}
		}
	}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This doesn't compile anymore. The migration document has a code sample that doesn't look right to me. I don't want to look up anything in &amp;quot;Users&amp;quot; here but I need the column of a table. (Are there other columns, too?!) The documentation of the method itself is not helpful as it does not explain what I should pass as parameter.&lt;/p&gt;
&lt;p&gt;How can I make that code work again with the current EF version? I want that method back and I don't understand why it was removed. It has always worked perfectly for me. This change is not an improvement for me.&lt;/p&gt;
&lt;p&gt;EF Core version: 6.0
Database provider: PostgreSQL
Target framework: .NET 6.0
Operating system: Windows 10, Linux
IDE: Visual Studio 2022&lt;/p&gt;
</description>
      <pubDate>Mon, 05 Sep 2022 15:17:46 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4013</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4013</link>
      <title>Issue: Design-time services documentation out of date - @iplusMario</title>
      <description>&lt;p&gt;[Enter feedback here]
This documentation is out of date.
In net 6.0 this line &lt;code&gt;var migrationsScaffolder = serviceProvider.GetService&amp;lt;IMigrationsScaffolder&amp;gt;()&lt;/code&gt; throws error.&lt;/p&gt;
&lt;p&gt;See https://github.com/dotnet/efcore/issues/23595&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: 2886eabf-4b28-c390-9634-14e623e8ec8e&lt;/li&gt;
&lt;li&gt;Version Independent ID: 1ef0f90d-664c-81f7-ee5d-f67dafce4ed1&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/core/cli/services"&gt;Design-time services - EF Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/cli/services.md"&gt;entity-framework/core/cli/services.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @bricelam&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Mon, 05 Sep 2022 07:22:32 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4012</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4012</link>
      <title>Issue: Please add sample for seeding User &amp; Roles - @papyr</title>
      <description>&lt;p&gt;Please update the page so that we can easily understand the right way to Seeding users, claims and roles, due to millions ways to do this, has become quite an issue, especially when we override user/role class or add properties to the user class.&lt;/p&gt;
&lt;p&gt;Would be nice to have a default /standard way to do this - where the data is checked before seeding in a debug environment only.&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: 3437af67-630b-d28f-7fbd-3eedf647f22a&lt;/li&gt;
&lt;li&gt;Version Independent ID: 6c44f987-19a7-c256-e8fa-10378e61cf6e&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/core/modeling/"&gt;Creating and configuring a model - EF Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/modeling/index.md"&gt;entity-framework/core/modeling/index.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @AndriySvyryd&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Sun, 04 Sep 2022 22:08:57 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4011</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4011</link>
      <title>Issue: I hate broken links!   https://go.microsoft.com/fwlink/?linkid=2101038 - @Snappee</title>
      <description>&lt;p&gt;[Enter feedback here]&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: e788e366-d94c-8aa1-3167-72af27a1c23d&lt;/li&gt;
&lt;li&gt;Version Independent ID: 85363d2a-1051-ec35-21a8-2c11fd5c6727&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.entityframeworkcore.diagnostics.corestrings.translationfailedwithdetails?view=efcore-6.0"&gt;CoreStrings.TranslationFailedWithDetails(Object, Object) Method (Microsoft.EntityFrameworkCore.Diagnostics)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.ApiDocs/blob/live/dotnet/xml/Microsoft.EntityFrameworkCore.Diagnostics/CoreStrings.xml"&gt;dotnet/xml/Microsoft.EntityFrameworkCore.Diagnostics/CoreStrings.xml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;ef-core-api&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @dotnet-bot&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Sat, 03 Sep 2022 22:46:33 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4010</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4010</link>
      <title>Issue: SQL Server TPT tables have cascade delete - @ajcvickers</title>
      <description>&lt;p&gt;https://github.com/dotnet/efcore/pull/28965&lt;/p&gt;
</description>
      <pubDate>Fri, 02 Sep 2022 19:09:48 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4009</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4009</link>
      <title>Issue: Video file format is different from what is listed - @0014</title>
      <description>&lt;p&gt;There is an .mp4 file which can be downloaded in order to show entity framework enum operations. When you download the file, it gets downloaded in .m4v format.&lt;/p&gt;
&lt;h2&gt;I had to rename m4v to mp4 to run the video.&lt;/h2&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: f542fca8-b394-3bb7-9ae9-07e36c8616a1&lt;/li&gt;
&lt;li&gt;Version Independent ID: c7844dd8-7888-946b-bf95-c2027b05a179&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/ef6/modeling/designer/data-types/enums"&gt;Enum Support - EF Designer - EF6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/ef6/modeling/designer/data-types/enums.md"&gt;entity-framework/ef6/modeling/designer/data-types/enums.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-6&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @ajcvickers&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Fri, 02 Sep 2022 14:29:12 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4004</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4004</link>
      <title>Issue: "Multiple databases and connection strings" section doesn't seem quite right - @nick-devuser</title>
      <description>&lt;p&gt;I have probably missed the point but the multiple databases bit doesn't seem right to me.&lt;/p&gt;
&lt;p&gt;An ITenantService is injected into the constructor and a _tenantService member variable is set to contain it.&lt;/p&gt;
&lt;p&gt;The _tenantService is accessed in the OnConfiguring() but the OnConfiguring() is called by the base constructor which happens before
the _tenantService variable is set so won't it always be null in the OnConfiguring()?&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: bb29a2b6-c401-287f-2da9-1aeb3c633b41&lt;/li&gt;
&lt;li&gt;Version Independent ID: bb29a2b6-c401-287f-2da9-1aeb3c633b41&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/core/miscellaneous/multitenancy"&gt;Multi-tenancy - EF Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/miscellaneous/multitenancy.md"&gt;entity-framework/core/miscellaneous/multitenancy.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @JeremyLikness&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;jeliknes&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Mon, 29 Aug 2022 13:29:11 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4003</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4003</link>
      <title>Issue: How to use a custom function in the extended function "Select" of IQueryable - @iran1024</title>
      <description>&lt;p&gt;How to use a custom function in the extended function &amp;quot;Select&amp;quot; of IQueryable
&lt;img src="https://user-images.githubusercontent.com/49387318/187140975-0821bd21-b804-47d7-8e35-eef5c947c457.png" alt="image" /&gt;&lt;/p&gt;
</description>
      <pubDate>Mon, 29 Aug 2022 06:54:53 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/4002</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/4002</link>
      <title>Issue: Document aggregate functions - @roji</title>
      <description>&lt;p&gt;We should have a general conceptual section for aggregate functions, possibly under &lt;a href="https://docs.microsoft.com/en-us/ef/core/querying/complex-query-operators"&gt;complex query operators&lt;/a&gt; (though technically aside from Min/Max and friends these aren't exactly LINQ operators).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generally explain how to you use them in the projection after GroupBy&lt;/li&gt;
&lt;li&gt;Show different supported operators (distinct, ordering, filter)&lt;/li&gt;
&lt;li&gt;Show workaround for executing these top-level, with GroupBy on a constant (see https://github.com/dotnet/efcore/issues/28264#issue-1275817597)&lt;/li&gt;
&lt;li&gt;Link from the &lt;a href="https://github.com/dotnet/EntityFramework.Docs/pull/4001/files#diff-d6a4079050c8025a978646efbde378336c3e33c6ee394f9570d88ef616b6a971R16"&gt;translation reference&lt;/a&gt; to this section.&lt;/li&gt;
&lt;li&gt;Mention that aggregate UDF mapping isn't yet possible (https://github.com/dotnet/efcore/issues/27934)&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Sun, 28 Aug 2022 08:48:03 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3997</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3997</link>
      <title>Issue: Example contradicts the Warning - @keyboarder</title>
      <description>&lt;p&gt;The Warning box explains that it is necessary to specify proper sort order on queries that call &lt;code&gt;AsSplitQuery()&lt;/code&gt;.  Specifically it says &amp;quot;&lt;em&gt;Note that relational databases do not apply any ordering by default, even on the primary key.&lt;/em&gt;&amp;quot;&lt;/p&gt;
&lt;p&gt;The example code immediately preceding the warning apparently contradicts this advise.  It shows SQL generated from a query that took no care to specify a sort order, yet the generated SQL includes &amp;quot;ORDER BY [b].[BlogId]&amp;quot; in both SELECT statements.&lt;/p&gt;
&lt;p&gt;So which is it?  Does EF Core do some magic to pick a default sort order or not?  Does the SQL in the box really come from the given C# query or not?  Something needs to be updated in the document to remove the contradiction.&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: 43baa9f3-c415-c328-6c10-53aabaaec652&lt;/li&gt;
&lt;li&gt;Version Independent ID: 4e789a1b-aa88-d194-dc2e-0a23251250d7&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/core/querying/single-split-queries"&gt;Single vs. Split Queries - EF Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/querying/single-split-queries.md"&gt;entity-framework/core/querying/single-split-queries.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @smitpatel&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Thu, 25 Aug 2022 00:14:00 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3996</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3996</link>
      <title>Issue: Document built-in conventions and what they do - @ajcvickers</title>
      <description />
      <pubDate>Wed, 24 Aug 2022 23:06:32 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3994</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3994</link>
      <title>Issue: Benchmark is Incomplete and Misleading - @ackava</title>
      <description>&lt;p&gt;We have recently used TPH over TPT and we found that queries are very slow when TPH is used as owned types.&lt;/p&gt;
&lt;p&gt;We already had used TPT in the past, we decided to migrate to TPH based on this performance, it seems the performance calculation is incomplete and misleading.&lt;/p&gt;
&lt;p&gt;Problems with TPH&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You need to have identity column.&lt;/li&gt;
&lt;li&gt;Unique entities would require additional unique index with filter.&lt;/li&gt;
&lt;li&gt;Joins with other tables will slow down as SQL server will skip indexes due to Discriminators.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The last point slows down SQL server by 100 folds, our queries that finishes in milliseconds with 100000 of items, it now takes 6-7 seconds with only 1000 items.&lt;/p&gt;
&lt;p&gt;We didn't even get to go live.&lt;/p&gt;
&lt;p&gt;Here is a sample model.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-c#"&gt;
   class Job {

       public List&amp;lt;LocationConstraint&amp;gt; Locations { get; set; }
       public List&amp;lt;AgeConstraint&amp;gt; Ages { get; set; }
       public List&amp;lt;EducationConstraint&amp;gt; Educations { get;set; }
   }
  
   class Constraint {
        [Key, DatabaseGenerated.....]
        public long ConstraintID { get; set; }
        public long JobID {get;set;}
   }

   class LocationConstraint : Constraint {
        public long CityID {get;set;}       
        public double Radius {get;set;}
        [ForeignKey(nameof(CityID))]
        public City City { get; set; }
   }

   class AgeConstraint: Constraint {
        public int MinAge {get;set;}
        public int MaxAge {get;set;}
   }

   class EducationConstraint: Constraint {
        public int Level {get;set; }
   }

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this searching jobs with some constraints, matching by location, by age and by other degree, is extremely slow. The generated query is very complex for even simple search with two constraints.&lt;/p&gt;
&lt;p&gt;In order to search jobs by location range, the join to City table through LocationConstraint becomes very slow.&lt;/p&gt;
&lt;p&gt;One could argue that we shouldn't use this in terms of owned types, but this is just for reference.&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: deb8ded7-f955-4e7e-c711-722af98c84d7&lt;/li&gt;
&lt;li&gt;Version Independent ID: 9acdd9fa-8c8f-7548-83bd-8ff966d78fc8&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/core/performance/modeling-for-performance#inheritance-mapping"&gt;Modeling for Performance - EF Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/performance/modeling-for-performance.md"&gt;entity-framework/core/performance/modeling-for-performance.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @roji&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Tue, 23 Aug 2022 15:18:21 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3988</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3988</link>
      <title>Issue: Document guidelines for using EF Core with trimming - @roji</title>
      <description>&lt;p&gt;Depending on where we end up, this may just be &amp;quot;disable it&amp;quot;, or a set of coding guidelines to make things work well when trimming is enabled.&lt;/p&gt;
</description>
      <pubDate>Thu, 18 Aug 2022 21:58:03 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3985</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3985</link>
      <title>Issue: Revisit our concurrency token/optimistic concurrency docs - @roji</title>
      <description>&lt;ul&gt;
&lt;li&gt;Make the distinction clearer between user-managed and store-generated concurrency tokens. We currently don't explain how user-managed work or show a sample for them.&lt;/li&gt;
&lt;li&gt;Make it clearer that store-generated concurrency tokens are either very database-specific (e.g. rowversion), or require a user mechanism such as a trigger (e.g. https://github.com/npgsql/efcore.pg/issues/2472#issuecomment-1217007628).&lt;/li&gt;
&lt;li&gt;Controversial: the docs are currently split between modeling (concurrency token) and saving (optimistic concurrency). Structuring our docs by modeling vs. saving may not be the right thing here; we should consider documenting concurrency tokens as part of the general, user-facing feature, which is optimistic concurrency.&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Tue, 16 Aug 2022 22:34:02 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3984</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3984</link>
      <title>Issue: EF Core with MAUI walkthrough - @ajcvickers</title>
      <description />
      <pubDate>Tue, 16 Aug 2022 17:45:54 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3981</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3981</link>
      <title>Issue: Documentation only lists some of the error codes handled - @tjrobinson</title>
      <description>&lt;p&gt;The documentation currently states that &amp;quot;This execution strategy will retry the operation on &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.timeoutexception"&gt;TimeoutException&lt;/a&gt; and &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.data.sqlclient.sqlexception"&gt;SqlException&lt;/a&gt; if the &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.data.sqlclient.sqlexception.errors#system-data-sqlclient-sqlexception-errors"&gt;Errors&lt;/a&gt; contains any of the following error numbers: 40613, 40501, 40197, 10929, 10928, 10060, 10054, 10053, 233, 64 and 20&amp;quot;&lt;/p&gt;
&lt;p&gt;But if you look at the source code, there are other error codes which it will also check for, including 1205 (deadlock):&lt;/p&gt;
&lt;p&gt;https://github.com/dotnet/ef6/blob/main/src/EntityFramework.SqlServer/SqlAzureRetriableExceptionDetector.cs&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: ce95f1d6-cd64-04c1-4583-8313531a490a&lt;/li&gt;
&lt;li&gt;Version Independent ID: 2dc552b7-738d-3a1f-e1a0-ae9c0b67b36b&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.data.entity.sqlserver.sqlazureexecutionstrategy?view=entity-framework-6.2.0"&gt;SqlAzureExecutionStrategy Class (System.Data.Entity.SqlServer)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.ApiDocs/blob/live/EF/xml/System.Data.Entity.SqlServer/SqlAzureExecutionStrategy.xml"&gt;EF/xml/System.Data.Entity.SqlServer/SqlAzureExecutionStrategy.xml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-6&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @dotnet-bot&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Mon, 15 Aug 2022 10:40:28 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3980</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3980</link>
      <title>Issue: EntityFramework connection to a Azure Database too hard - @Johnvan</title>
      <description>&lt;p&gt;[Enter feedback here]&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: e1601c3e-3f29-5d84-6350-2b38eeaf6adc&lt;/li&gt;
&lt;li&gt;Version Independent ID: 92a856d6-c5da-e215-46ac-d67c411f3ff9&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/core/managing-schemas/scaffolding?tabs=dotnet-core-cli"&gt;Reverse Engineering - EF Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/managing-schemas/scaffolding.md"&gt;entity-framework/core/managing-schemas/scaffolding.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @bricelam&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Sun, 14 Aug 2022 08:14:27 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3978</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3978</link>
      <title>Issue: Prerequisites are too old. - @JustinSometimesWrong</title>
      <description>&lt;p&gt;This page has 10 year old pre-requisites.  Please update for Visual Studio 2022.&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: 9c8be815-df51-dc77-fb5b-ccfa7f742e10&lt;/li&gt;
&lt;li&gt;Version Independent ID: 353c54e3-b7c9-fcdd-ca71-2a11beab19fd&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/ef6/modeling/code-first/workflows/new-database"&gt;Code First to a New Database - EF6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/ef6/modeling/code-first/workflows/new-database.md"&gt;entity-framework/ef6/modeling/code-first/workflows/new-database.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-6&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @ajcvickers&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Fri, 12 Aug 2022 20:44:11 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3976</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3976</link>
      <title>Issue: Custom Scaffolding Templates - @bricelam</title>
      <description>&lt;p&gt;We should add a walkthrough showing how to obtain and tweak the default scaffolding templates.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dotnet new install Microsoft.EntityFrameworkCore.Templates
dotnet new ef-templates
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A brief overview of T4 and a link to &lt;a href="https://docs.microsoft.com/en-us/visualstudio/modeling/code-generation-and-t4-text-templates?view=vs-2022"&gt;those docs&lt;/a&gt; might also be useful.&lt;/p&gt;
</description>
      <pubDate>Fri, 12 Aug 2022 16:26:46 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3975</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3975</link>
      <title>Issue: Show Migrations using Visual Studio Connected Services - @bricelam</title>
      <description>&lt;p&gt;We should add a walkthrough or something showing what a migrations workflow would look like using the Connected Services commands inside Visual Studio.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://pbs.twimg.com/media/FQzZXomXoAAQKdm?format=png&amp;amp;name=large" alt="" /&gt;&lt;/p&gt;
</description>
      <pubDate>Thu, 11 Aug 2022 16:53:24 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3983</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3983</link>
      <title>Issue: FirstOrDefault() returning null in .NET 6 but empty object in .NET Core 3 - @fschlaef</title>
      <description>&lt;p&gt;We are in the process of migrating our app from .NET Core 3.1.28 to .NET 6.0.8
So far the transition has been pretty painless, but we've found an annoying case where we get an &lt;code&gt;InvalidOperationException&lt;/code&gt; when using FirstOrDefault() and immediately calling a value on the result.&lt;/p&gt;
&lt;p&gt;In .NET Core 3, FirstOrDefault() returned an empty object initialized with default values, and the query worked fine
In .NET 6, the same query now returns &lt;code&gt;null&lt;/code&gt; and the query logically crashes&lt;/p&gt;
&lt;p&gt;Here is a (very) simplified repro of our use case. There are of course workarounds, but I'd like to know if this change was intended or if it is a regression.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;

namespace FirstOrDefaultBehavior
{
    class Program
    {
        static void Main(string[] args)
        {
            using (var context = new MyContext())
            {
                context.Database.EnsureDeleted();
                context.Database.EnsureCreated();

                context.Item.Add(new Item() { Code = 1 });
                context.Item.Add(new Item() { Code = 2 });
                context.SaveChanges();

                 context.StockMovement.Add(new StockMovement() { ItemFk = context.Item.First().Id });
                 context.SaveChanges();

                // Always works since Item 1 has attached StockMovement
                var ok = context.Item
                    .Where(i =&amp;gt; i.Code == 1)
                    .Select(i =&amp;gt; new
                    {
                        i.Id,
                        i.Code,
                        SomeStockValue = i.StockMovement.FirstOrDefault().ItemFk
                    })
                    .ToList();

                // Crashes in .Net 6, worked fine in .Net Core 3.1
                var crash = context.Item
                    .Where(i =&amp;gt; i.Code == 2)
                    .Select(i =&amp;gt; new
                    {
                        i.Id,
                        i.Code,
                        SomeStockValue = i.StockMovement.FirstOrDefault().ItemFk
                    })
                    .ToList();
            }
        }
    }

    public class MyContext : DbContext
    {
        public virtual DbSet&amp;lt;Item&amp;gt; Item { get; set; }
        public virtual DbSet&amp;lt;StockMovement&amp;gt; StockMovement { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            string connectionString = &amp;quot;Server=.;Database=FirstOrDefaultBehavior;Trusted_Connection=True;MultipleActiveResultSets=true&amp;quot;;

            optionsBuilder.UseSqlServer(connectionString)
                .EnableSensitiveDataLogging()
                .UseLoggerFactory(new LoggerFactory());
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity&amp;lt;Item&amp;gt;(entity =&amp;gt;
            {
                entity.HasIndex(e =&amp;gt; e.Code, &amp;quot;UK_Item_Code&amp;quot;)
                    .IsUnique();

                entity.Property(e =&amp;gt; e.Id).HasColumnName(&amp;quot;id&amp;quot;);
            });

            modelBuilder.Entity&amp;lt;StockMovement&amp;gt;(entity =&amp;gt;
            {
                entity.Property(e =&amp;gt; e.Id).HasColumnName(&amp;quot;id&amp;quot;);

                entity.Property(e =&amp;gt; e.ItemFk).HasColumnName(&amp;quot;item_fk&amp;quot;);

                entity.HasOne(d =&amp;gt; d.ItemFkNavigation)
                    .WithMany(p =&amp;gt; p.StockMovement)
                    .HasForeignKey(d =&amp;gt; d.ItemFk)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName(&amp;quot;FK_StockMovement_Item&amp;quot;);
            });
        }
    }

    public partial class Item
    {
        public Item()
        {
            StockMovement = new HashSet&amp;lt;StockMovement&amp;gt;();
        }

        public int Id { get; set; }
        public int Code { get; set; }
        public virtual ICollection&amp;lt;StockMovement&amp;gt; StockMovement { get; set; }
    }

    public partial class StockMovement
    {
        public StockMovement()
        {
            InverseParentFkNavigation = new HashSet&amp;lt;StockMovement&amp;gt;();
        }

        public int Id { get; set; }
        public int ItemFk { get; set; }
        public virtual ICollection&amp;lt;StockMovement&amp;gt; InverseParentFkNavigation { get; set; }
        public virtual Item ItemFkNavigation { get; set; }

    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Result in .NET 6 :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Unhandled exception. System.InvalidOperationException: Nullable object must have a value.
   at lambda_method7(Closure , QueryContext , DbDataReader , ResultContext , SingleQueryResultCoordinator )
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at FirstOrDefaultBehavior.Program.Main(String[] args) in C:\Users\FirstOrDefaultBehavior\Program.cs:line 37
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Result in .NET Core 3 :&lt;/p&gt;
&lt;p&gt;No crash, the value of &lt;code&gt;SomeStockValue&lt;/code&gt; in case 2 is &lt;code&gt;0&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Include provider and version information&lt;/h3&gt;
&lt;p&gt;EF Core version: 6.0.8
Database provider: Microsoft.EntityFrameworkCore.SqlServer
Target framework: .NET 6.0.8
Operating system: Windows 10 x64
IDE: Visual Studio 2022&lt;/p&gt;
</description>
      <pubDate>Thu, 11 Aug 2022 09:39:27 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3974</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3974</link>
      <title>Issue: Migrations in a separate class library project does not work. - @tekbyts</title>
      <description>&lt;p&gt;The steps mentioned in this https://docs.microsoft.com/en-us/ef/core/managing-schemas/migrations/projects?tabs=dotnet-core-cli are not working. I run into an error.&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: b545eeff-6c33-3cc0-09ce-a3ad342d7438&lt;/li&gt;
&lt;li&gt;Version Independent ID: 34bc1bac-7338-d8ab-390d-8c5e88a48c10&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/core/managing-schemas/migrations/projects?tabs=dotnet-core-cli"&gt;Using a Separate Migrations Project - EF Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/managing-schemas/migrations/projects.md"&gt;entity-framework/core/managing-schemas/migrations/projects.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @bricelam&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Tue, 09 Aug 2022 18:05:28 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3973</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3973</link>
      <title>Issue: Document table-related Fluent API breaking change  - @AndriySvyryd</title>
      <description>&lt;p&gt;See https://github.com/dotnet/efcore/issues/28205&lt;/p&gt;
</description>
      <pubDate>Tue, 09 Aug 2022 07:17:34 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3971</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3971</link>
      <title>Issue: Guide users to doing raw SQL via FormattableString by default - @roji</title>
      <description>&lt;p&gt;Via the new suffix-less FromSql/ExecuteSql methods being introduced in https://github.com/dotnet/efcore/issues/28609, since they're safe from SQL injection.&lt;/p&gt;
</description>
      <pubDate>Sat, 06 Aug 2022 14:16:32 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3969</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3969</link>
      <title>Issue: Document constraints for FromSql. - @payoff</title>
      <description>&lt;p&gt;[Enter feedback here]&lt;/p&gt;
&lt;h2&gt;This page miss a real important limitation:
Raw SQL Queries cannot be used with TPT:
https://github.com/dotnet/efcore/issues/23769
tracked here:
https://github.com/dotnet/efcore/issues/21627&lt;/h2&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: 7e1289d5-8364-18a4-3445-6bba05c6854b&lt;/li&gt;
&lt;li&gt;Version Independent ID: 2680e647-f64a-7991-f821-3b5e2a845960&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/core/querying/raw-sql"&gt;Raw SQL Queries - EF Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/querying/raw-sql.md"&gt;entity-framework/core/querying/raw-sql.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @smitpatel&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Sat, 06 Aug 2022 08:01:57 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3972</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3972</link>
      <title>Issue: Document need for property access with protobuf 'Optional Int32' field - @SteepT</title>
      <description>&lt;h2&gt;File a bug&lt;/h2&gt;
&lt;p&gt;I discovered while writing unit tests for one of my services that when I persist an 'optional int32' field from a Prototype model thru my DbContext it is not returned when queried.&lt;/p&gt;
&lt;p&gt;A non-optional int32 is always returned, as are the other optional fields in the ExampleRecord (all strings currently).&lt;/p&gt;
&lt;p&gt;However a non-optional int32 doesn't have the field persistence tracking that I am looking for to ensure I can update (See ExampleRecordService.Update) only the changed fields on that ExampleRecord.&lt;/p&gt;
&lt;p&gt;I checked the schema in the DbContext and the field 'ExampleId' is marked as required and exists in the Schema.&lt;/p&gt;
&lt;p&gt;When debugging the generated code for the ExampleRecord the Set operation on the ExampleId property is never invoked when EF goes to deserialize the data into the Prototype.&lt;/p&gt;
&lt;p&gt;Thus I am under the assumption that the EF framework is potentially passing data into the model somehow incorrectly. If that is not the case, I would appreciate guidance on who/where to submit this bug next.&lt;/p&gt;
&lt;h3&gt;Include your code&lt;/h3&gt;
&lt;p&gt;I have attached an example project here:
&lt;a href="https://github.com/dotnet/efcore/files/9271706/Example.Project.zip"&gt;Example Project.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you go into Tests and execute the test &amp;quot;CreateExampleRecord_Success&amp;quot; you will see a failure as the data sent in the CreateAsync does not match the response data from the ReadAsync call.&lt;/p&gt;
&lt;p&gt;The ExampleId = 42 appears to be missing from the model when it is returned:
&lt;code&gt;var exists = await this.context.FindAsync&amp;lt;ExampleRecord&amp;gt;(request.Email);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I debugged as much as I had access too, but I couldn't find an exact reason the data is missing when it get deserialized from the DB.&lt;/p&gt;
&lt;h3&gt;Include stack traces&lt;/h3&gt;
&lt;p&gt;This is what the testing stack trace gives me, I don't see any other exceptions:
Tests.Integration_Tests.ExampleRecordServiceIntegrationTests.CreateExampleRecord_Success
 Source: ExampleRecordServiceIntegrationTests.cs line 26
 Duration: 315 ms&lt;/p&gt;
&lt;p&gt;Message: 
Assert.Equal() Failure
Expected: { &amp;quot;Email&amp;quot;: &amp;quot;create_testperson1@testing.com&amp;quot;, &amp;quot;FirstName&amp;quot;: &amp;quot;Someone&amp;quot;, &amp;quot;LastName&amp;quot;: &amp;quot;Somewhere&amp;quot;, &amp;quot;ExampleId&amp;quot;: 42 }
Actual:   { &amp;quot;Email&amp;quot;: &amp;quot;create_testperson1@testing.com&amp;quot;, &amp;quot;FirstName&amp;quot;: &amp;quot;Someone&amp;quot;, &amp;quot;LastName&amp;quot;: &amp;quot;Somewhere&amp;quot; }&lt;/p&gt;
&lt;p&gt;Stack Trace: 
ExampleRecordServiceIntegrationTests.CreateExampleRecord_Success(ExampleRecord request) line 39
--- End of stack trace from previous location ---&lt;/p&gt;
&lt;h3&gt;Include provider and version information&lt;/h3&gt;
&lt;p&gt;EF Core version: 6.0.7
Database provider: Microsoft.EntityFrameworkCore.InMemory (for example), Microsoft.EntityFrameworkCore.SqlServer
Target framework: .NET 6.0
Operating system: Microsoft Windows 10 Pro - 10.0.18363 Build 18363
IDE: Microsoft Visual Studio Professional 2022 (64-bit) - Version 17.1.4&lt;/p&gt;
</description>
      <pubDate>Fri, 05 Aug 2022 21:21:44 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3967</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3967</link>
      <title>Issue: Asynchronous example throws an exception - @ZombiesWithCoffee</title>
      <description>&lt;p&gt;&lt;code&gt;var blogs = await service.GetAllBlogsAsync();&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Using the example exactly as written, gives me&lt;/p&gt;
&lt;p&gt;System.InvalidOperationException: The provider for the source 'IQueryable' doesn't implement 'IAsyncQueryProvider'. Only providers that implement 'IAsyncQueryProvider' can be used for Entity Framework asynchronous operations.&lt;/p&gt;
&lt;p&gt;Also received a compilation issue.  The last line should be &lt;code&gt;blog.Entity&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-c#"&gt;       public Blog AddBlog(string name, string url)
            {
                var blog = _context.Blogs.Add(new Blog { Name = name, Url = url });
                _context.SaveChanges();

                return blog.Entity;
            }
&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: 1a04a5e4-3060-2331-f78d-8b45064b8983&lt;/li&gt;
&lt;li&gt;Version Independent ID: 673d9406-3fa1-a9eb-f5cc-a431155e0260&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/ef6/fundamentals/testing/mocking"&gt;Testing with a mocking framework - EF6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/ef6/fundamentals/testing/mocking.md"&gt;entity-framework/ef6/fundamentals/testing/mocking.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-6&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @ajcvickers&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Thu, 04 Aug 2022 17:36:29 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3964</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3964</link>
      <title>Issue: Filtering not available on ThenInclude - @cjheath</title>
      <description>&lt;p&gt;Include() supports filtering, but not ThenInclude. This seems like an odd oversight.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    var people = ctx.People
	    .Where(person =&amp;gt; !person.IsDeleted)
	    .Include(person =&amp;gt; person.CardAssignments
		.Where(ca =&amp;gt; ca.DeassignDateTime == null)    // This is ok, filter on Include
	    )
	    .ThenInclude(ca =&amp;gt; ca.Card
	        .Where(c =&amp;gt; !c.IsDeleted)          // This is not supported, filter on ThenInclude
	    );
&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: 25a3ce6e-43ab-e0af-01b3-a82fdaf3cb31&lt;/li&gt;
&lt;li&gt;Version Independent ID: 320e7305-e0a3-a1c6-77f2-1d3029b660b1&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/core/querying/related-data/eager"&gt;Eager Loading of Related Data - EF Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/querying/related-data/eager.md"&gt;entity-framework/core/querying/related-data/eager.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @roji&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Wed, 03 Aug 2022 08:02:13 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3963</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3963</link>
      <title>Issue: Example assumes I don't want to overwrite the primary key - what if the operation is perfectly fine? - @Snappee</title>
      <description>&lt;p&gt;The example shows only ONE valid way to deal with the concurrency issue - with the assumption that the exception caught the issue and the original values should be re-read from the database as such and maybe the user needs to be informed.&lt;/p&gt;
&lt;p&gt;What it doesn't talk about, nor show is what if the issue is NOT an issue - that the desired functionality was to CHANGE a key field?   I can manually use the SQL Manager to change a key field - as there are no conflicts with other tables (dependencies) - but EF Core will throw a concurrency exception as if there is.&lt;/p&gt;
&lt;p&gt;What I don't know is WHAT needs to be done to complete the primary key edit?   Is this an issue due to having the same records displayed in a DataGrid view?  (And now I'm trying to pragmatically edit a primary key field and save the changes?).&lt;/p&gt;
&lt;p&gt;You need to enhance the example and not assume that the concurrency always catches a conflict - as there may not really be one.&lt;/p&gt;
&lt;p&gt;Thanks&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: 649fbab8-b960-6873-14bf-188d14757fee&lt;/li&gt;
&lt;li&gt;Version Independent ID: f5ee3135-54c8-689c-e28b-b203b376bd6f&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/core/saving/concurrency"&gt;Handling Concurrency Conflicts - EF Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/saving/concurrency.md"&gt;entity-framework/core/saving/concurrency.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @ajcvickers&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Sun, 31 Jul 2022 17:02:54 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3962</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3962</link>
      <title>Issue: Sqlite migrations limitations read confusing - @ErikEJ</title>
      <description>&lt;p&gt;https://docs.microsoft.com/hr-hr/ef/core/providers/sqlite/limitations#migrations-limitations&lt;/p&gt;
&lt;p&gt;The initial paragraph and some sections further down seem to ignore that all migrations operations are listed as supported in the summary table.&lt;/p&gt;
&lt;p&gt;Propose that the paragraphs are deleted. Happy to submit a PR based on the outcome of this issue.. (if needed  )&lt;/p&gt;
</description>
      <pubDate>Sun, 31 Jul 2022 12:14:49 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3961</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3961</link>
      <title>Issue: Document update mapping to stored procedures - @roji</title>
      <description>&lt;ul&gt;
&lt;li&gt;Document Sqlite's lack of sproc support in https://docs.microsoft.com/hr-hr/ef/core/providers/sqlite/limitations&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Sun, 31 Jul 2022 11:51:42 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3958</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3958</link>
      <title>Issue: Spatial Data in the SQL Server EF Core Provider - NetTopologySuite does NOT guarantee valid geography objects - @konnextv</title>
      <description>&lt;p&gt;Section &lt;em&gt;Geography polygon rings&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;Please correct me if I am wrong. But both &lt;a href="https://nettopologysuite.github.io/NetTopologySuite/"&gt;NetTopologySuite&lt;/a&gt; and &lt;a href="https://www.nuget.org/packages/Microsoft.EntityFrameworkCore.SqlServer.NetTopologySuite"&gt;Microsoft.EntityFrameworkCore.SqlServer.NetTopologySuite&lt;/a&gt; do not produce Polygons with the correct orientation.&lt;/p&gt;
&lt;p&gt;This was also explicitly mentioned here: https://github.com/NetTopologySuite/NetTopologySuite/issues/387#issuecomment-592516071&lt;/p&gt;
&lt;p&gt;I think that the functionality should be implemented in &lt;a href="https://www.nuget.org/packages/Microsoft.EntityFrameworkCore.SqlServer.NetTopologySuite"&gt;Microsoft.EntityFrameworkCore.SqlServer.NetTopologySuite&lt;/a&gt; in order to ensure correct orientation.&lt;/p&gt;
&lt;p&gt;In the meantime, we should remove the last sentence (&amp;quot;&lt;a href="https://nettopologysuite.github.io/NetTopologySuite/"&gt;NetTopologySuite&lt;/a&gt; (NTS) validates this before sending values to the database.&amp;quot;)&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;ID: 4424e4a5-94aa-c681-7681-b3c3e4d99f5f&lt;/li&gt;
&lt;li&gt;Version Independent ID: 6380bd89-78b0-7797-15a3-0629b74c71d2&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/core/providers/sql-server/spatial#feedback"&gt;Microsoft SQL Server Database Provider - Spatial Data - EF Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/core/providers/sql-server/spatial.md"&gt;entity-framework/core/providers/sql-server/spatial.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @bricelam&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Thu, 28 Jul 2022 14:56:03 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3953</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3953</link>
      <title>Issue: Wrong grammar in all sections - @martinbrabec</title>
      <description>&lt;p&gt;It happens in all sections. Both Developers (#1 and #2) are reffered to as &amp;quot;they&amp;quot;. It is grammatically incorrect, because &amp;quot;they&amp;quot; indicates there is more than one.&lt;/p&gt;
&lt;p&gt;e.g.:
&amp;quot;Now it’s time for Developer #2 to submit. &lt;strong&gt;They&lt;/strong&gt; aren’t so lucky. Because someone else has submitted changes since &lt;strong&gt;they&lt;/strong&gt; synced, &lt;strong&gt;they&lt;/strong&gt; will need to pull down the changes and merge&amp;quot;&lt;/p&gt;
&lt;p&gt;It is very important to use correct language, especially in exact documentation, where this kind of error can lead to misunderstanding of explained feature. Either change they to he/she, or change &amp;quot;Developer #1&amp;quot; to &amp;quot;Developer Team #1&amp;quot;.&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: b72ecde8-e983-8583-7c3f-6e0e4ff404fb&lt;/li&gt;
&lt;li&gt;Version Independent ID: 6ed79d63-19a7-c527-b383-c5faf4beba55&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/ef6/modeling/code-first/migrations/teams"&gt;Code First Migrations in Team Environments - EF6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/ef6/modeling/code-first/migrations/teams.md"&gt;entity-framework/ef6/modeling/code-first/migrations/teams.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-6&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @ajcvickers&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Mon, 25 Jul 2022 11:21:15 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3952</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3952</link>
      <title>Issue: Seed data that Id = 0 - @anchurcn</title>
      <description>&lt;p&gt;What I want:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;builder.Entity&amp;lt;AEnumTable&amp;gt;().HasData(0, &amp;quot;None&amp;quot;);
builder.Entity&amp;lt;AEnumTable&amp;gt;().HasData(1, &amp;quot;A&amp;quot;);
builder.Entity&amp;lt;AEnumTable&amp;gt;().HasData(2, &amp;quot;B&amp;quot;);
builder.Entity&amp;lt;AEnumTable&amp;gt;().HasData(3, &amp;quot;C&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But it throws System.InvalidOperationException: The seed entity for entity type 'AEnumTable' cannot be added because a non-zero value is required for property 'Id'. Consider providing a negative value to avoid collisions with non-seed data.&lt;/p&gt;
&lt;p&gt;How can I achieve this? If the answer is No, we hope there is a way to set a value as the default value,  0 sometimes is a valid value in that scenario.&lt;/p&gt;
&lt;p&gt;-- Sincerely Anchurcn&lt;/p&gt;
</description>
      <pubDate>Mon, 25 Jul 2022 01:33:04 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3950</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3950</link>
      <title>Issue: this is not what dotnet new gives you, so, when I look at  CreateMode(https://docs.microsoft.com/en-us/ef/ef6/modeling/code-first/workflows/new-database#2-create-the-model)l, it is pretty much irrelevant - @jhoney92021</title>
      <description>&lt;p&gt;[Enter feedback here]&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: 9c8be815-df51-dc77-fb5b-ccfa7f742e10&lt;/li&gt;
&lt;li&gt;Version Independent ID: 353c54e3-b7c9-fcdd-ca71-2a11beab19fd&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/ef6/modeling/code-first/workflows/new-database"&gt;Code First to a New Database - EF6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/ef6/modeling/code-first/workflows/new-database.md"&gt;entity-framework/ef6/modeling/code-first/workflows/new-database.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-6&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @ajcvickers&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Sat, 23 Jul 2022 01:19:28 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3949</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3949</link>
      <title>Issue: this is not what dotnet new gives you, so, when I look at  CreateModel, it is pretty much irrelevant - @jhoney92021</title>
      <description>&lt;p&gt;[Enter feedback here]&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: 9c8be815-df51-dc77-fb5b-ccfa7f742e10&lt;/li&gt;
&lt;li&gt;Version Independent ID: 353c54e3-b7c9-fcdd-ca71-2a11beab19fd&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/ef6/modeling/code-first/workflows/new-database"&gt;Code First to a New Database - EF6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/ef6/modeling/code-first/workflows/new-database.md"&gt;entity-framework/ef6/modeling/code-first/workflows/new-database.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-6&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @ajcvickers&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Sat, 23 Jul 2022 01:17:55 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/EntityFramework.Docs/issues/3948</guid>
      <link>https://github.com/dotnet/EntityFramework.Docs/issues/3948</link>
      <title>Issue: this is not what dotnet new gives you,  - @jhoney92021</title>
      <description>&lt;p&gt;[Enter feedback here]&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;Document Details&lt;/h4&gt;
&lt;p&gt;⚠ &lt;em&gt;Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: 9c8be815-df51-dc77-fb5b-ccfa7f742e10&lt;/li&gt;
&lt;li&gt;Version Independent ID: 353c54e3-b7c9-fcdd-ca71-2a11beab19fd&lt;/li&gt;
&lt;li&gt;Content: &lt;a href="https://docs.microsoft.com/en-us/ef/ef6/modeling/code-first/workflows/new-database"&gt;Code First to a New Database - EF6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content Source: &lt;a href="https://github.com/dotnet/EntityFramework.Docs/blob/main/entity-framework/ef6/modeling/code-first/workflows/new-database.md"&gt;entity-framework/ef6/modeling/code-first/workflows/new-database.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Product: &lt;strong&gt;entity-framework&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Technology: &lt;strong&gt;entity-framework-6&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;GitHub Login: @ajcvickers&lt;/li&gt;
&lt;li&gt;Microsoft Alias: &lt;strong&gt;avickers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Sat, 23 Jul 2022 01:17:07 Z</pubDate>
    </item>
  </channel>
</rss>