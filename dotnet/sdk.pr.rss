<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>dotnet/sdk Pull Requests</title>
    <description>Pull Requests from https://github.com/dotnet/sdk, generated by https://github.com/meziantou/IssuesToRss/</description>
    <managingEditor>meziantousite@outlook.com</managingEditor>
    <ttl>60</ttl>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/sdk/pull/28135</guid>
      <link>https://github.com/dotnet/sdk/pull/28135</link>
      <title>PR: Improve the example with specified language when language option is given with invalid option - @GangWang01</title>
      <description>&lt;h3&gt;Problem&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/dotnet/templating/issues/4494&lt;/li&gt;
&lt;li&gt;When valid bool option and invalid option are given, exception was&lt;/li&gt;
&lt;li&gt;Cli lacks unit tests for the option with invalid names&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Specified language is added to the example when language option is given together with invalid option.&lt;/li&gt;
&lt;li&gt;Handle bool option in TemplateOptionResult for handling no template found&lt;/li&gt;
&lt;li&gt;Expand Cli unit tests.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Checks:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[x] Added unit tests&lt;/li&gt;
&lt;li&gt;[ ] Added &lt;code&gt;#nullable enable&lt;/code&gt; to all the modified files &lt;a href="https://github.com/dotnet/templating/wiki/Contributing#coding-style"&gt;?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Fri, 23 Sep 2022 15:51:20 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/sdk/pull/28106</guid>
      <link>https://github.com/dotnet/sdk/pull/28106</link>
      <title>PR: Pin MSBuild references to a lower version [main] - @rainersigwald</title>
      <description>&lt;p&gt;Always referencing the latest MSBuild means that some things like the
SDK resolver would be forced to target MSBuild's latest runtime, and
that would break compat with uses. For instance, VSMac is currently on
.NET 6.0 and can't run a net7.0 resolver.&lt;/p&gt;
&lt;p&gt;We do, however, want to always &lt;em&gt;ship&lt;/em&gt; the latest MSBuild.&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 13:45:00 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/sdk/pull/28102</guid>
      <link>https://github.com/dotnet/sdk/pull/28102</link>
      <title>PR: Provide package description for APICompat packages - @ViktorHofer</title>
      <description>&lt;p&gt;Both the old nuget package and the new ones didn't provide a package description:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/7412651/191739775-acc2bbc5-6226-4b30-b5ed-5ec83c1debe7.png" alt="image" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/7412651/191739808-35d2e851-943f-48d3-92d4-8e07347ce08a.png" alt="image" /&gt;&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 11:52:52 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/sdk/pull/28090</guid>
      <link>https://github.com/dotnet/sdk/pull/28090</link>
      <title>PR: MSBuild on .NET 7: Downgrade compile-time references (#28079) - @rainersigwald</title>
      <description>&lt;ul&gt;
&lt;li&gt;Update dependencies from https://github.com/dotnet/msbuild build 20220919.4&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Microsoft.Build , Microsoft.Build.Localization
From Version 17.4.0-preview-22466-03 -&amp;gt; To Version 17.4.0-preview-22469-04&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pin MSBuild references to a lower version&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Always referencing the latest MSBuild means that some things like the
SDK resolver would be forced to target MSBuild's latest runtime, and
that would break compat with uses. For instance, VSMac is currently on
.NET 6.0 and can't run a net7.0 resolver.&lt;/p&gt;
&lt;p&gt;We do, however, want to always &lt;em&gt;ship&lt;/em&gt; the latest MSBuild.&lt;/p&gt;
&lt;p&gt;Co-authored-by: dotnet-maestro[bot] &amp;lt;dotnet-maestro[bot]@users.noreply.github.com&amp;gt;&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 18:17:48 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/sdk/pull/28079</guid>
      <link>https://github.com/dotnet/sdk/pull/28079</link>
      <title>PR: MSBuild on .NET 7: Downgrade compile-time references - @rainersigwald</title>
      <description>&lt;p&gt;Update to an MSBuild build that targets &lt;code&gt;net7.0&lt;/code&gt;, but don't use it at SDK compile time any more, pinning to the old version we claim to support.&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 14:47:19 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/sdk/pull/28061</guid>
      <link>https://github.com/dotnet/sdk/pull/28061</link>
      <title>PR: [Backport] Fix Property Parsing in Publish - @nagilson</title>
      <description>&lt;p&gt;Backport of https://github.com/dotnet/sdk/pull/28059&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 23:42:51 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/sdk/pull/28060</guid>
      <link>https://github.com/dotnet/sdk/pull/28060</link>
      <title>PR: Gate warnings for localization asset locales on TFM &gt;= 7 - @baronfel</title>
      <description>&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;In https://github.com/dotnet/sdk/pull/26729 we introduced a new warning to .NET 7 SDKs around inconsistent locale casing for resources found in NuGet packages, but we did not gate that warning on a TFM change. This means that users that work on case-insensitive file systems are very likely to start hitting the new warning on an SDK update, instead of a TFM update. We want to not do that so that we encourage folks to update SDKs as soon as they come out. We have had reports of a couple of internal customers&lt;/p&gt;
&lt;h2&gt;Regression&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;No&lt;/strong&gt;, instead we want to change the default. I suppose you could call it a user-experience regression?&lt;/p&gt;
&lt;h2&gt;Risk&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Low&lt;/strong&gt;, this uses existing patterns to check an already-available piece of data.&lt;/p&gt;
&lt;h2&gt;Testing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] manual testing&lt;/li&gt;
&lt;li&gt;[x] automated tests to cover the matrix of TFM versions and error codes we added&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 23:23:53 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/sdk/pull/28059</guid>
      <link>https://github.com/dotnet/sdk/pull/28059</link>
      <title>PR: Fix Property Parsing in Publish - @nagilson</title>
      <description>&lt;p&gt;Resolves https://github.com/dotnet/sdk/issues/28022
Backport:
https://github.com/dotnet/sdk/pull/28061 &lt;strong&gt;(please approve this too!)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Post-Moderm:&lt;/p&gt;
&lt;p&gt;I intercepted the &lt;code&gt;MSBuildPropertyParser&lt;/code&gt; code stack too many interface layers in, so for some edge cases, properties passed via &lt;code&gt;/p&lt;/code&gt; and &lt;code&gt;-p&lt;/code&gt; were not fully parsed as it wasn't running through the &lt;code&gt;Options&lt;/code&gt; Forwarding code. The ones I had tested did get parsed but for example in the above case they weren't fully parsed. Also removes an erroneous comment from the code that was old and slipped in.&lt;/p&gt;
&lt;p&gt;Risk:
Medium&lt;/p&gt;
&lt;p&gt;Reason To Accept:
Fixes a bug which will cause erroneous errors inside of &lt;code&gt;dotnet publish&lt;/code&gt;. The PublishRelease code will do an MSBuild evaluation with faulty properties which could have any number of side effects, but in general it would be unrelated to what actually gets published. Still, this is high impact and should be merged in.&lt;/p&gt;
&lt;p&gt;Testing: [OK]
&lt;code&gt;dotnet publish -p:PublishRelease=true -property Configuration=Debug&lt;/code&gt;
&lt;code&gt;dotnet publish -p:PublishRelease=true -p    Configuration=Debug&lt;/code&gt;
Also
&lt;code&gt;dotnet publish -f net7.0&lt;/code&gt;
Also
&lt;code&gt;dotnet publish&lt;/code&gt; with &lt;code&gt;PublishRelease&lt;/code&gt; inside of a &lt;code&gt;.csproj&lt;/code&gt;&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 23:15:52 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/sdk/pull/28057</guid>
      <link>https://github.com/dotnet/sdk/pull/28057</link>
      <title>PR: Read PackageDefinitions and PackageDependencies from the cache assets file instead of ResolvePackageDependencies - @ocallesp</title>
      <description>&lt;p&gt;Fixes #27738&lt;/p&gt;
&lt;p&gt;We want to avoid reading the assets file because it is a large file, which can cause performance degradation in design-time builds for large projects when executing &lt;code&gt;ResolvePackageDependencies&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To improve this, the assets cache file in &lt;code&gt;ResolvePackageAssets&lt;/code&gt; will now keep track of  &lt;code&gt;PackageDefinitions&lt;/code&gt; and &lt;code&gt;PackageDependencies&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The change:&lt;/strong&gt;
Output &lt;code&gt;PackageDefinitions&lt;/code&gt; and &lt;code&gt;PackageDependencies&lt;/code&gt; items from &lt;code&gt;ResolvePackageAssets&lt;/code&gt;, so that &lt;code&gt;ResolvePackageDependencies&lt;/code&gt; doesn't need to be called at all unless &lt;code&gt;EmitLegacyAssetsFileItems&lt;/code&gt; is true&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 21:18:42 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/sdk/pull/28044</guid>
      <link>https://github.com/dotnet/sdk/pull/28044</link>
      <title>PR: [release/7.0.1xx-rc2] Update dependencies from microsoft/vstest - @nohwnd</title>
      <description>&lt;p&gt;Porting to rc2 from rtm #28039&lt;/p&gt;
&lt;p&gt;Update Microsoft.NET.Test.Sdk to remove dbghelp.&lt;/p&gt;
&lt;p&gt;From Version 17.4.0-release-20220919-06 -&amp;gt; To Version 17.4.0-release-20220920-01&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 17:29:18 Z</pubDate>
    </item>
  </channel>
</rss>