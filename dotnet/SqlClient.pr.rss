<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>dotnet/SqlClient Pull Requests</title>
    <description>Pull Requests from https://github.com/dotnet/SqlClient, generated by https://github.com/meziantou/IssuesToRss/</description>
    <managingEditor>meziantousite@outlook.com</managingEditor>
    <ttl>60</ttl>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1771</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1771</link>
      <title>PR: Make SqlConnectionEncryptOption string parser public - @cheenamalhotra</title>
      <description>&lt;p&gt;It would be useful to have these parsers public to be able to parse string values directly when needed, instead of consumer apps writing their own.&lt;/p&gt;
</description>
      <pubDate>Fri, 23 Sep 2022 05:55:34 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1769</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1769</link>
      <title>PR: Porting guide addition - @David-Engel</title>
      <description />
      <pubDate>Wed, 21 Sep 2022 20:57:32 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1768</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1768</link>
      <title>PR: For failed connection requests in ConnectionPool in case of PoolBlock… - @sorensenmatias</title>
      <description>&lt;p&gt;For failed connection requests in ConnectionPool in case of PoolBlockingPeriod not enabled, ensure stacktrace of the exception is not swallowed.
Currently, the implementation passes the exception as a parameter and rethrows it, which creates a brand new stacktrace, and hides the original stacktrace of the failed connection attempt.
With this change, the original stacktrace is kept.&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 14:37:40 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1767</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1767</link>
      <title>PR: [Release 2.1] Fix async deadlock issue when sending attention fails due to network failure - @cheenamalhotra</title>
      <description>&lt;p&gt;Port #1766 to v2.1&lt;/p&gt;
</description>
      <pubDate>Mon, 19 Sep 2022 19:08:23 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1766</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1766</link>
      <title>PR: Fix async deadlock issue when sending attention fails due to network failure - @cheenamalhotra</title>
      <description>&lt;p&gt;In an edge case scenario, when a network failure occurs when drives attempts to send an attention signal, the driver fails to throw exception and terminate connection, leaving the connection open indefinitely, when async APIs are used to query the database. This can cause applications to go into hang due to driver getting into a deadlock situation as the async callbacks won't clear.&lt;/p&gt;
&lt;p&gt;The issue is associated with the synchronous timeout flow that kicks off on ReadAsyncCallback, which will only be executed when timeout threads are not able to acquire thread from Threadpool and execute until callback returns on the other thread and finds out that the timeout is expired but attention is not yet triggered.&lt;/p&gt;
&lt;p&gt;This PR fixes the issue by enabling 'asyncClose' flag on ThrowExceptionAndWarning methods when performing timeout activity via 'ReadAsyncCallback&amp;quot; as the native SNI needs to clear the callback on termination of connection. This was a missed opportunity in PR #906 that caused this edge case scenario to affect a few customers.&lt;/p&gt;
&lt;p&gt;I tried adding tests, but it won't be possible to neatly add a test, without causing a lot of code changes, therefore skipping here. Linking repro below which can be easily executed and tested with the PR.&lt;/p&gt;
&lt;p&gt;Link to Repro App: https://gist.github.com/cheenamalhotra/94d501e093a0392520fe2095c4bb7491&lt;/p&gt;
</description>
      <pubDate>Sat, 17 Sep 2022 02:24:25 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1763</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1763</link>
      <title>PR: [Hotfix 2.1] Pass sync state to ThrowExceptionAndWarning from SNIWritePacket to avoid async blocking - @David-Engel</title>
      <description>&lt;p&gt;Port #1757 to 2.1-servicong.&lt;/p&gt;
</description>
      <pubDate>Thu, 15 Sep 2022 23:26:55 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1761</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1761</link>
      <title>PR: [Hotfix 4.1.1] | Release notes - @DavoudEshtehari</title>
      <description />
      <pubDate>Tue, 13 Sep 2022 22:42:59 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1760</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1760</link>
      <title>PR: [Hotfix 4.0.2] | Release notes - @DavoudEshtehari</title>
      <description />
      <pubDate>Tue, 13 Sep 2022 20:10:12 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1759</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1759</link>
      <title>PR: 4.1.1 release notes [main branch] - @DavoudEshtehari</title>
      <description />
      <pubDate>Mon, 12 Sep 2022 19:20:35 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1757</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1757</link>
      <title>PR: Pass sync state to ThrowExceptionAndWarning from SNIWritePacket - @David-Engel</title>
      <description>&lt;p&gt;From native SNI, TdsParserStateObject.ReadAsyncCallback may be called on a read completion. The native SNI code keeps a reference counter of active callbacks. This counter is waited on when the connection is closed to ensure it does not close the connection out from under any pending managed callbacks.&lt;/p&gt;
&lt;p&gt;A potential code path is: ReadAsyncCallback -&amp;gt; OnTimeout (if the timeout has already occurred when the callback fires, OnTimeout is called syncronously) -&amp;gt; SendAttention -&amp;gt; SNIWritePacket -&amp;gt; TdsParser.ThrowExceptionAndWarning -&amp;gt; SqlConnection.OnError -&amp;gt; SqlConnection.Close. If Close is called synchronously during the async callback, we could end up in a deadlock where the native SNI code is waiting for the ReadAsyncCallback to complete, which itself is calling the SNI close method.&lt;/p&gt;
&lt;p&gt;TODO: Figure out how to test the scenario.&lt;/p&gt;
</description>
      <pubDate>Fri, 09 Sep 2022 00:52:41 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1756</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1756</link>
      <title>PR: 4.0.2 release notes [main branch] - @DavoudEshtehari</title>
      <description />
      <pubDate>Thu, 08 Sep 2022 22:15:10 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1755</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1755</link>
      <title>PR: SNI Version update - 4.1 servicing - @Kaur-Parminder</title>
      <description>&lt;p&gt;SNI Version update - 4.1 servicing&lt;/p&gt;
&lt;p&gt;Changes:
security.dll replaced with secur32.dll
Fix multiple AppDomain issue due to registration of duplicate tracelogging provider&lt;/p&gt;
</description>
      <pubDate>Wed, 07 Sep 2022 15:21:29 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1754</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1754</link>
      <title>PR: SNI version update - servicing 4.0 - @Kaur-Parminder</title>
      <description>&lt;p&gt;SNI Release version update 4.0.1 - servicing 4.0&lt;/p&gt;
&lt;p&gt;Changes:
security.dll replaced with secur32.dll
Fix multiple AppDomain issue due to registration of duplicate tracelogging provider&lt;/p&gt;
</description>
      <pubDate>Wed, 07 Sep 2022 15:16:02 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1750</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1750</link>
      <title>PR: [Hotfix 4.0.2] | Fix default UTF8 collation conflict (#1739) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1739&lt;/p&gt;
</description>
      <pubDate>Thu, 01 Sep 2022 21:01:46 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1749</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1749</link>
      <title>PR: [Hotfix 4.1.1] | Fix default UTF8 collation conflict (#1739) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1739&lt;/p&gt;
</description>
      <pubDate>Thu, 01 Sep 2022 21:00:06 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1748</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1748</link>
      <title>PR: [Hotfix 2.1.5] | Release notes - @DavoudEshtehari</title>
      <description>&lt;p&gt;Updating the servicing release notes.&lt;/p&gt;
</description>
      <pubDate>Tue, 30 Aug 2022 23:30:23 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1747</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1747</link>
      <title>PR: [Hotfix 4.0.2] | Fix hang on infinite timeout and managed SNI (#1742) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1742&lt;/p&gt;
</description>
      <pubDate>Tue, 30 Aug 2022 21:38:32 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1746</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1746</link>
      <title>PR: [Hotfix 4.1.1] | Fix hang on infinite timeout and managed SNI (#1742) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1742&lt;/p&gt;
</description>
      <pubDate>Tue, 30 Aug 2022 21:31:15 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1742</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1742</link>
      <title>PR: [Fix] Hang on infinite timeout and managed SNI - @David-Engel</title>
      <description>&lt;p&gt;Fixes #1733 - regression introduced in #1578&lt;/p&gt;
&lt;p&gt;I moved DNS calls into a common function and added logging for it. I decided not to use async DNS calls because the timeout logic is just wrong and I wanted to limit this fix to the issue at hand. The timeout logic will be addressed in a future PR.&lt;/p&gt;
&lt;p&gt;I did notice and fix 2 issues in the SSRP logic right around the same DNS logic being fixed.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The logic for when the hostName is an IP address was missing, resulting in a NRE.&lt;/li&gt;
&lt;li&gt;The cancellation token wasn't being associated with the parallelized UDP tasks so they weren't actually getting quickly canceled when Cancel() was called.&lt;/li&gt;
&lt;/ol&gt;
</description>
      <pubDate>Thu, 25 Aug 2022 20:09:51 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1739</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1739</link>
      <title>PR: Fix | Default UTF8 collation conflict - @DavoudEshtehari</title>
      <description>&lt;p&gt;&lt;strong&gt;Issue&lt;/strong&gt;: Defining a database with UTF8 collation overrides its column's collation with the same LCID.&lt;/p&gt;
</description>
      <pubDate>Thu, 25 Aug 2022 00:14:01 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1738</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1738</link>
      <title>PR: Documentation | Improve AAD link and consistency. - @JRahnama</title>
      <description>&lt;p&gt;This will fix/address #1737 and #1736 concerns.&lt;/p&gt;
</description>
      <pubDate>Wed, 24 Aug 2022 21:21:50 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1735</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1735</link>
      <title>PR: Test | Add lock when using ClearSqlConnectionGlobalProvidersk (#1461) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1461&lt;/p&gt;
</description>
      <pubDate>Mon, 22 Aug 2022 17:46:40 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1734</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1734</link>
      <title>PR: Test | Add lock when using ClearSqlConnectionGlobalProvidersk (#1461) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1461&lt;/p&gt;
</description>
      <pubDate>Mon, 22 Aug 2022 17:44:00 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1730</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1730</link>
      <title>PR: 2.1.5 release notes [main branch] - @DavoudEshtehari</title>
      <description />
      <pubDate>Wed, 17 Aug 2022 00:09:25 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1729</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1729</link>
      <title>PR: [Hotfix 2.1.5] | Remove union overlay design and use reflection in SqlTypeWorkarounds (#1647) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1647&lt;/p&gt;
</description>
      <pubDate>Tue, 16 Aug 2022 20:26:37 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1728</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1728</link>
      <title>PR: [3.1] update the release note for 3.1 servicing branch - @JRahnama</title>
      <description>&lt;p&gt;This porting back the release notes for 3.1 servicing branch.&lt;/p&gt;
</description>
      <pubDate>Tue, 16 Aug 2022 19:31:57 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1727</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1727</link>
      <title>PR: [Hotfix 2.1.5] | Shim gss api on Linux to delay loading libgssapi_krb5.so (#1411) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1411&lt;/p&gt;
</description>
      <pubDate>Tue, 16 Aug 2022 19:21:44 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1726</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1726</link>
      <title>PR: [Hotfix 2.1.5] | Fix CommandText length for stored procedures (#1484) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1484, #1055&lt;/p&gt;
</description>
      <pubDate>Tue, 16 Aug 2022 19:15:42 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1724</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1724</link>
      <title>PR: [Hotfix 4.0.2] | Fix null binary rowversion and add test coverage (#1688) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1688&lt;/p&gt;
</description>
      <pubDate>Mon, 15 Aug 2022 22:02:34 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1723</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1723</link>
      <title>PR: [Hotfix 4.0.2] | Remove union overlay design and use reflection in SqlTypeWorkarounds (#1647) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1647&lt;/p&gt;
</description>
      <pubDate>Mon, 15 Aug 2022 21:57:26 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1722</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1722</link>
      <title>PR: [Hotfix 4.0.2] | Handle NRE on Azure federated authentication (#1625) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1625&lt;/p&gt;
</description>
      <pubDate>Mon, 15 Aug 2022 21:46:21 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1721</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1721</link>
      <title>PR: [Hotfix 4.0.2] | Fix CommandText length for stored procedures (#1484) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1484&lt;/p&gt;
</description>
      <pubDate>Mon, 15 Aug 2022 20:02:47 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1720</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1720</link>
      <title>PR: [Hotfix 4.0.2] | Parallelize SSRP requests when MSF is specified (#1578) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1578&lt;/p&gt;
</description>
      <pubDate>Mon, 15 Aug 2022 19:56:26 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1719</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1719</link>
      <title>PR: Test | Update CspProviderExt.cs (#1551) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1551.&lt;/p&gt;
</description>
      <pubDate>Mon, 15 Aug 2022 19:14:10 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1718</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1718</link>
      <title>PR: [Hotfix 4.0.2] | Skip the CRL check during authenticaiton (#1559) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1559&lt;/p&gt;
</description>
      <pubDate>Mon, 15 Aug 2022 19:10:32 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1716</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1716</link>
      <title>PR: 3.1.1 release notes for main branch - @JRahnama</title>
      <description />
      <pubDate>Fri, 12 Aug 2022 17:04:20 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1713</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1713</link>
      <title>PR: [3.1] Release notes for 3.1.0 and 3.1.1 in servicing branch - @JRahnama</title>
      <description />
      <pubDate>Thu, 11 Aug 2022 22:07:38 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1712</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1712</link>
      <title>PR: [Hotfix 4.1.1] | Fix null binary rowversion and add test coverage (#1688) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1688&lt;/p&gt;
</description>
      <pubDate>Thu, 11 Aug 2022 20:13:36 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1711</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1711</link>
      <title>PR: [Hotfix 4.1.1] | Remove union overlay design and use reflection in SqlTypeWorkarounds (#1647) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1647&lt;/p&gt;
</description>
      <pubDate>Thu, 11 Aug 2022 20:09:30 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1710</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1710</link>
      <title>PR: [Hotfix 4.1.1] | Handle NRE on Azure federated authentication (#1625) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1625&lt;/p&gt;
</description>
      <pubDate>Thu, 11 Aug 2022 19:51:42 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1709</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1709</link>
      <title>PR: [Hotfix 4.1.1] | Fix CommandText length for stored procedures (#1484) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1484&lt;/p&gt;
</description>
      <pubDate>Thu, 11 Aug 2022 19:04:11 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1708</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1708</link>
      <title>PR: [Hotfix 4.1.1] | Parallelize SSRP requests when MSF is specified (#1578) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1578&lt;/p&gt;
</description>
      <pubDate>Thu, 11 Aug 2022 18:59:33 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1707</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1707</link>
      <title>PR: Test | Update CspProviderExt.cs (#1551) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1551&lt;/p&gt;
</description>
      <pubDate>Thu, 11 Aug 2022 18:26:04 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1706</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1706</link>
      <title>PR: [Hotfix 4.1.1] | Skip the CRL check during authentication (#1559) - @DavoudEshtehari</title>
      <description>&lt;p&gt;Ports #1559&lt;/p&gt;
</description>
      <pubDate>Thu, 11 Aug 2022 18:21:29 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1705</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1705</link>
      <title>PR: Add more SqlConnectionEncryptOption tests - @ErikEJ</title>
      <description />
      <pubDate>Wed, 10 Aug 2022 06:09:25 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1704</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1704</link>
      <title>PR: Add | Adding Net6 support to the driver - @JRahnama</title>
      <description>&lt;p&gt;This is the initial try to build MDS with net6&lt;/p&gt;
</description>
      <pubDate>Tue, 09 Aug 2022 22:48:47 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1703</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1703</link>
      <title>PR: [Doc] Add breaking change note to 5.0 release - @David-Engel</title>
      <description>&lt;p&gt;Address #1702&lt;/p&gt;
</description>
      <pubDate>Tue, 09 Aug 2022 19:35:54 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1701</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1701</link>
      <title>PR: [Fix 1.1] Remove union overlay design and use reflection in SqlTypeWorkarounds - @David-Engel</title>
      <description>&lt;p&gt;Porting #1647 to 1.1-servicing&lt;/p&gt;
</description>
      <pubDate>Tue, 09 Aug 2022 01:12:38 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1700</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1700</link>
      <title>PR: [Fix 3.1] Fix null binary rowversion and add test coverage - @David-Engel</title>
      <description>&lt;p&gt;Porting #1688 to 3.1-servicing.&lt;/p&gt;
</description>
      <pubDate>Tue, 09 Aug 2022 00:20:21 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1699</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1699</link>
      <title>PR: [Fix 3.1] Remove union overlay design and use reflection in SqlTypeWorkarounds - @David-Engel</title>
      <description>&lt;p&gt;Porting #1647 to 3.1-servicing.&lt;/p&gt;
</description>
      <pubDate>Tue, 09 Aug 2022 00:10:25 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1696</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1696</link>
      <title>PR: [Fix 3.1] Add support for Shim gss api on Linux to delay loading libgssapi_krb5.so - @David-Engel</title>
      <description>&lt;p&gt;Porting #1411 to 3.1-servicing.&lt;/p&gt;
</description>
      <pubDate>Sat, 06 Aug 2022 00:15:32 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1695</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1695</link>
      <title>PR: [Fix 3.1] Handle NRE on Azure federated authentication - @David-Engel</title>
      <description>&lt;p&gt;Porting #1625 to 3.1-servicing.&lt;/p&gt;
</description>
      <pubDate>Sat, 06 Aug 2022 00:08:41 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1694</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1694</link>
      <title>PR: Add link to SQL Server TDS 8 doc - @David-Engel</title>
      <description />
      <pubDate>Fri, 05 Aug 2022 22:57:50 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1692</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1692</link>
      <title>PR: Convert ExecuteNonQueryAsync to use async context object - @Wraith2</title>
      <description>&lt;p&gt;fixes https://github.com/dotnet/SqlClient/issues/1682&lt;/p&gt;
&lt;p&gt;This addresses the incorrect handling of cancellation token registrations in &lt;code&gt;SqlCommand&lt;/code&gt; methods &lt;code&gt;ExecuteNonQuery&lt;/code&gt; and &lt;code&gt;ExecuteReader&lt;/code&gt;, I didn't change &lt;code&gt;ExecuteScalar&lt;/code&gt; because it should be done in a separate PR and it's just &lt;code&gt;ExecuteReader&lt;/code&gt; wearing a fake nose a glasses, people should use &lt;code&gt;ExexuteReader&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Background information: There are a number of async api calls on &lt;code&gt;SqlDataReader&lt;/code&gt; which have been changed to avoid the use of language provided lambda closures and instead use explicit context objects. This process makes the code more complicated because it splits apart the code into multiple functions so that instance delegate allocations can be avoided. This pattern is no longer needed if we use language provided static lambdas and the code can be much cleaner and better contained. This PR converts the ExecuteNonQuery function to use this explicity context pattern and uses static lambdas to doi t.&lt;/p&gt;
&lt;p&gt;This PR also changes all existing context objects to use an explicit type for the IDispoable so that we can avoid boxing the disposable. This change forces any existing context types which were declared like this: &lt;code&gt;AAsyncContext&amp;lt;TOwner,TResult&amp;gt;&lt;/code&gt; to be split apart into two types,&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;AAsyncContext&amp;lt;TOwner,TResult,TDisposable&amp;gt;&lt;/code&gt; which has a strong disposable type and is used at call sites that know what the disposable is, mostly setup locations.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AAsyncBaseContext&amp;lt;TOwner,TResult&amp;gt;&lt;/code&gt; which is used in the async functions that don't need to know what the type of the disposable is so we can avoid duplicating functions like &lt;code&gt;InvokeAsync&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The specific changes to fix the issue reported are&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;change &lt;code&gt;InternalExecuteNonQueryAsync&lt;/code&gt; to use an explicity context object&lt;/li&gt;
&lt;li&gt;make disposable idempotent by including a disposed flag. Previously it was not possible to reach disposable from more than one path so knowledge of disposal was implicit, now it is explicit.&lt;/li&gt;
&lt;li&gt;call context dispose from catch blocks ensuring that the registration is correctly cleaned up on all paths&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;/cc @olegkv&lt;/p&gt;
</description>
      <pubDate>Thu, 04 Aug 2022 08:28:11 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1691</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1691</link>
      <title>PR: Test | Add extra conditional to the Azure_AccessToken_UserManagedIdentityTest and Azure_AccessToken_SystemManagedIdentityTest  - @lcheunglci</title>
      <description>&lt;p&gt;Currently some of the tests that require Azure Active Directory (AAD) have been temporarily disabled while the build/test pipeline is being fixed by excluding certain AAD variables for the connection strings.  I believe these 2 tests (Azure_AccessToken_UserManagedIdentityTest and Azure_AccessToken_SystemManagedIdentityTest) should be skipped when the AAD AccessToken is not available to resolve the failure.&lt;/p&gt;
</description>
      <pubDate>Wed, 03 Aug 2022 20:40:45 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1688</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1688</link>
      <title>PR: Fix null binary rowversion and add test coverage - @Wraith2</title>
      <description>&lt;p&gt;fixes https://github.com/dotnet/SqlClient/issues/1684&lt;/p&gt;
&lt;p&gt;The fix is very simple and simply adds a a null check that was already present in all the other SqlType returning properties on SqlBuffer. Test coverage is added for SqlBinary and SqlBytes in the existing test.&lt;/p&gt;
&lt;p&gt;/cc @rclabo, @dbrownems&lt;/p&gt;
</description>
      <pubDate>Fri, 29 Jul 2022 23:54:47 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1685</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1685</link>
      <title>PR: Doc | Address the monikor versions conflict - @DavoudEshtehari</title>
      <description>&lt;p&gt;&lt;a href="https://review.docs.microsoft.com/en-us/dotnet/api/microsoft.data.sqlclient.sqlconnectionstringbuilder.encrypt?view=sqlclient-dotnet-core-4.1&amp;amp;branch=pr-en-us-58"&gt;SqlConnectionStringBuilder.Encrypt Property (Microsoft.Data.SqlClient) | Microsoft Docs&lt;/a&gt;&lt;/p&gt;
</description>
      <pubDate>Wed, 27 Jul 2022 19:57:22 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1683</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1683</link>
      <title>PR: Newtonsoft.Json update to 13.0.1 for ManualTesting, XUnitExtensions - @Kaur-Parminder</title>
      <description>&lt;p&gt;Newtonsoft.Json update to 13.0.1 for ManualTesting, XUnitExtensions to override Microsoft.NET.Test.Sdk and xunit.runner.visualstudio.&lt;/p&gt;
</description>
      <pubDate>Wed, 27 Jul 2022 18:11:53 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1681</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1681</link>
      <title>PR: Release notes for v5.0.0 - @lcheunglci</title>
      <description>&lt;p&gt;I left the corresponding SNI PR as TBD and will add it in as soon as the SNI PR has been created.  Please let me know if I missed anything. Thank you!&lt;/p&gt;
</description>
      <pubDate>Tue, 26 Jul 2022 20:41:14 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1680</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1680</link>
      <title>PR: Addressing HostNameInCertificate changes in native SNI - @lcheunglci</title>
      <description>&lt;p&gt;With some of the latest changes from SNI, the struct AuthProviderInfo includes a new field, i.e. &lt;code&gt;serverCertFileName&lt;/code&gt;, so this change is to make sure it is compatible.&lt;/p&gt;
</description>
      <pubDate>Mon, 25 Jul 2022 21:13:22 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1678</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1678</link>
      <title>PR: Change | Using default system protocols for TDS8 on Managed code - @JRahnama</title>
      <description>&lt;p&gt;This simple PR changes the previous behavior of the driver and omits using supported TLS protocols and uses the latest and the most secure TLS version on the client machine on managed code.&lt;/p&gt;
</description>
      <pubDate>Fri, 22 Jul 2022 16:20:48 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1677</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1677</link>
      <title>PR: Doc | Fix a link - @DavoudEshtehari</title>
      <description />
      <pubDate>Fri, 22 Jul 2022 00:01:04 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1676</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1676</link>
      <title>PR: [BrokenLinksH2] Fix path in link - @DhurataJ</title>
      <description>&lt;p&gt;Removing broken link, support link no longer works.&lt;/p&gt;
</description>
      <pubDate>Wed, 20 Jul 2022 14:39:01 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1673</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1673</link>
      <title>PR: Doc | Configurable Retry Logic doesn't support CommandBehavior.CloseConnection - @DavoudEshtehari</title>
      <description>&lt;p&gt;Closes #1454&lt;/p&gt;
</description>
      <pubDate>Tue, 19 Jul 2022 23:19:19 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1672</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1672</link>
      <title>PR: Fix small inconsistency between netcore and netfx - @David-Engel</title>
      <description>&lt;p&gt;One-line change. Netcore implementation is already correct.&lt;/p&gt;
</description>
      <pubDate>Mon, 18 Jul 2022 22:02:04 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1671</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1671</link>
      <title>PR: Changing Encoding UTF7 to ASCII for SSRP Broadcast - @Kaur-Parminder</title>
      <description>&lt;ul&gt;
&lt;li&gt;Changed the Encoding for SSRP Broadcast command to ASCII as it is used in other commands.&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Wed, 13 Jul 2022 16:27:37 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/SqlClient/pull/1666</guid>
      <link>https://github.com/dotnet/SqlClient/pull/1666</link>
      <title>PR: Doc | Fix typo - @DavoudEshtehari</title>
      <description />
      <pubDate>Thu, 30 Jun 2022 20:31:40 Z</pubDate>
    </item>
  </channel>
</rss>