<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>dotnet/roslyn Issues</title>
    <description>Issues from https://github.com/dotnet/roslyn, generated by https://github.com/meziantou/IssuesToRss/</description>
    <managingEditor>meziantousite@outlook.com</managingEditor>
    <ttl>60</ttl>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64243</guid>
      <link>https://github.com/dotnet/roslyn/issues/64243</link>
      <title>Issue: Building a .NET 7 RC1 Project with VS Causing CS8032 - @RehanSaeed</title>
      <description>&lt;p&gt;&lt;strong&gt;Version Used&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;.NET SDK 7.0.100-rc.1.22431.12
VS 17.4.0 Preview 2.1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Steps to Reproduce&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clone PR https://github.com/RehanSaeed/Serilog.Enrichers.Span/pull/187.&lt;/li&gt;
&lt;li&gt;Build solution using VS 17.4.0 Preview 2.1 or VS 17.3.0 which also fails.&lt;/li&gt;
&lt;li&gt;See the numerous &lt;code&gt;CS8032&lt;/code&gt; errors below.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Expected Behavior&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;The solution should compile with VS. It does compile when using the .NET CLI.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actual Behavior&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;The compilation fails with the errors below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1&amp;gt;CSC : error CS8032: An instance of analyzer Microsoft.CodeAnalysis.MakeFieldReadonly.MakeFieldReadonlyDiagnosticAnalyzer cannot be created from C:\Program Files\dotnet\sdk\7.0.100-rc.1.22431.12\Sdks\Microsoft.NET.Sdk\codestyle\cs\Microsoft.CodeAnalysis.CodeStyle.dll : Could not load file or assembly 'System.Collections.Immutable, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified..
1&amp;gt;CSC : error CS8032: An instance of analyzer Microsoft.CodeAnalysis.UseExplicitTupleName.UseExplicitTupleNameDiagnosticAnalyzer cannot be created from C:\Program Files\dotnet\sdk\7.0.100-rc.1.22431.12\Sdks\Microsoft.NET.Sdk\codestyle\cs\Microsoft.CodeAnalysis.CodeStyle.dll : Could not load file or assembly 'System.Collections.Immutable, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified..
1&amp;gt;CSC : error CS8032: An instance of analyzer Microsoft.CodeAnalysis.UseSystemHashCode.UseSystemHashCodeDiagnosticAnalyzer cannot be created from C:\Program Files\dotnet\sdk\7.0.100-rc.1.22431.12\Sdks\Microsoft.NET.Sdk\codestyle\cs\Microsoft.CodeAnalysis.CodeStyle.dll : Could not load file or assembly 'System.Collections.Immutable, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified..
1&amp;gt;CSC : error CS8032: An instance of analyzer Microsoft.CodeAnalysis.CodeStyle.CSharpFormattingAnalyzer cannot be created from C:\Program Files\dotnet\sdk\7.0.100-rc.1.22431.12\Sdks\Microsoft.NET.Sdk\codestyle\cs\Microsoft.CodeAnalysis.CSharp.CodeStyle.dll : Could not load file or assembly 'System.Collections.Immutable, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified..
...
omitted for brevity
...
1&amp;gt;Done building project &amp;quot;Serilog.Enrichers.Span.csproj&amp;quot; -- FAILED.
&lt;/code&gt;&lt;/pre&gt;
</description>
      <pubDate>Fri, 23 Sep 2022 14:09:18 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64239</guid>
      <link>https://github.com/dotnet/roslyn/issues/64239</link>
      <title>Issue: (a, b) is (int? x, int y) can be circumvented with (a, b) is (var x, var y) - @pstricks-fans</title>
      <description>&lt;p&gt;For&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;int? a0 = null; // or int? a0 = 0; 
int b0 = 0;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;the unallowed syntax&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;// bool s7 = (a0, b0) is (int? a7, int b7); // Compile error
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;can be circumvented with&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;bool s1 = (a0, b0) is (var a1, var b1);  // Interestingly, VS' Intellisense reveals that a1  is of type int? rather than int.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I know that &lt;code&gt;boxed is int? x&lt;/code&gt; is not allowed.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;static void Null()
{
    int? a0 = null; // &amp;lt;------- null
    int b0 = 0;

    bool s1 = (a0, b0) is (var a1, var b1);     // True
    bool s2 = (a0, b0) is (var a2, var b2) p2;  // True
    bool s3 = (a0, b0) is var (a3, b3);         // True
    // bool s4 = (a0, b0) is var (a4, b4) p4;   // Compile error
    bool s5 = (a0, b0) is (int a5, int b5);     // False
    bool s6= (a0, b0) is (int a6, int b6) p6;   // False
    // bool s7 = (a0, b0) is (int? a7, int b7); // Compile error
}

static void NonNull()
{
    int? a0 = 0; // &amp;lt;------- non-null
    int b0 = 0;

    bool s1 = (a0, b0) is (var a1, var b1);     // True
    bool s2 = (a0, b0) is (var a2, var b2) p2;  // True
    bool s3 = (a0, b0) is var (a3, b3);         // True
    // bool s4 = (a0, b0) is var (a4, b4) p4;   // Compile error
    bool s5 = (a0, b0) is (int a5, int b5);     // True
    bool s6 = (a0, b0) is (int a6, int b6) p6;   // True
    // bool s7 = (a0, b0) is (int? a7, int b7); // Compile error
}
&lt;/code&gt;&lt;/pre&gt;
</description>
      <pubDate>Fri, 23 Sep 2022 10:21:37 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64238</guid>
      <link>https://github.com/dotnet/roslyn/issues/64238</link>
      <title>Issue: static interface methods not emitted when interface marked ComImport - @mgravell</title>
      <description>&lt;p&gt;Not sure if this is a bug, an unexpected scenario, or a self-inflicted &amp;quot;just don't do that&amp;quot; thing, but: consider interface:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-c#"&gt;public interface IFoo
{
    void Bar();
    static void Blap() =&amp;gt; System.Console.WriteLine(&amp;quot;IFoo.Blap&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This works fine; we can call &lt;code&gt;IFoo.Blap();&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now imagine we decorate &lt;code&gt;IFoo&lt;/code&gt; with &lt;code&gt;[ComImport]&lt;/code&gt; and &lt;code&gt;[Guid]&lt;/code&gt; - &lt;em&gt;because we can&lt;/em&gt; (see below); at this point, the compiler &lt;em&gt;no longer emits the method body&lt;/em&gt;; instead of&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-msil"&gt;    .method public hidebysig static 
        void Blap () cil managed 
    {
        // Method begins at RVA 0x2067
        // Code size 11 (0xb)
        .maxstack 8

        IL_0000: ldstr &amp;quot;IFoo.Blap&amp;quot;
        IL_0005: call void [System.Console]System.Console::WriteLine(string)
        IL_000a: ret
    } // end of method IFoo::Blap
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;we get:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-msil"&gt;    .method public hidebysig static 
        void Blap () cil managed 
    {
    } // end of method IFoo::Blap
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If we run the code, we now get a &lt;code&gt;TypeLoadException&lt;/code&gt;, citing&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Could not load type 'IFoo' from assembly '(whatever)' because the method 'Blap' has no implementation (no RVA).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This seems ... unexpected. Not sure if this is an internal limitation due to some legacy feature of &lt;code&gt;[ComImport]&lt;/code&gt;, or ... what! And yes, I acknowledge that anything under &lt;code&gt;System.Runtime.InteropServices&lt;/code&gt; is basically &amp;quot;there are no rules here&amp;quot; territory.&lt;/p&gt;
&lt;p&gt;Proposals:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;make it emit the method body (presumably there's an &lt;code&gt;if&lt;/code&gt; test that is hitting an unanticipated combination of scenarios), or&lt;/li&gt;
&lt;li&gt;make it emit a compiler error/warning that this scenario is not going to work&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;p&gt;As for why we might want to do this... well, historically, before static interface methods existed, the following is a sneaky way to allow instantiation of interfaces (perhaps when the concrete type is generated and unobvious - think &amp;quot;service proxies&amp;quot; etc). A &lt;code&gt;static IFoo Create() {...}&lt;/code&gt; method would also have worked, but is both TFM and langver dependent, where-as &lt;code&gt;[CoClass]&lt;/code&gt; et al work &lt;em&gt;all&lt;/em&gt; the way back.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-c#"&gt;IFoo obj = new();
obj.Bar();
// IFoo.Blap();

[global::System.Runtime.InteropServices.ComImport]
[global::System.Runtime.InteropServices.Guid(&amp;quot;00112233-4455-6677-8899-aabbccddeeff&amp;quot;)]
[global::System.Runtime.InteropServices.CoClass(typeof(Foo))]
interface IFoo
{
    void Bar();
    // static void Blap() =&amp;gt; Console.WriteLine(&amp;quot;IFoo.Blap&amp;quot;);
}
class Foo : IFoo
{
    void IFoo.Bar() =&amp;gt; Console.WriteLine(&amp;quot;Foo.Bar&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://sharplab.io/#v2:EYLgtghglgdgPgAQEwEYCwAoTBJAYge3wAJ9gArIgXiJgFMB3ACgEoBuTUsgOgCEIAnFuwx5CvADYQADkMyYA2gHNxpCOJAgEKLgCUArjAAuUMLS7YjtfvikBlKwDcoAY1oBnLgGF8YbGCn4/IYAugrKquqa2vpGJmYWhlY29vxOrh4A4npQACaMAEQADIUoKEhIAMwVALQALLUArA3VAGwtAOzt1QAc3QCcfdUQEMDAzs45ObS0AGYz+cyhGEoqwGoaWroGxqbmltZ2ji7uXviekm5ujIYAnlK0+DOMBPjMi5iwifwzEK5EovhMABvTBEMFEBC1Ih8QRsUHgrQtCFQniSGTMKgAPghKD6BQBEmkC2EAF9MMgiC8iCB/i9gfCwZDaWIYSwsTi8fkXrwBMTMCSgA="&gt;Here's a sharplab of the same&lt;/a&gt; - see the reversed C#:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-c#"&gt;[ComImport]
[Guid(&amp;quot;00112233-4455-6677-8899-aabbccddeeff&amp;quot;)]
[CoClass(typeof(Foo))]
internal interface IFoo
{
    void Bar();

    static void Blap();
}
&lt;/code&gt;&lt;/pre&gt;
</description>
      <pubDate>Fri, 23 Sep 2022 09:48:30 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64237</guid>
      <link>https://github.com/dotnet/roslyn/issues/64237</link>
      <title>Issue: Code completion for mixed whitespace characters in raw string - @ufcpp</title>
      <description>&lt;p&gt;&lt;strong&gt;Version Used&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;Visual Studio Version 17.4.0 Preview 2.0
C# Tools   4.4.0-2.22430.14+2f760738cb92f32f50c981b68ba04ac3c8b7ee48&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Steps to Reproduce&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-cs"&gt;_ = &amp;quot;&amp;quot;&amp;quot;
            　All whitespace characters are the same as the closing line.
            　U+20, U+2000, U+2001, U+2002, U+2003, U+2004, U+2005, U+2006, U+2007, U+2008, U+2009, U+200A, U+3000
            　Please insert a new line here:
            　&amp;quot;&amp;quot;&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;https://sharplab.io/#v2:CYLg1APg+gBAvDARMgsAKBoAAJCABIIAJDABICAEgoASBgBIOAEgEASCQBIFAEgAAwCCANszAO4AWAlgC4CmAZwAOAQwDG/GOM6iAThIFzBMeVN6cpg0QFspolRqnjmAe0HcAdgHMYzK/wB06LHiJkqdegFUwAJgAGABoYX0CA4ND/CIBGELCIv3jogIBmZPCAFgyIgFYcgIA2AoB2AoAOAoBOAsZk1IiAlxwCEgoaBgAFZn4DKStBfjleVRhLfnY7BxhNOX4QZrc2zwZkRABudCA===&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Expected Behavior&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-cs"&gt;_ = &amp;quot;&amp;quot;&amp;quot;
            　All whitespace characters are the same as the closing line.
            　U+20, U+2000, U+2001, U+2002, U+2003, U+2004, U+2005, U+2006, U+2007, U+2008, U+2009, U+200A, U+3000
            　Please insert a new line here:
            　Whitespaces are copied from the closing line.
            　&amp;quot;&amp;quot;&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;https://sharplab.io/#v2:CYLg1APg+gBAvDARMgsAKBoAAJCABIIAJDABICAEgoASBgBIOAEgEASCQBIFAEgAAwCCANszAO4AWAlgC4CmAZwAOAQwDG/GOM6iAThIFzBMeVN6cpg0QFspolRqnjmAe0HcAdgHMYzK/wB06LHiJkqdegFUwAJgAGABoYX0CA4ND/CIBGELCIv3jogIBmZPCAFgyIgFYcgIA2AoB2AoAOAoBOAsZk1IiAlxwCEgoaBgAFZn4DKStBfjleVRhLfnY7BxhNOX4QZrc2zwYAdR4BEQkhVTnpU2FufmAYADM5Ux0YI2kzCxsp8ecMFvd2r2REAG4gA=&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actual Behavior&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-cs"&gt;_ = &amp;quot;&amp;quot;&amp;quot;
            　All whitespace characters are the same as the closing line.
            　U+20, U+2000, U+2001, U+2002, U+2003, U+2004, U+2005, U+2006, U+2007, U+2008, U+2009, U+200A, U+3000
            　Please insert a new line here:
             Visual Studio IDE inserts ASCII spaces (U+0020), which causes CS9003 Error.
            　&amp;quot;&amp;quot;&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;https://sharplab.io/#v2:CYLg1APg+gBAvDARMgsAKBoAAJCABIIAJDABICAEgoASBgBIOAEgEASCQBIFAEgAAwCCANszAO4AWAlgC4CmAZwAOAQwDG/GOM6iAThIFzBMeVN6cpg0QFspolRqnjmAe0HcAdgHMYzK/wB06LHiJkqdegFUwAJgAGABoYX0CA4ND/CIBGELCIv3jogIBmZPCAFgyIgFYcgIA2AoB2AoAOAoBOAsZk1IiAlxwCEgoaBgAFZn4DKStBfjleVRhLfnY7BxhNOX4QFxgl5ZWlgDVuQQBXUTYAZV4t4G5TGABJABEAURgBod4VRj2AYTOzmBEJIRgACl9EgIAShCXG4Mmkoi2gxUzz2VQiqRgVzkclMcmcGBa7naXmQiAA3EA===&lt;/p&gt;
&lt;p&gt;As a side note, &amp;quot;Convert to raw string&amp;quot; code fix can handle mixed whitespaces correctly:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/3760955/191884266-bc59379d-b851-4a34-a3b3-023956771cd8.png" alt="image" /&gt;&lt;/p&gt;
</description>
      <pubDate>Fri, 23 Sep 2022 02:59:01 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64236</guid>
      <link>https://github.com/dotnet/roslyn/issues/64236</link>
      <title>Issue: Add a new Location.Create overload for external file location with a different mappedLineSpan - @mavasani</title>
      <description>&lt;h2&gt;Background and Motivation&lt;/h2&gt;
&lt;p&gt;TypeScript would like to create &lt;code&gt;ExternalFileLocation&lt;/code&gt; for TS diagnostics reported on their secondary projection buffers, such that the diagnostic location has a different mapped location pointing to the primary buffer (separate file and line span), for display purposes, such as in the error list. The core story behind their request is as below:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The story is that currently projection script blocks in HTML and ASPX have the same URI as the original file, causing problems with LSP scenarios since the editor expects unique URIs for every buffer. This produces all kinds of buffer/snapshot errors, including diagnostic squiggles being shifted, exceptions from the LSP editor code, etc. Todd helped me get a fix for this that involves using a &lt;a href="https://devdiv.visualstudio.com/DevDiv/_git/WebTools/commit/587323f525ca72627c26d94799de5aa717481b06?refName=refs%2Fheads%2Fdev%2Ftoddgrun%2FAddContainedBufferTextDocumentName3"&gt;different name for these projection buffers&lt;/a&gt;, but then I had to &lt;a href="https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_git/TypeScript-VS/pullrequest/423511"&gt;update TypeScript-VS&lt;/a&gt; because all of our script block handling code has always assumed that projection buffers use the same file name as the original documents.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;And so now the update in TypeScript-VS is almost ready to go except for this issue with diagnostics, since Roslyn won't allow me to display diagnostics with the primary/mapped buffer's file name (since the workspace doesn't have a document with that name, it has been using the secondary buffer name).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Proposed API&lt;/h2&gt;
&lt;p&gt;Currently, &lt;code&gt;Location.Create&lt;/code&gt; public API for creating external file locations only supports providing a single lineSpan, which is used as both the actual line span and the mapped line span.&lt;/p&gt;
&lt;p&gt;https://github.com/dotnet/roslyn/blob/620a86b61272b794670bbbf5a425bfa7ec59ce91/src/Compilers/Core/Portable/Diagnostic/Location.cs#L168-L179&lt;/p&gt;
&lt;p&gt;https://github.com/dotnet/roslyn/blob/0f83d53179cd936842c743ad5dd48bc41cbbfb80/src/Compilers/Core/Portable/Diagnostic/ExternalFileLocation.cs#L35-L43&lt;/p&gt;
&lt;p&gt;The public API request is to add a new &lt;code&gt;Location.Create&lt;/code&gt; overload that supports mapped file + line span, either one of the below public APIs would suffice.&lt;/p&gt;
&lt;h3&gt;Proposal 1&lt;/h3&gt;
&lt;p&gt;Draft PR for this proposal: #64240&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-diff"&gt;namespace Microsoft.CodeAnalysis
{
     public abstract class Location
     {
+        public static Location Create(string filePath, TextSpan textSpan, LinePositionSpan lineSpan, string mappedFilePath, LinePositionSpan mappedLineSpan);
     }
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Proposal 2&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-diff"&gt;namespace Microsoft.CodeAnalysis
{
     public abstract class Location
     {
+        public static Location Create(TextSpan textSpan, FileLinePositionSpan lineFileSpan, FileLinePositionSpan mappedFileLineSpan);
     }
&lt;/code&gt;&lt;/pre&gt;
</description>
      <pubDate>Fri, 23 Sep 2022 01:58:03 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64230</guid>
      <link>https://github.com/dotnet/roslyn/issues/64230</link>
      <title>Issue: Raw string literals guide line is shifted when using tabs - @Youssef1313</title>
      <description>&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/31348972/191858349-452f309d-90da-4093-beb6-327e74e8faad.png" alt="image" /&gt;&lt;/p&gt;
&lt;p&gt;It should be a little bit to the right. This only reproduces when using tabs for indentation.&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 21:55:08 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64225</guid>
      <link>https://github.com/dotnet/roslyn/issues/64225</link>
      <title>Issue: StackOverflowException when compiling project with large (12MB) cs file and targeting net6.0 - @omellet</title>
      <description>&lt;p&gt;&lt;strong&gt;Version Used&lt;/strong&gt;: 4.3.0-3.22423.10 (b35bb0ba)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Steps to Reproduce&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Build project and use TargetFramework net6.0&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(A &lt;a href="https://sharplab.io/"&gt;sharplab&lt;/a&gt; repro is ideal for compiler/language issues whenever possible)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Expected Behavior&lt;/strong&gt;:
Builds in a couple seconds&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actual Behavior&lt;/strong&gt;:
Crashes with StackOverflowException:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BinaryExpressionSyntax.CreateRed(Microsoft.CodeAnalysis.SyntaxNode parent, int position) Line 3537	C#
 	Microsoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.SyntaxNode.GetRedAtZero&amp;lt;Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax&amp;gt;(ref Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax field) Line 196	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax.GetNodeSlot(int index) Line 1688	C#
 	Microsoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.ChildSyntaxList.ItemInternal(Microsoft.CodeAnalysis.SyntaxNode node, int index) Line 126	C#
 	System.Text.Json.SourceGeneration.dll!Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.GetMatchingNodes.__recurseChildren|7_3(Microsoft.CodeAnalysis.SyntaxNode node, ref System.Collections.Generic.ValueListBuilder&amp;lt;(string aliasName, string symbolName)&amp;gt; localAliases, ref System.Collections.Generic.ValueListBuilder&amp;lt;string&amp;gt; seenNames, ref System.Collections.Generic.ValueListBuilder&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt; results, ref System.Collections.Generic.ValueListBuilder&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt; attributeTargets, ref Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.&amp;lt;&amp;gt;c__DisplayClass7_0 value) Line 300	C#
 	System.Text.Json.SourceGeneration.dll!Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.GetMatchingNodes.__recurse|7_0(Microsoft.CodeAnalysis.SyntaxNode node, ref System.Collections.Generic.ValueListBuilder&amp;lt;(string aliasName, string symbolName)&amp;gt; localAliases, ref System.Collections.Generic.ValueListBuilder&amp;lt;string&amp;gt; seenNames, ref System.Collections.Generic.ValueListBuilder&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt; results, ref System.Collections.Generic.ValueListBuilder&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt; attributeTargets, ref Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.&amp;lt;&amp;gt;c__DisplayClass7_0 value) Line 288	C#
 	System.Text.Json.SourceGeneration.dll!Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.GetMatchingNodes.__recurseChildren|7_3(Microsoft.CodeAnalysis.SyntaxNode node, ref System.Collections.Generic.ValueListBuilder&amp;lt;(string aliasName, string symbolName)&amp;gt; localAliases, ref System.Collections.Generic.ValueListBuilder&amp;lt;string&amp;gt; seenNames, ref System.Collections.Generic.ValueListBuilder&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt; results, ref System.Collections.Generic.ValueListBuilder&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt; attributeTargets, ref Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.&amp;lt;&amp;gt;c__DisplayClass7_0 value) Line 300	C#
 	[The 2 frame(s) above this were repeated 2514 times]	
 	System.Text.Json.SourceGeneration.dll!Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.GetMatchingNodes.__recurse|7_0(Microsoft.CodeAnalysis.SyntaxNode node, ref System.Collections.Generic.ValueListBuilder&amp;lt;(string aliasName, string symbolName)&amp;gt; localAliases, ref System.Collections.Generic.ValueListBuilder&amp;lt;string&amp;gt; seenNames, ref System.Collections.Generic.ValueListBuilder&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt; results, ref System.Collections.Generic.ValueListBuilder&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt; attributeTargets, ref Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.&amp;lt;&amp;gt;c__DisplayClass7_0 value) Line 288	C#
 	System.Text.Json.SourceGeneration.dll!Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.GetMatchingNodes.__recurseChildren|7_3(Microsoft.CodeAnalysis.SyntaxNode node, ref System.Collections.Generic.ValueListBuilder&amp;lt;(string aliasName, string symbolName)&amp;gt; localAliases, ref System.Collections.Generic.ValueListBuilder&amp;lt;string&amp;gt; seenNames, ref System.Collections.Generic.ValueListBuilder&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt; results, ref System.Collections.Generic.ValueListBuilder&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt; attributeTargets, ref Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.&amp;lt;&amp;gt;c__DisplayClass7_0 value) Line 300	C#
 	System.Text.Json.SourceGeneration.dll!Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.GetMatchingNodes.__recurse|7_0(Microsoft.CodeAnalysis.SyntaxNode node, ref System.Collections.Generic.ValueListBuilder&amp;lt;(string aliasName, string symbolName)&amp;gt; localAliases, ref System.Collections.Generic.ValueListBuilder&amp;lt;string&amp;gt; seenNames, ref System.Collections.Generic.ValueListBuilder&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt; results, ref System.Collections.Generic.ValueListBuilder&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt; attributeTargets, ref Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.&amp;lt;&amp;gt;c__DisplayClass7_0 value) Line 255	C#
 	System.Text.Json.SourceGeneration.dll!Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.GetMatchingNodes.__recurseChildren|7_3(Microsoft.CodeAnalysis.SyntaxNode node, ref System.Collections.Generic.ValueListBuilder&amp;lt;(string aliasName, string symbolName)&amp;gt; localAliases, ref System.Collections.Generic.ValueListBuilder&amp;lt;string&amp;gt; seenNames, ref System.Collections.Generic.ValueListBuilder&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt; results, ref System.Collections.Generic.ValueListBuilder&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt; attributeTargets, ref Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.&amp;lt;&amp;gt;c__DisplayClass7_0 value) Line 300	C#
 	System.Text.Json.SourceGeneration.dll!Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.GetMatchingNodes.__recurse|7_0(Microsoft.CodeAnalysis.SyntaxNode node, ref System.Collections.Generic.ValueListBuilder&amp;lt;(string aliasName, string symbolName)&amp;gt; localAliases, ref System.Collections.Generic.ValueListBuilder&amp;lt;string&amp;gt; seenNames, ref System.Collections.Generic.ValueListBuilder&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt; results, ref System.Collections.Generic.ValueListBuilder&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt; attributeTargets, ref Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.&amp;lt;&amp;gt;c__DisplayClass7_0 value) Line 245	C#
 	System.Text.Json.SourceGeneration.dll!Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.GetMatchingNodes(Microsoft.CodeAnalysis.DotnetRuntime.Extensions.ISyntaxHelper syntaxHelper, Microsoft.CodeAnalysis.DotnetRuntime.Extensions.GlobalAliases globalAliases, Microsoft.CodeAnalysis.SyntaxTree syntaxTree, string name, System.Func&amp;lt;Microsoft.CodeAnalysis.SyntaxNode, System.Threading.CancellationToken, bool&amp;gt; predicate, System.Threading.CancellationToken cancellationToken) Line 218	C#
 	System.Text.Json.SourceGeneration.dll!Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.ForAttributeWithSimpleName.AnonymousMethod__5((Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.SyntaxTreeInfo Left, Microsoft.CodeAnalysis.DotnetRuntime.Extensions.GlobalAliases Right) tuple, System.Threading.CancellationToken c) Line 152	C#
 	Microsoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.UserFunctionExtensions.WrapUserFunction.AnonymousMethod__0((System.__Canon, System.__Canon) input, System.Threading.CancellationToken token) Line 31	C#
 	Microsoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.TransformNode&amp;lt;(Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.SyntaxTreeInfo, Microsoft.CodeAnalysis.DotnetRuntime.Extensions.GlobalAliases), (Microsoft.CodeAnalysis.SyntaxTree, System.Collections.Immutable.ImmutableArray&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt;)&amp;gt;..ctor.AnonymousMethod__0((Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.SyntaxTreeInfo, Microsoft.CodeAnalysis.DotnetRuntime.Extensions.GlobalAliases) i, System.Threading.CancellationToken token) Line 24	C#
 	Microsoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.TransformNode&amp;lt;(Microsoft.CodeAnalysis.DotnetRuntime.Extensions.SyntaxValueProviderExtensions.SyntaxTreeInfo, Microsoft.CodeAnalysis.DotnetRuntime.Extensions.GlobalAliases), (Microsoft.CodeAnalysis.SyntaxTree, System.Collections.Immutable.ImmutableArray&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt;)&amp;gt;.UpdateStateTable(Microsoft.CodeAnalysis.DriverStateTable.Builder builder, Microsoft.CodeAnalysis.NodeStateTable&amp;lt;(Microsoft.CodeAnalysis.SyntaxTree, System.Collections.Immutable.ImmutableArray&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt;)&amp;gt; previousTable, System.Threading.CancellationToken cancellationToken) Line 72	C#
 	Microsoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.DriverStateTable.Builder.GetLatestStateTableForNode&amp;lt;(Microsoft.CodeAnalysis.SyntaxTree, System.Collections.Immutable.ImmutableArray&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt;)&amp;gt;(Microsoft.CodeAnalysis.IIncrementalGeneratorNode&amp;lt;(Microsoft.CodeAnalysis.SyntaxTree, System.Collections.Immutable.ImmutableArray&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt;)&amp;gt; source) Line 59	C#
 	Microsoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.TransformNode&amp;lt;(Microsoft.CodeAnalysis.SyntaxTree, System.Collections.Immutable.ImmutableArray&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt;), (Microsoft.CodeAnalysis.SyntaxTree, System.Collections.Immutable.ImmutableArray&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt;)&amp;gt;.UpdateStateTable(Microsoft.CodeAnalysis.DriverStateTable.Builder builder, Microsoft.CodeAnalysis.NodeStateTable&amp;lt;(Microsoft.CodeAnalysis.SyntaxTree, System.Collections.Immutable.ImmutableArray&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt;)&amp;gt; previousTable, System.Threading.CancellationToken cancellationToken) Line 43	C#
 	Microsoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.DriverStateTable.Builder.GetLatestStateTableForNode&amp;lt;(Microsoft.CodeAnalysis.SyntaxTree, System.Collections.Immutable.ImmutableArray&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt;)&amp;gt;(Microsoft.CodeAnalysis.IIncrementalGeneratorNode&amp;lt;(Microsoft.CodeAnalysis.SyntaxTree, System.Collections.Immutable.ImmutableArray&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt;)&amp;gt; source) Line 59	C#
 	Microsoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.CombineNode&amp;lt;(Microsoft.CodeAnalysis.SyntaxTree, System.Collections.Immutable.ImmutableArray&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt;), Microsoft.CodeAnalysis.Compilation&amp;gt;.UpdateStateTable(Microsoft.CodeAnalysis.DriverStateTable.Builder graphState, Microsoft.CodeAnalysis.NodeStateTable&amp;lt;((Microsoft.CodeAnalysis.SyntaxTree, System.Collections.Immutable.ImmutableArray&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt;), Microsoft.CodeAnalysis.Compilation)&amp;gt; previousTable, System.Threading.CancellationToken cancellationToken) Line 32	C#
 	Microsoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.DriverStateTable.Builder.GetLatestStateTableForNode&amp;lt;((Microsoft.CodeAnalysis.SyntaxTree, System.Collections.Immutable.ImmutableArray&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt;), Microsoft.CodeAnalysis.Compilation)&amp;gt;(Microsoft.CodeAnalysis.IIncrementalGeneratorNode&amp;lt;((Microsoft.CodeAnalysis.SyntaxTree, System.Collections.Immutable.ImmutableArray&amp;lt;Microsoft.CodeAnalysis.SyntaxNode&amp;gt;), Microsoft.CodeAnalysis.Compilation)&amp;gt; source) Line 59	C#
&lt;/code&gt;&lt;/pre&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 20:22:34 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64224</guid>
      <link>https://github.com/dotnet/roslyn/issues/64224</link>
      <title>Issue: Ref and in parameters used in ternary vs if statement  - @NinoFloris</title>
      <description>&lt;p&gt;&lt;strong&gt;Version Used&lt;/strong&gt;:
C# compiler included in 7.0 rc1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Steps to Reproduce&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;https://sharplab.io/#v2:EYLgtghglgdgPgJwKYQCYHsYBsCeACAZwBcEBXAYyLwCEoBzAZRIqIFgAoAbw717w4C+HDsgBmhZpTwAxdOj4du7PngACAZjUBGAGwy5eAMLIIRJAAoAlDz5KVK1QHY8MJAHd96KwG4bvIcoKgbwa2nqy8sYoZuawNPRMZFLACZJE1sF4dvYhzq4eET5+eAEBKhyhqgBMRlnFqgAseADyANLmYvGMaQD8eCndSel1mSoAbhAIeKIGALz9qUN4UAQu6FQwpFhYeH0RAHRRphYDiSz7AGoQWKRIlnggnocmMZbeObzFZUEOTQCiCAQ6AQHSQ4logxYfVOaXu2RyEWmcl8oz4UHE5hhSxWaw2WywGQ+9hm8nmByOMSx5yuNzuKKJSCwBCQ/FRORJeDJcme0Qsby+giAA===&lt;/p&gt;
&lt;p&gt;Adding scoped to &lt;code&gt;Foo.Create(scoped in BigStruct bigStruct)&lt;/code&gt; does allow it to compile in both versions of the compiler.
It feels like the ternary case should produce the same errors but its a missed case in the analysis today.
(As an aside, the error messages are fairly obtuse, hopefully they'll still get some love to become a bit more actionable)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Expected Behavior&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;Either errors on both or on neither method.
This may be new behavior to make ref fields sound?
In that case it should probably error at both the ternary and if methods.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actual Behavior&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;An error appears on the &amp;quot;Error&amp;quot; method but not on the &amp;quot;OK&amp;quot; method.
Previous versions of the compiler (take sharplab x64 as an example) accept both methods.&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 19:57:15 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64220</guid>
      <link>https://github.com/dotnet/roslyn/issues/64220</link>
      <title>Issue: Consider passing checksum algorithm to TextLoader.LoadTextAndVersion - @tmat</title>
      <description>&lt;p&gt;... instead of storing it on a TextLoader and removing TryUpdateChecksumAlgorithm.&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 17:25:40 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64219</guid>
      <link>https://github.com/dotnet/roslyn/issues/64219</link>
      <title>Issue: Consider obsoleting/internally banning SyntaxTree.Encoding - @tmat</title>
      <description />
      <pubDate>Thu, 22 Sep 2022 17:22:09 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64218</guid>
      <link>https://github.com/dotnet/roslyn/issues/64218</link>
      <title>Issue: Missing ref safety error inside `foreach` - @AlekseyTs</title>
      <description>&lt;pre&gt;&lt;code&gt;class Program
{
    static void Main()
    {
        int i0 = 0;
        S s0 = new S(ref i0);
        {
            int i1 = 1;
            for (S s1 = new S(ref i1);;) {
                s0 = s1; // 1
                break;
            }
        }
        {
            int i1 = 1;
            foreach (S s2 in Enumerable1.Create(ref i1)) {
                s0 = s2; 
                break;
            }
        }
    }
}
ref struct S
{
    public S(ref int i) { }
}

class Enumerable1
{
    public static Enumerable1 Create(ref int p) =&amp;gt; default;
    public Enumerator1 GetEnumerator() =&amp;gt; default;
}

class Enumerator1
{
    public S Current =&amp;gt; throw null;
    public bool MoveNext() =&amp;gt; false;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Observed:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;error CS8352: Cannot use variable 's1' in this context because it may expose referenced variables outside of their declaration scope
                s0 = s1; // 1
                     ~~
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Expected one more error:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;error CS8352: Cannot use variable 's2' in this context because it may expose referenced variables outside of their declaration scope
                s0 = s2; 
                     ~~
&lt;/code&gt;&lt;/pre&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 16:57:34 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64217</guid>
      <link>https://github.com/dotnet/roslyn/issues/64217</link>
      <title>Issue: task+closure  - @rbwhitaker</title>
      <description>&lt;p&gt;&lt;strong&gt;Version Used&lt;/strong&gt;: .NET 6, Visual Studio
Microsoft Visual Studio Professional 2022
Version 17.0.5
VisualStudio.17.Release/17.0.5+32112.339
Microsoft .NET Framework
Version 4.8.04084
Installed Version: Professional&lt;/p&gt;
&lt;p&gt;Also tested by changing the project to target .NET 5 and saw the same behavior.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Steps to Reproduce&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;(1) Put the following code into a new .NET 6 project:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-cs"&gt;var theBool = false;
Task.Run(() =&amp;gt; { theBool = true; });
while (!theBool) { }
Console.WriteLine(&amp;quot;Done&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(2) Compile and run it in a debug (non-optimized) configuration.
(3) Compile and run it in a release (optimized) configuration.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Expected Behavior&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;The code eventually terminates in both debug (non-optimized) and release (optimized) builds. Or, minimally, there is the same observable behavior across both versions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actual Behavior&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;The code eventually completes in debug (non-optimized) builds, but in release mode, the &lt;code&gt;while&lt;/code&gt; loop never terminates.&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 16:48:04 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64215</guid>
      <link>https://github.com/dotnet/roslyn/issues/64215</link>
      <title>Issue: IDE0060 is reported incorrectly when parameters has nullable attributes attached - @marek-safar</title>
      <description>&lt;h3&gt;Analyzer&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Diagnostic ID&lt;/strong&gt;: IDE0060&lt;/p&gt;
&lt;h3&gt;Analyzer source&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Version&lt;/strong&gt;: 7.0.0&lt;/p&gt;
&lt;h3&gt;Describe the bug&lt;/h3&gt;
&lt;p&gt;IDE0060 message is issues for any partial method that uses nullable System.Diagnostics.CodeAnalysis attributes&lt;/p&gt;
&lt;h3&gt;Steps To Reproduce&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-c#"&gt;using System.Diagnostics.CodeAnalysis;

Class.Test();

partial class Class
{
    public static void Test ()
    {
        object o;
        M1 (ref o);
        M2 (ref o);
    }

    static partial void M1 ([NotNull] ref object i); // warning IDE0060: Remove unused parameter 'i'

    static partial void M2 (ref object i); // success
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Expected behavior&lt;/h3&gt;
&lt;p&gt;No warning to be reported&lt;/p&gt;
&lt;h3&gt;Actual behavior&lt;/h3&gt;
&lt;p&gt;IDE0060 warning is reported for &lt;code&gt;M1&lt;/code&gt; method&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 12:32:26 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64213</guid>
      <link>https://github.com/dotnet/roslyn/issues/64213</link>
      <title>Issue: Add support for reporting analyzer diagnostics in editorconfig files - @mavasani</title>
      <description>&lt;p&gt;@mgoertz-msft FYI that your original feature request has now been implemented for 16.8 P1 with https://github.com/dotnet/roslyn/pull/45076. I will keep this issue open to track exposing a similar API for analyzer config files.&lt;/p&gt;
&lt;p&gt;See open question in https://github.com/dotnet/roslyn/issues/44131#issuecomment-628722999
&lt;em&gt;Originally posted by @mavasani in https://github.com/dotnet/roslyn/issues/44131#issuecomment-658887799&lt;/em&gt;&lt;/p&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 09:09:40 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64208</guid>
      <link>https://github.com/dotnet/roslyn/issues/64208</link>
      <title>Issue: Suggestion: some way to suppress IDE0073 on a per-file basis - @jimmylewis</title>
      <description>&lt;!--
We welcome feature suggestions! We have a process to discuss and evaluate new feature suggestions. Here is an overview of our process [here](https://github.com/dotnet/roslyn/blob/main/docs/contributing/ide_design_process.md). This template will help us gather the information we need to start the review process.
--&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;Currently the analyzers can be configured with varying severity (e.g. via .editorconfig/.globalconfig) or suppressed (via &lt;code&gt;#pragma&lt;/code&gt; or &lt;code&gt;[SuppressMessage(...)]&lt;/code&gt;).  When a file_header_template is specified in .editorconfig, any files which do not conform to the template are flagged by the analyzer.  Under certain circumstances there are reasons to have a file deviate from the template, but the only way to suppress is via &lt;code&gt;#pragma&lt;/code&gt; (which has to come before the alternative header).&lt;/p&gt;
&lt;h2&gt;Background and Motivation&lt;/h2&gt;
&lt;p&gt;In my team's repo, we have a header specified in .editorconfig:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[*.cs]
file_header_template = Copyright (c) Microsoft Corporation. All rights reserved.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, some files have a prior copyright that needs to be preserved, e.g.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// Copyright (c) .NET Foundation. All rights reserved.
// Licensed under the Apache License, Version 2.0.
// Some parts copyright (c) Microsoft Corporation.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We want the severity for this analyzer to be visible (i.e. not &lt;code&gt;none&lt;/code&gt; or &lt;code&gt;silent&lt;/code&gt;), so that new files are always flagged when not compliant.  We also don't want errors on the files that have this alternative header.&lt;/p&gt;
&lt;p&gt;This can be suppressed, but it's &amp;quot;ugly&amp;quot; &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#pragma warning disable IDE0073 
// Copyright (c) .NET Foundation. All rights reserved.
// Licensed under the Apache License, Version 2.0.
// Some parts copyright (c) Microsoft Corporation.
#pragma warning restore IDE0073
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Proposed Feature&lt;/h2&gt;
&lt;p&gt;It would be nice to suppress this in a less ugly fashion using &lt;code&gt;[SuppressMessage(..., Justification = &amp;quot;Preserving copyrights&amp;quot;, Scope=&amp;quot;file&amp;quot;, Target=&amp;quot;path/to/file.cs&amp;quot;)]&lt;/code&gt; however SuppressMessage does not support a file scope.  This would allow us to list all the known files in one place (e.g. GlobalSuppressions.cs) and organize (sort, add comments) which files are expected to have non-standard headers.&lt;/p&gt;
&lt;h2&gt;Alternative Designs&lt;/h2&gt;
&lt;p&gt;An alternative list of headers to accept (but not propose) would allow these to be effectively silenced.  Newly generated files or files without a header should still only receive the default specified, e.g.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[*.cs]
file_header_template = Copyright (c) Microsoft Corporation. All rights reserved.
file_header_template_alt1 = Copyright (c) .NET Foundation. All rights reserved.
file_header_template_alt2 = ...
&lt;/code&gt;&lt;/pre&gt;
</description>
      <pubDate>Thu, 22 Sep 2022 02:29:38 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64198</guid>
      <link>https://github.com/dotnet/roslyn/issues/64198</link>
      <title>Issue: False IDE0059 message - @TahirAhmadov</title>
      <description>&lt;p&gt;&lt;strong&gt;Version Used&lt;/strong&gt;: VS 17.2.2, .NET 6 (but also previous versions)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Steps to Reproduce&lt;/strong&gt;:
&lt;a href="https://sharplab.io/#v2:EYLgxg9gTgpgtADwGwBYA0ATEBqAPgYgDsBXAG1IENhSYACGQqmgWACgABAJgEY32AGWu24A6AMIRyMMABcAlhEIBnANx9BwlGtZ8AzEM60xtAN5taFofvYpaAWQAUASlPnL7iMABW0mbVhKZH4AvLSEMADutAAyckoyADxyhDIAfM7a7u7CnEkpaLSePrIA/Km0SjAyAJIyMAC2mVkWcgBmtA4SypIwIgBKMBQYseHOtMGhAERUYJNObs1mrM3NAG4UULQbUBQAnuO0AIJQO7visBR11coyFIRgMA4yuwAOMBCtDskyTgUArPwnE0VpZKjU6vUDl8CnIIS5guVtnsRABlKoANQopGIj1hDRhQLYCyyAF9ie4YKRKuTLEsQe51ptSHEQh1qrF4k4AkEVLQAPR82jVAAiAFF+Pw/gBOGnNMG1BpQuQwuHjcrM+IiQ4YDBfOHA0lsAW0ESm2UVKoK+oOfgFbicXSE5aWMmsElAA==="&gt;SharpLab&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-cs"&gt;Action&amp;lt;int, object?&amp;gt; setItem;
if (Console.ReadLine() == &amp;quot;abc&amp;quot;)
{
    var array = Array.CreateInstance(typeof(int), 50);
    setItem = (i, item) =&amp;gt; array.SetValue(item, i);

}
else
{
    var list = (IList)result; // IDE0059
    setItem = (i, item) =&amp;gt; list.Add(item);
}
// ...
setItem(x, y);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Expected Behavior&lt;/strong&gt;: no IDE0059 message&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actual Behavior&lt;/strong&gt;: it reports IDE0059 message
&lt;img src="https://user-images.githubusercontent.com/16783987/191611356-853b388d-4478-4feb-b262-2ae7b8308724.png" alt="image" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Severity	Code	Description	Project	File	Line	Suppression State Message&lt;/code&gt;	
&lt;code&gt;IDE0059	Unnecessary assignment of a value to 'list'	Util	Read.cs	216	Active&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/16783987/191618431-bd7ea086-2c8b-4d9d-a82e-6cb25b61ab16.png" alt="image" /&gt;&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 21:12:17 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64196</guid>
      <link>https://github.com/dotnet/roslyn/issues/64196</link>
      <title>Issue: Switch pattern matching with throwing default returns object with wrong boxed datatype - @jesperasv</title>
      <description>&lt;p&gt;&lt;strong&gt;Version Used&lt;/strong&gt;: Any&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Steps to Reproduce&lt;/strong&gt;: &lt;a href="https://sharplab.io/#v2:CYLg1APgAgTAjAWAFDIARQMzpuuB2ZAbzVVM1wDZ0AWVAWQEMBLAOwAoo4AGAbQF1UDAE4BzAM4BKEqWJJS8+QDdhqIQFMxAVwA2AFwAyAexYjUAXlQBxNbrYBBAKItNAWwB0RkxIDc0hamUhVQ0dXQBJFl1zKxt7J1c3CN0fPwVA4K09ABE1AGNo61tHZ3cc3JSUOX8yOABONgASACJCdUyDYxEAX1RWkL1PETdCgBUATwAHNTYJLqaK6pr65r72sp7V0LLhm3GpmbmFxc5llrbQpI3zvSSd3T3p2fnfKtIu5D8JoSZlXTVKVCGABGACs8lFCnESqhdJM1FJXr1UvIoHgYXDUGIAO5MXS5AAWyJkRP8xQSg3MAD5UHB9AAaEkKMnuJJU1AwBmIxaoZluMpsjB0TnchQAfTZunxQkMWNQLDUsrsolcakiAHlNLo1QAzABKDBMagcAA9cmoJromMY2CwGC41IZtWxYVMJAjuV0Xgp3pUFORVa4efEXH5ZNyksLFoNI9Uyn4fV0gA="&gt;sharplab&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Expected Behavior&lt;/strong&gt;: That the object returned from the method have a boxed type that is the same type that was returned in the switch case.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actual Behavior&lt;/strong&gt;: The objects boxed type is not the same type that is returned. And in the example above is always System.Decimal.&lt;/p&gt;
&lt;p&gt;Workarounds is not throwing the exception on default. Or using a regular switch statement. Or if an other datatype than a number is returned from the switch, example System.String gives the correct types.&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 20:51:56 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64195</guid>
      <link>https://github.com/dotnet/roslyn/issues/64195</link>
      <title>Issue: Tests failing due to MessagePack on 32-bit debug builds only - @jasonmalinowski</title>
      <description />
      <pubDate>Wed, 21 Sep 2022 20:44:39 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64191</guid>
      <link>https://github.com/dotnet/roslyn/issues/64191</link>
      <title>Issue: Create email aliases for specific infraswat roles - @RikkiGibson</title>
      <description>&lt;p&gt;Currently the internal mlinfraswat DL is a firehose of different notifications. Many people on the DL just handle it by filtering the messages to folders that they never check.&lt;/p&gt;
&lt;p&gt;We're thinking that emails sent based on infra failures should only be sent to specific folks whose job (on-call rotation) it is to monitor those failures. However, making everyone configure their email rules properly, turn the rules on and off before and after their rotation, and so on, is fairly error prone.&lt;/p&gt;
&lt;p&gt;Let's set up an alias specifically for Tiger, and specifically for Mantis, have the role-appropriate notifications sent to each, and then change the members of the alias when the rotation changes.&lt;/p&gt;
&lt;p&gt;When we do this work, we can try to ensure that automatic emails generally are not sent to mlinfraswat. We can start reserving that alias for when a person wants to notify everyone of some infra problem.&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 18:45:00 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64189</guid>
      <link>https://github.com/dotnet/roslyn/issues/64189</link>
      <title>Issue: An assert is thrown for an erroneous code using out var - @AlekseyTs</title>
      <description>&lt;pre&gt;&lt;code&gt;        [Fact]
        public void Test()
        {
            var source =
@&amp;quot;
class Program
{
    static void Test(ref int x)
    {
        foreach (ref int[M(out var b)] a in new Enumerable2()) {
            b++;
        }
    }

    static int M(out int x) =&amp;gt; throw null;
}

class Enumerable2
{
    public Enumerator2 GetEnumerator() =&amp;gt; default;
}

class Enumerator2
{
    public ref int[] Current =&amp;gt; throw null;
    public bool MoveNext() =&amp;gt; false;
}
&amp;quot;;
            var comp = CreateCompilation(source);
            comp.VerifyDiagnostics(
                );
        }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An assert is thrown, which indicates that the out variable in this erroneous code is not handled properly:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;            Microsoft.CodeAnalysis.CSharp.UnitTests.RefFieldTests.Test [FAIL]
              System.InvalidOperationException : Assertion failed
              Stack Trace:
                src\Compilers\Test\Core\ThrowingTraceListener.cs(26,0): at Microsoft.CodeAnalysis.ThrowingTraceListener.Fail(String message, String detailMessage)
                   at System.Diagnostics.TraceInternal.Fail(String message, String detailMessage)
                   at System.Diagnostics.TraceInternal.TraceProvider.Fail(String message, String detailMessage)
                   at System.Diagnostics.Debug.Fail(String message, String detailMessage)
                   at System.Diagnostics.Debug.Assert(Boolean condition)
                src\Compilers\CSharp\Portable\Symbols\Source\SourceLocalSymbol.cs(878,0): at Microsoft.CodeAnalysis.CSharp.Symbols.SourceLocalSymbol.LocalSymbolWithEnclosingContext.InferTypeOfVarVariable(BindingDiagnosticBag diagnostics)
                src\Compilers\CSharp\Portable\Symbols\Source\SourceLocalSymbol.cs(425,0): at Microsoft.CodeAnalysis.CSharp.Symbols.SourceLocalSymbol.GetTypeSymbol()
                src\Compilers\CSharp\Portable\Symbols\Source\SourceLocalSymbol.cs(366,0): at Microsoft.CodeAnalysis.CSharp.Symbols.SourceLocalSymbol.get_TypeWithAnnotations()
                src\Compilers\CSharp\Portable\Symbols\SymbolExtensions.cs(513,0): at Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions.GetTypeOrReturnType(Symbol symbol, RefKind&amp;amp; refKind, TypeWithAnnotations&amp;amp; returnType, ImmutableArray`1&amp;amp; refCustomModifiers)
                src\Compilers\CSharp\Portable\Symbols\SymbolExtensions.cs(440,0): at Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions.GetTypeOrReturnType(Symbol symbol)
                src\Compilers\CSharp\Portable\FlowAnalysis\LocalDataFlowPass.cs(117,0): at Microsoft.CodeAnalysis.CSharp.LocalDataFlowPass`2.GetOrCreateSlot(Symbol symbol, Int32 containingSlot, Boolean forceSlotEvenIfEmpty, Boolean createIfMissing)
                src\Compilers\CSharp\Portable\FlowAnalysis\NullableWalker.cs(2008,0): at Microsoft.CodeAnalysis.CSharp.NullableWalker.GetOrCreateSlot(Symbol symbol, Int32 containingSlot, Boolean forceSlotEvenIfEmpty, Boolean createIfMissing)
                src\Compilers\CSharp\Portable\FlowAnalysis\NullableWalker.cs(3147,0): at Microsoft.CodeAnalysis.CSharp.NullableWalker.DeclareLocal(LocalSymbol local)
                src\Compilers\CSharp\Portable\FlowAnalysis\NullableWalker.cs(3160,0): at Microsoft.CodeAnalysis.CSharp.NullableWalker.DeclareLocals(ImmutableArray`1 locals)
                src\Compilers\CSharp\Portable\FlowAnalysis\NullableWalker.cs(3114,0): at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitForEachStatement(BoundForEachStatement node)
                src\Compilers\CSharp\Portable\Generated\BoundNodes.xml.Generated.cs(3773,0): at Microsoft.CodeAnalysis.CSharp.BoundForEachStatement.Accept(BoundTreeVisitor visitor)
                src\Compilers\CSharp\Portable\BoundTree\BoundTreeVisitors.cs(151,0): at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.Visit(BoundNode node)
                src\Compilers\CSharp\Portable\FlowAnalysis\AbstractFlowPass.cs(370,0): at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.VisitWithStackGuard(BoundNode node)
                src\Compilers\CSharp\Portable\FlowAnalysis\AbstractFlowPass.cs(354,0): at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.VisitAlways(BoundNode node)
                src\Compilers\CSharp\Portable\FlowAnalysis\AbstractFlowPass.cs(343,0): at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.Visit(BoundNode node)
                src\Compilers\CSharp\Portable\FlowAnalysis\NullableWalker.cs(3324,0): at Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(BoundNode node, Boolean expressionIsRead)
                src\Compilers\CSharp\Portable\FlowAnalysis\NullableWalker.cs(3307,0): at Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(BoundNode node)
                src\Compilers\CSharp\Portable\FlowAnalysis\AbstractFlowPass.cs(665,0): at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.VisitStatement(BoundStatement statement)
                src\Compilers\CSharp\Portable\FlowAnalysis\NullableWalker.cs(3333,0): at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitStatement(BoundStatement statement)
                src\Compilers\CSharp\Portable\FlowAnalysis\NullableWalker.cs(2911,0): at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitStatementsWithLocalFunctions(BoundBlock block)
                src\Compilers\CSharp\Portable\FlowAnalysis\NullableWalker.cs(2869,0): at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitBlock(BoundBlock node)
                src\Compilers\CSharp\Portable\Generated\BoundNodes.xml.Generated.cs(3028,0): at Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(BoundTreeVisitor visitor)
                src\Compilers\CSharp\Portable\BoundTree\BoundTreeVisitors.cs(151,0): at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.Visit(BoundNode node)
                src\Compilers\CSharp\Portable\FlowAnalysis\AbstractFlowPass.cs(370,0): at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.VisitWithStackGuard(BoundNode node)
                src\Compilers\CSharp\Portable\FlowAnalysis\AbstractFlowPass.cs(354,0): at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.VisitAlways(BoundNode node)
                src\Compilers\CSharp\Portable\FlowAnalysis\AbstractFlowPass.cs(343,0): at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.Visit(BoundNode node)
                src\Compilers\CSharp\Portable\FlowAnalysis\NullableWalker.cs(3324,0): at Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(BoundNode node, Boolean expressionIsRead)
                src\Compilers\CSharp\Portable\FlowAnalysis\NullableWalker.cs(3307,0): at Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(BoundNode node)
                src\Compilers\CSharp\Portable\FlowAnalysis\AbstractFlowPass.cs(3595,0): at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.VisitMethodBodies(BoundBlock blockBody, BoundBlock expressionBody)
                src\Compilers\CSharp\Portable\FlowAnalysis\AbstractFlowPass.cs(3488,0): at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.VisitNonConstructorMethodBody(BoundNonConstructorMethodBody node)
                src\Compilers\CSharp\Portable\Generated\BoundNodes.xml.Generated.cs(8195,0): at Microsoft.CodeAnalysis.CSharp.BoundNonConstructorMethodBody.Accept(BoundTreeVisitor visitor)
                src\Compilers\CSharp\Portable\BoundTree\BoundTreeVisitors.cs(151,0): at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.Visit(BoundNode node)
                src\Compilers\CSharp\Portable\FlowAnalysis\AbstractFlowPass.cs(370,0): at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.VisitWithStackGuard(BoundNode node)
                src\Compilers\CSharp\Portable\FlowAnalysis\AbstractFlowPass.cs(354,0): at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.VisitAlways(BoundNode node)
                src\Compilers\CSharp\Portable\FlowAnalysis\AbstractFlowPass.cs(343,0): at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.Visit(BoundNode node)
                src\Compilers\CSharp\Portable\FlowAnalysis\NullableWalker.cs(3324,0): at Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(BoundNode node, Boolean expressionIsRead)
                src\Compilers\CSharp\Portable\FlowAnalysis\NullableWalker.cs(3307,0): at Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(BoundNode node)
                src\Compilers\CSharp\Portable\FlowAnalysis\AbstractFlowPass.cs(425,0): at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.Scan(Boolean&amp;amp; badRegion)
                src\Compilers\CSharp\Portable\FlowAnalysis\NullableWalker.cs(566,0): at Microsoft.CodeAnalysis.CSharp.NullableWalker.Scan(Boolean&amp;amp; badRegion)
                src\Compilers\CSharp\Portable\FlowAnalysis\AbstractFlowPass.cs(448,0): at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.Analyze(Boolean&amp;amp; badRegion, Optional`1 initialState)
                src\Compilers\CSharp\Portable\FlowAnalysis\NullableWalker.cs(1696,0): at Microsoft.CodeAnalysis.CSharp.NullableWalker.Analyze(NullableWalker walker, Symbol symbol, DiagnosticBag diagnostics, Optional`1 initialState, Builder snapshotBuilderOpt, Boolean requiresAnalysis)
                src\Compilers\CSharp\Portable\FlowAnalysis\NullableWalker.cs(1670,0): at Microsoft.CodeAnalysis.CSharp.NullableWalker.Analyze(CSharpCompilation compilation, Symbol symbol, BoundNode node, Binder binder, Conversions conversions, DiagnosticBag diagnostics, Boolean useConstructorExitWarnings, Boolean useDelegateInvokeParameterTypes, Boolean useDelegateInvokeReturnType, MethodSymbol delegateInvokeMethodOpt, VariableState initialState, MethodSymbol baseOrThisInitial
                src\Compilers\CSharp\Portable\FlowAnalysis\NullableWalker.cs(1297,0): at Microsoft.CodeAnalysis.CSharp.NullableWalker.Analyze(CSharpCompilation compilation, MethodSymbol method, BoundNode node, DiagnosticBag diagnostics, Boolean useConstructorExitWarnings, VariableState initialNullableState, Boolean getFinalNullableState, MethodSymbol baseOrThisInitializer, VariableState&amp;amp; finalNullableState, Boolean requiresAnalysis)
                src\Compilers\CSharp\Portable\FlowAnalysis\NullableWalker.cs(1266,0): at Microsoft.CodeAnalysis.CSharp.NullableWalker.AnalyzeIfNeeded(CSharpCompilation compilation, MethodSymbol method, BoundNode node, DiagnosticBag diagnostics, Boolean useConstructorExitWarnings, VariableState initialNullableState, Boolean getFinalNullableState, MethodSymbol baseOrThisInitializer, VariableState&amp;amp; finalNullableState)
                src\Compilers\CSharp\Portable\Compiler\MethodCompiler.cs(1808,0): at Microsoft.CodeAnalysis.CSharp.MethodCompiler.BindMethodBody(MethodSymbol method, TypeCompilationState compilationState, BindingDiagnosticBag diagnostics, Boolean includeInitializersInBody, BoundNode initializersBody, Boolean reportNullableDiagnostics, ImportChain&amp;amp; importChain, Boolean&amp;amp; originalBodyNested, Boolean&amp;amp; prependedDefaultValueTypeConstructorInitializer, InitialState&amp;amp; forSemanticModel)
                src\Compilers\CSharp\Portable\Compiler\MethodCompiler.cs(1042,0): at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(MethodSymbol methodSymbol, Int32 methodOrdinal, ProcessedFieldInitializers&amp;amp; processedInitializers, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState)
                src\Compilers\CSharp\Portable\Compiler\MethodCompiler.cs(530,0): at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(NamedTypeSymbol containingType)
                src\Compilers\CSharp\Portable\Compiler\MethodCompiler.cs(424,0): at Microsoft.CodeAnalysis.CSharp.MethodCompiler.&amp;lt;&amp;gt;c__DisplayClass25_0.&amp;lt;CompileNamedTypeAsync&amp;gt;b__0()
                src\Compilers\Core\Portable\InternalUtilities\UICultureUtilities.cs(139,0): at Roslyn.Utilities.UICultureUtilities.&amp;lt;&amp;gt;c__DisplayClass5_0.&amp;lt;WithCurrentUICulture&amp;gt;b__0()
&lt;/code&gt;&lt;/pre&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 18:04:30 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64184</guid>
      <link>https://github.com/dotnet/roslyn/issues/64184</link>
      <title>Issue: Update vs to Version 17.4.0 Preview 2.0 from PREVIEW 1 cause errors in publish worker service - @danies8</title>
      <description>&lt;ol&gt;
&lt;li&gt;I updated vs to Version 17.4.0 Preview 2.0 from PREVIEW 1 cause errors&lt;/li&gt;
&lt;li&gt;When I publish worker service i got error:&lt;/li&gt;
&lt;li&gt;Build started...
1&amp;gt;------ Build started: Project: AutomationClient.API, Configuration: Release Any CPU ------
2&amp;gt;------ Build started: Project: AutomationClient.Shared, Configuration: Release Any CPU ------
3&amp;gt;------ Publish started: Project: AutomationClient.WorkerService, Configuration: Release Any CPU ------
3&amp;gt;Determining projects to restore...
3&amp;gt;Restored C:\Users\danis\Desktop\1\AutomationClient\AutomationClient.Shared\AutomationClient.Shared.csproj (in 795 ms).
3&amp;gt;Restored C:\Users\danis\Desktop\1\AutomationClient\AutomationClient.API\AutomationClient.API.csproj (in 795 ms).
3&amp;gt;1 of 3 projects are up-to-date for restore.
3&amp;gt;C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Current\Bin\Roslyn\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702,2008 /fullpaths /nostdlib+ /platform:x64 /errorreport:prompt /warn:6 /define:TRACE;RELEASE;NET;NET6_0;NETCOREAPP;NET5_0_OR_GREATER;NET6_0_OR_GREATER;NETCOREAPP1_0_OR_GREATER;NETCOREAPP1_1_OR_GREATER;NETCOREAPP2_0_OR_GREATER;NETCOREAPP2_1_OR_GREATER;NETCOREAPP2_2_OR_GREATER;NETCOREAPP3_0_OR_GREATER;NETCOREAPP3_1_OR_GREATER /errorendlocation /preferreduilang:en-US /highentropyva+ /nullable:enable /reference:C:\Users\danis.nuget\packages\autofac\6.3.0\lib\net5.0\Autofac.dll /reference:C:\Users\danis\Desktop\1\AutomationClient\AutomationClient.API\obj\Release\net6.0\win-x64\ref\AutomationClient.API.dll /reference:C:\Users\danis\Desktop\1\AutomationClient\AutomationClient.Shared\obj\Release\net6.0\win-x64\ref\AutomationClient.Shared.dll /reference:C:\Users\danis.nuget\packages\componentpro.common\7.2.238\lib\netstandard1.5\ComponentPro.Common.NetCore.dll /reference:C:\Users\danis.nuget\packages\componentpro.filesystem\7.2.238\lib\netstandard1.5\ComponentPro.FileSystem.NetCore.dll /reference:C:\Users\danis.nuget\packages\componentpro.ftp\7.2.238\lib\netstandard1.5\ComponentPro.Ftp.NetCore.dll /reference:C:\Users\danis.nuget\packages\componentpro.network\7.2.238\lib\netstandard1.5\ComponentPro.Network.NetCore.dll /reference:C:\Users\danis.nuget\packages\componentpro.sftp\7.2.238\lib\netstandard1.5\ComponentPro.Sftp.NetCore.dll /reference:C:\Users\danis.nuget\packages\dnsclient\1.4.0\lib\netstandard2.1\DnsClient.dll /reference:C:\Users\danis.nuget\packages\log4net\2.0.14\lib\netstandard2.0\log4net.dll /reference:C:\Users\danis.nuget\packages\microsoft.bcl.asyncinterfaces\5.0.0\lib\netstandard2.1\Microsoft.Bcl.AsyncInterfaces.dll /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\Microsoft.CSharp.dll&amp;quot; /reference:C:\Users\danis.nuget\packages\microsoft.extensions.configuration.abstractions\6.0.0\lib\netstandard2.0\Microsoft.Extensions.Configuration.Abstractions.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.configuration.binder\6.0.0\lib\netstandard2.0\Microsoft.Extensions.Configuration.Binder.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.configuration.commandline\6.0.0\lib\netstandard2.0\Microsoft.Extensions.Configuration.CommandLine.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.configuration\6.0.0\lib\netstandard2.0\Microsoft.Extensions.Configuration.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.configuration.environmentvariables\6.0.1\lib\netstandard2.0\Microsoft.Extensions.Configuration.EnvironmentVariables.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.configuration.fileextensions\6.0.0\lib\netstandard2.0\Microsoft.Extensions.Configuration.FileExtensions.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.configuration.json\6.0.0\lib\netstandard2.1\Microsoft.Extensions.Configuration.Json.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.configuration.usersecrets\6.0.1\lib\netstandard2.0\Microsoft.Extensions.Configuration.UserSecrets.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.dependencyinjection.abstractions\6.0.0\lib\net6.0\Microsoft.Extensions.DependencyInjection.Abstractions.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.dependencyinjection\6.0.0\lib\net6.0\Microsoft.Extensions.DependencyInjection.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.fileproviders.abstractions\6.0.0\lib\net6.0\Microsoft.Extensions.FileProviders.Abstractions.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.fileproviders.physical\6.0.0\lib\net6.0\Microsoft.Extensions.FileProviders.Physical.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.filesystemglobbing\6.0.0\lib\net6.0\Microsoft.Extensions.FileSystemGlobbing.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.hosting.abstractions\6.0.0\lib\netstandard2.1\Microsoft.Extensions.Hosting.Abstractions.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.hosting\6.0.1\lib\net6.0\Microsoft.Extensions.Hosting.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.hosting.systemd\5.0.1\lib\netstandard2.1\Microsoft.Extensions.Hosting.Systemd.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.hosting.windowsservices\5.0.1\lib\netstandard2.1\Microsoft.Extensions.Hosting.WindowsServices.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.logging.abstractions\6.0.0\lib\net6.0\Microsoft.Extensions.Logging.Abstractions.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.logging.configuration\6.0.0\lib\netstandard2.0\Microsoft.Extensions.Logging.Configuration.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.logging.console\6.0.0\lib\net6.0\Microsoft.Extensions.Logging.Console.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.logging.debug\6.0.0\lib\netstandard2.0\Microsoft.Extensions.Logging.Debug.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.logging\6.0.0\lib\netstandard2.1\Microsoft.Extensions.Logging.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.logging.eventlog\6.0.0\lib\netstandard2.0\Microsoft.Extensions.Logging.EventLog.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.logging.eventsource\6.0.0\lib\net6.0\Microsoft.Extensions.Logging.EventSource.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.logging.log4net.aspnetcore\6.1.0\lib\net6.0\Microsoft.Extensions.Logging.Log4Net.AspNetCore.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.objectpool\5.0.10\lib\net5.0\Microsoft.Extensions.ObjectPool.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.options.configurationextensions\6.0.0\lib\netstandard2.0\Microsoft.Extensions.Options.ConfigurationExtensions.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.options\6.0.0\lib\netstandard2.1\Microsoft.Extensions.Options.dll /reference:C:\Users\danis.nuget\packages\microsoft.extensions.primitives\6.0.0\lib\net6.0\Microsoft.Extensions.Primitives.dll /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\Microsoft.VisualBasic.Core.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\Microsoft.VisualBasic.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\Microsoft.Win32.Primitives.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\Microsoft.Win32.Registry.dll&amp;quot; /reference:C:\Users\danis.nuget\packages\mongodb.bson\2.14.1\lib\netstandard2.1\MongoDB.Bson.dll /reference:C:\Users\danis.nuget\packages\mongodb.driver.core\2.14.1\lib\netstandard2.1\MongoDB.Driver.Core.dll /reference:C:\Users\danis.nuget\packages\mongodb.driver\2.14.1\lib\netstandard2.1\MongoDB.Driver.dll /reference:C:\Users\danis.nuget\packages\mongocsharpdriver\2.14.1\lib\netstandard2.1\MongoDB.Driver.Legacy.dll /reference:C:\Users\danis.nuget\packages\mongodb.libmongocrypt\1.3.0\lib\netstandard2.1\MongoDB.Libmongocrypt.dll /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\mscorlib.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\netstandard.dll&amp;quot; /reference:C:\Users\danis.nuget\packages\newtonsoft.json\13.0.1\lib\netstandard2.0\Newtonsoft.Json.dll /reference:C:\Users\danis.nuget\packages\quartz\3.3.3\lib\netstandard2.0\Quartz.dll /reference:C:\Users\danis.nuget\packages\sharpcompress\0.30.1\lib\net5.0\SharpCompress.dll /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.AppContext.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Buffers.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Collections.Concurrent.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Collections.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Collections.Immutable.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Collections.NonGeneric.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Collections.Specialized.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.ComponentModel.Annotations.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.ComponentModel.DataAnnotations.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.ComponentModel.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.ComponentModel.EventBasedAsync.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.ComponentModel.Primitives.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.ComponentModel.TypeConverter.dll&amp;quot; /reference:C:\Users\danis.nuget\packages\system.configuration.configurationmanager\4.7.0\ref\netstandard2.0\System.Configuration.ConfigurationManager.dll /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Configuration.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Console.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Core.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Data.Common.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Data.DataSetExtensions.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Data.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Diagnostics.Contracts.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Diagnostics.Debug.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Diagnostics.DiagnosticSource.dll&amp;quot; /reference:C:\Users\danis.nuget\packages\system.diagnostics.eventlog\6.0.0\lib\net6.0\System.Diagnostics.EventLog.dll /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Diagnostics.FileVersionInfo.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Diagnostics.Process.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Diagnostics.StackTrace.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Diagnostics.TextWriterTraceListener.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Diagnostics.Tools.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Diagnostics.TraceSource.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Diagnostics.Tracing.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.dll&amp;quot; /reference:C:\Users\danis.nuget\packages\system.drawing.common\5.0.0\ref\netcoreapp3.0\System.Drawing.Common.dll /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Drawing.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Drawing.Primitives.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Dynamic.Runtime.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Formats.Asn1.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Globalization.Calendars.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Globalization.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Globalization.Extensions.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.IO.Compression.Brotli.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.IO.Compression.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.IO.Compression.FileSystem.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.IO.Compression.ZipFile.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.IO.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.IO.FileSystem.AccessControl.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.IO.FileSystem.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.IO.FileSystem.DriveInfo.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.IO.FileSystem.Primitives.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.IO.FileSystem.Watcher.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.IO.IsolatedStorage.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.IO.MemoryMappedFiles.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.IO.Pipes.AccessControl.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.IO.Pipes.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.IO.UnmanagedMemoryStream.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Linq.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Linq.Expressions.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Linq.Parallel.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Linq.Queryable.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Memory.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Net.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Net.Http.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Net.Http.Json.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Net.HttpListener.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Net.Mail.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Net.NameResolution.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Net.NetworkInformation.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Net.Ping.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Net.Primitives.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Net.Requests.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Net.Security.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Net.ServicePoint.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Net.Sockets.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Net.WebClient.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Net.WebHeaderCollection.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Net.WebProxy.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Net.WebSockets.Client.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Net.WebSockets.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Numerics.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Numerics.Vectors.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.ObjectModel.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Reflection.DispatchProxy.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Reflection.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Reflection.Emit.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Reflection.Emit.ILGeneration.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Reflection.Emit.Lightweight.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Reflection.Extensions.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Reflection.Metadata.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Reflection.Primitives.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Reflection.TypeExtensions.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Resources.Reader.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Resources.ResourceManager.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Resources.Writer.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Runtime.CompilerServices.Unsafe.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Runtime.CompilerServices.VisualC.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Runtime.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Runtime.Extensions.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Runtime.Handles.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Runtime.InteropServices.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Runtime.InteropServices.RuntimeInformation.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Runtime.Intrinsics.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Runtime.Loader.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Runtime.Numerics.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Runtime.Serialization.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Runtime.Serialization.Formatters.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Runtime.Serialization.Json.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Runtime.Serialization.Primitives.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Runtime.Serialization.Xml.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Security.AccessControl.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Security.Claims.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Security.Cryptography.Algorithms.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Security.Cryptography.Cng.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Security.Cryptography.Csp.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Security.Cryptography.Encoding.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Security.Cryptography.OpenSsl.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Security.Cryptography.Primitives.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Security.Cryptography.X509Certificates.dll&amp;quot; /reference:C:\Users\danis.nuget\packages\system.security.cryptography.xml\5.0.0\ref\netstandard2.0\System.Security.Cryptography.Xml.dll /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Security.dll&amp;quot; /reference:C:\Users\danis.nuget\packages\system.security.permissions\5.0.0\ref\net5.0\System.Security.Permissions.dll /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Security.Principal.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Security.Principal.Windows.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Security.SecureString.dll&amp;quot; /reference:C:\Users\danis.nuget\packages\system.servicemodel.primitives\4.9.0\ref\net6.0\System.ServiceModel.dll /reference:C:\Users\danis.nuget\packages\system.servicemodel.primitives\4.9.0\ref\net6.0\System.ServiceModel.Primitives.dll /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.ServiceModel.Web.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.ServiceProcess.dll&amp;quot; /reference:C:\Users\danis.nuget\packages\system.serviceprocess.servicecontroller\6.0.0\lib\net6.0\System.ServiceProcess.ServiceController.dll /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Text.Encoding.CodePages.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Text.Encoding.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Text.Encoding.Extensions.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Text.Encodings.Web.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Text.Json.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Text.RegularExpressions.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Threading.Channels.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Threading.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Threading.Overlapped.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Threading.Tasks.Dataflow.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Threading.Tasks.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Threading.Tasks.Extensions.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Threading.Tasks.Parallel.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Threading.Thread.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Threading.ThreadPool.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Threading.Timer.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Transactions.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Transactions.Local.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.ValueTuple.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Web.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Web.HttpUtility.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Windows.dll&amp;quot; /reference:C:\Users\danis.nuget\packages\system.windows.extensions\5.0.0\ref\netcoreapp3.0\System.Windows.Extensions.dll /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Xml.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Xml.Linq.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Xml.ReaderWriter.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Xml.Serialization.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Xml.XDocument.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Xml.XmlDocument.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Xml.XmlSerializer.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Xml.XPath.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\System.Xml.XPath.XDocument.dll&amp;quot; /reference:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\ref\net6.0\WindowsBase.dll&amp;quot; /debug+ /debug:portable /filealign:512 /optimize+ /out:obj\Release\net6.0\win-x64\AutomationClient.WorkerService.dll /refout:obj\Release\net6.0\win-x64\refint\AutomationClient.WorkerService.dll /target:exe /warnaserror- /utf8output /deterministic+ /langversion:10.0 /analyzerconfig:obj\Release\net6.0\win-x64\AutomationClient.WorkerService.GeneratedMSBuildEditorConfig.editorconfig /analyzerconfig:&amp;quot;C:\Program Files\dotnet\sdk\6.0.400\Sdks\Microsoft.NET.Sdk\analyzers\build\config\analysislevel_6_default.editorconfig&amp;quot; /analyzer:&amp;quot;C:\Program Files\dotnet\sdk\6.0.400\Sdks\Microsoft.NET.Sdk\targets..\analyzers\Microsoft.CodeAnalysis.CSharp.NetAnalyzers.dll&amp;quot; /analyzer:&amp;quot;C:\Program Files\dotnet\sdk\6.0.400\Sdks\Microsoft.NET.Sdk\targets..\analyzers\Microsoft.CodeAnalysis.NetAnalyzers.dll&amp;quot; /analyzer:C:\Users\danis.nuget\packages\microsoft.extensions.logging.abstractions\6.0.0\analyzers\dotnet\roslyn4.0\cs\Microsoft.Extensions.Logging.Generators.dll /analyzer:&amp;quot;C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.8\analyzers/dotnet/cs/System.Text.Json.SourceGeneration.dll&amp;quot; Program.cs Worker.cs WorkerHelper.cs obj\Release\net6.0\win-x64\AutomationClient.WorkerService.GlobalUsings.g.cs &amp;quot;obj\Release\net6.0\win-x64.NETCoreApp,Version=v6.0.AssemblyAttributes.cs&amp;quot; obj\Release\net6.0\win-x64\AutomationClient.WorkerService.AssemblyInfo.cs /warnaserror+:NU1605
3&amp;gt;Metadata file 'C:\Users\danis\Desktop\1\AutomationClient\AutomationClient.API\obj\Release\net6.0\win-x64\ref\AutomationClient.API.dll' could not be found
3&amp;gt;Metadata file 'C:\Users\danis\Desktop\1\AutomationClient\AutomationClient.Shared\obj\Release\net6.0\win-x64\ref\AutomationClient.Shared.dll' could not be found
========== Build: 2 succeeded, 0 failed, 1 up-to-date, 0 skipped ==========
========== Elapsed 00:06.733 ==========
========== Publish: 0 succeeded, 1 failed, 0 skipped ==========
========== Elapsed 00:06.733 ==========&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Added screencast:&lt;/p&gt;
&lt;p&gt;https://user-images.githubusercontent.com/1079689/191517713-a9ea0ee8-a9e9-494d-ad05-ae1d2c65ed29.mp4&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 13:33:57 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64182</guid>
      <link>https://github.com/dotnet/roslyn/issues/64182</link>
      <title>Issue: IntelliSense doesn't work for interface statics when dotting a type parameter - @Youssef1313</title>
      <description>&lt;p&gt;This is a bad code I introduced in https://github.com/dotnet/roslyn/pull/53942 :)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;abstractsOnly&lt;/code&gt; local should be removed altogether and the take the &amp;quot;false&amp;quot; code path for any condition relies on it.&lt;/p&gt;
&lt;p&gt;Repro from @Sergio0694:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/31348972/191501823-9192641e-ce08-4505-99b3-257f795e24ba.png" alt="image" /&gt;&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 12:19:12 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64178</guid>
      <link>https://github.com/dotnet/roslyn/issues/64178</link>
      <title>Issue: Compiler unnecessarily guards readonly object when locking. - @Zintom</title>
      <description>&lt;p&gt;&lt;strong&gt;Version Used&lt;/strong&gt;:
Latest&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Steps to Reproduce&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Declare a readonly object field &lt;code&gt;_locker&lt;/code&gt; and instantiate it with &lt;code&gt;new();&lt;/code&gt;
&lt;code&gt;private readonly object _locker = new();&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a method which locks on the &lt;code&gt;_locker&lt;/code&gt; variable.
&lt;code&gt;public void A() { lock(_locker) { } } &lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Observe the lowered code, you will see that in the method &lt;code&gt;A()&lt;/code&gt;, the compiler declares a new variable &lt;code&gt;locker&lt;/code&gt; and assigns &lt;code&gt;_locker&lt;/code&gt; to it, this is unnecessary as &lt;code&gt;_locker&lt;/code&gt; could only ever be re-assigned within the constructor of the class (due to it being &lt;code&gt;readonly&lt;/code&gt;), the constructor is synchronous and so even if &lt;code&gt;A()&lt;/code&gt; was called from the constructor, it is impossible for &lt;code&gt;_locker&lt;/code&gt; to be reassigned whilst &lt;code&gt;A()&lt;/code&gt; is executing.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Note: As a fellow programmer has pointed out, this optimization cannot be applied to &lt;code&gt;lock&lt;/code&gt;'s directly inside a constructor method body.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sharplab.io/#v2:D4AQzABCBMEMIQN4FgBQEMTZiAHATgJYBuAhgC4CmE+lpAJgPYB2ANgJ4SMBGAVpQGNyEAPqtGAgNaV8EALwRmlAO4AKAJQBubJh0Zw8DUj04IAQQ3b0mAL4mTBkABZzRlNdMRxU1WInT8dXdPDDsPCDCcNBsgA="&gt;Sharplab Example&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Expected Lowering Behavior&lt;/strong&gt;:
&lt;img src="https://user-images.githubusercontent.com/18383281/191479407-2ae6580f-dd6c-4aa5-9bad-b5c45f1be439.PNG" alt="compiler expected" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actual Lowering Behavior&lt;/strong&gt;:
&lt;img src="https://user-images.githubusercontent.com/18383281/191479474-be3aa5d6-a9a1-425e-a08b-95806a46188f.PNG" alt="compiler actual" /&gt;&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 10:20:07 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64177</guid>
      <link>https://github.com/dotnet/roslyn/issues/64177</link>
      <title>Issue: [Proposal] Extensions to `file_header_template` in EditorConfig - @Nirmal4G</title>
      <description>&lt;p&gt;With response to this &lt;a href="https://github.com/dotnet/roslyn/issues/33012#issuecomment-513940616"&gt;https://github.com/dotnet/roslyn/issues/33012#issuecomment-513940616&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;I don't know why the team didn't think to have a file path to &lt;code&gt;file_header_template&lt;/code&gt; that could contain all sorts of styled templates with or without custom comment variables or prefixes.&lt;/p&gt;
&lt;p&gt;For Example:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-editorconfig"&gt;# Custom Variables provided by the User.
copyright_year = 2022

# Custom Variables provided by the Tool.
license_type = MIT
license_file = License.md
license_owner = .NET Foundation

# File Header template comes from a file relative to the path of the EditorConfig file.
# File Header template file can be presented in its own data format like xml or json.
# This is especially useful for XML Doc comments.

[*.*]
file_header_template = tools/file-header.txt

[*.xml]
file_header_template = tools/file-header.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;An example of &lt;code&gt;file-header.txt&lt;/code&gt; having a simple comment&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Licensed to the {licenseOwner} under one or more agreements.
The {licenseOwner} licenses '{sourceFile}' file under the {licenseType} license.
See the '{licenseFile}' file in the project repository for more information.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;becomes...&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-c"&gt;// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses 'XBXCore.c' file under the MIT license.
// See the 'License.md' file in the repository root for more information.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and with multi-line options&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-editorconfig"&gt;# Options for multi-line comments
[*.xml]
file_header_multi_line = auto # [auto, true, false]
file_header_indent_style = infer # [infer (from 'indent_style'), space, tab]
file_header_indent_width = 4s # [infer (from 'indent_style'), number of spaces (4s) or tabs (1t)]
file_header_comment_tags_on_separate_line = true # [auto, true, false]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;becomes...&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;?xml encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;!--
    Licensed to the .NET Foundation under one or more agreements.
    The .NET Foundation licenses 'XBXCore.c' file under the MIT license.
    See the 'License.md' file in the repository root for more information.
--&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;An example of &lt;code&gt;file-header.xml&lt;/code&gt; having an XML Doc comment&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;copyright file=&amp;quot;{sourceFile}&amp;quot; company=&amp;quot;{licenseOwner}&amp;quot;&amp;gt;
  Licensed to the {licenseOwner} under one or more agreements.
  The {licenseOwner} licenses '{sourceFile}' file under the {licenseType} license.
  See the '{licenseFile}' file in the project repository for more information.
&amp;lt;/copyright&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;becomes...&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-c"&gt;// &amp;lt;copyright file=&amp;quot;XBXCore.c&amp;quot; company=&amp;quot;.NET Foundation&amp;quot;&amp;gt;
//   Licensed to the .NET Foundation under one or more agreements.
//   The .NET Foundation licenses 'XBXCore.c' file under the MIT license.
//   See the 'License.md' file in the repository root for more information.
// &amp;lt;/copyright&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and with multi-line options&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-editorconfig"&gt;# Options for multi-line comments
[*.xml]
file_header_multi_line = auto                        # auto, true, false
file_header_comment_tags_on_separate_line = auto     # auto, true, false
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;becomes...&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;?xml encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;!--
&amp;lt;copyright file=&amp;quot;XBXCore.c&amp;quot; company=&amp;quot;.NET Foundation&amp;quot;&amp;gt;
  Licensed to the .NET Foundation under one or more agreements.
  The .NET Foundation licenses 'XBXCore.c' file under the MIT license.
  See the 'License.md' file in the repository root for more information.
&amp;lt;/copyright&amp;gt;
--&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These are some of the things that I came up with &lt;strong&gt;just now&lt;/strong&gt; reading the proposal and issues people have faced with source file headers. This proposal covers almost all of the things that people have been asking in the EditorConfig repo and in issue #33012.&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 09:35:46 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64175</guid>
      <link>https://github.com/dotnet/roslyn/issues/64175</link>
      <title>Issue: Source generator exceptions should be shown as errors, rather than warnings - @Bosch-Eli-Black</title>
      <description>&lt;p&gt;&lt;strong&gt;Version Used&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;VS 2022&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Steps to Reproduce&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;When a source generator throws an exception, it shows up in the VS Error List pane as a warning, rather than an error.&lt;/p&gt;
&lt;p&gt;Our project's source generator is generating C# classes that our other code relies on. If the source generator fails to run, we end up with lots of errors, due to missing classes, but the actual exception that caused the source generator to fail to run is only shown as a warning.&lt;/p&gt;
&lt;p&gt;I'd like to propose that either:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Exceptions in source generators always be shown as errors.&lt;/li&gt;
&lt;li&gt;A mechanism be added that allows exceptions from specific source generators to be shown as errors.&lt;/li&gt;
&lt;li&gt;A mechanism be added that allows a source generator to be marked as &amp;quot;required&amp;quot;, and then exceptions from that source generator be shown as errors. (This might also be useful for https://github.com/dotnet/roslyn/issues/55518)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Expected Behavior&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;See above.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actual Behavior&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;See above.&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 09:30:44 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64174</guid>
      <link>https://github.com/dotnet/roslyn/issues/64174</link>
      <title>Issue: Lack of a fresh Roslyn version in the Mono project - @IvanZosimov</title>
      <description>&lt;h2&gt;Background and Motivation&lt;/h2&gt;
&lt;p&gt;Some functionality of the MVVM Toolkit (namely from version 8.0.0 preview1) is available only with Roslyn 4.x, but currently, Mono has only Roslyn &lt;a href="https://github.com/mono/msbuild/blob/xplat-master/eng/Versions.props#L13"&gt;3.9.0-5.21112.8&lt;/a&gt;. Is it possible to bump Roslyn's version in the Mono to a fresher one?&lt;/p&gt;
&lt;p&gt;The same issue was filed &lt;a href="https://github.com/mono/mono/issues/21529"&gt;here&lt;/a&gt; almost 2 months ago. Unfortunately, no response from the Mono team was received. I was suggested to create this issue here and I hope you can help us or redirect us to another team that is in charge of that issue.&lt;/p&gt;
&lt;!--
We welcome API proposals! We have a process to evaluate the value and shape of new APIs. There is an overview of our process [here](https://github.com/dotnet/roslyn/blob/main/docs/contributing/API%20Review%20Process.md). This template will help us gather the information we need to start the review process.
First, please describe the purpose and value of the new API here.
--&gt;
&lt;h2&gt;Steps to Reproduce&lt;/h2&gt;
&lt;ol start="0"&gt;
&lt;li&gt;Install the Mono&lt;/li&gt;
&lt;li&gt;Clone https://github.com/roughiain/PipelineTestSourceGenerators&lt;/li&gt;
&lt;li&gt;Restore Nuget packages&lt;/li&gt;
&lt;li&gt;Try to build the solution on macOS using &lt;code&gt;msbuild&lt;/code&gt; with these flags:
&lt;code&gt;msbuild /p:Configuration=Release /p:Platform=iPhone /t:Clean &amp;quot;./TestPipeline.sln&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;!--
You may drag &amp; drop the attachment (repro code/solution, screenshot, etc.) onto the issue.
--&gt;
&lt;h3&gt;Current Behavior&lt;/h3&gt;
&lt;!--
What is the current behavior?
--&gt;
&lt;p&gt;We've got the warning:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Users/runner/.nuget/packages/communitytoolkit.mvvm/8.0.0-preview3/buildTransitive/netstandard2.1/CommunityToolkit.Mvvm.targets(41,5): warning : The MVVM Toolkit source generators have been disabled on the current configuration, as they need Roslyn 4.x in order to work. The MVVM Toolkit will work just fine, but features relying on the source generators will not be available.&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Expected Behavior&lt;/h3&gt;
&lt;!--
Please describe the behaviour you are expecting
--&gt;
&lt;p&gt;No warnings, just a pure build.&lt;/p&gt;
&lt;h2&gt;On which platforms did you notice this&lt;/h2&gt;
&lt;p&gt;[x] macOS
[ ] Linux
[ ] Windows&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mono Version Used&lt;/strong&gt;:&lt;/p&gt;
&lt;!--
You can use `mono --version` or About dialog to obtain this information.
--&gt;
&lt;p&gt;&lt;a href="https://github.com/mono/mono/tags"&gt;6.12.0.182&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Stacktrace&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/roughiain/PipelineTestSourceGenerators/blob/main/pipelineoutput.txt"&gt;Link to the logs&lt;/a&gt;&lt;/p&gt;
&lt;!--
You can join us on Discord (https://aka.ms/dotnet-discord) in the #monovm channel to discuss your reported issue
--&gt;
&lt;h2&gt;Linked issues&lt;/h2&gt;
&lt;p&gt;https://github.com/actions/virtual-environments/issues/5782
https://github.com/mono/mono/issues/21529&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 08:23:16 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64170</guid>
      <link>https://github.com/dotnet/roslyn/issues/64170</link>
      <title>Issue: Confusing error message mentioning `WindowsRuntime` when trying to await an `IAsyncEnumerable` - @anthony-c-martin</title>
      <description>&lt;p&gt;&lt;strong&gt;Version Used&lt;/strong&gt;: .NET 6&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Steps to Reproduce&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clone https://github.com/Azure/bicep (can also use Codespaces to quickly get an environment).&lt;/li&gt;
&lt;li&gt;Try and create a new file at &lt;code&gt;src/Bicep.Core/Test.cs&lt;/code&gt; with following contents:
&lt;pre&gt;&lt;code class="language-csharp"&gt;using System;
using System.Threading.Tasks;
using System.Collections.Generic;

namespace Bicep.Core
{
    public class Test
    {
        public async Task Blah(IAsyncEnumerable&amp;lt;string&amp;gt; input)
        {
            await input;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;This totally perplexing error occurs (note - this is a x-platform project, building on Ubuntu):
&lt;img width="1042" alt="image" src="https://user-images.githubusercontent.com/38542602/191394780-6a5e637b-f799-4a60-aa3e-5c09735dbe65.png"&gt;&lt;/li&gt;
&lt;li&gt;Same error occurs with &lt;code&gt;dotnet build&lt;/code&gt;:
&lt;pre&gt;&lt;code&gt;/workspaces/bicep/src/Bicep.Core/Test.cs(13,13): error CS0012: The type 'IAsyncAction' is defined in an assembly that is not referenced. You must add a reference to assembly 'Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime'. [/workspaces/bicep/src/Bicep.Core/Bicep.Core.csproj]
/workspaces/bicep/src/Bicep.Core/Test.cs(13,13): error CS0012: The type 'IAsyncActionWithProgress&amp;lt;&amp;gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime'. [/workspaces/bicep/src/Bicep.Core/Bicep.Core.csproj]
/workspaces/bicep/src/Bicep.Core/Test.cs(13,13): error CS0012: The type 'IAsyncOperation&amp;lt;&amp;gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime'. [/workspaces/bicep/src/Bicep.Core/Bicep.Core.csproj]
/workspaces/bicep/src/Bicep.Core/Test.cs(13,13): error CS0012: The type 'IAsyncOperationWithProgress&amp;lt;,&amp;gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime'. [/workspaces/bicep/src/Bicep.Core/Bicep.Core.csproj]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Expected Behavior&lt;/strong&gt;: A clear message is displayed explaining that this type cannot be awaited.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actual Behavior&lt;/strong&gt;: See repro. Note that I wasn't able to repro this on https://sharplab.io/.&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 01:40:40 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64169</guid>
      <link>https://github.com/dotnet/roslyn/issues/64169</link>
      <title>Issue: [LSP] Document highlighting throws exception with F# files - @allisonchou</title>
      <description>&lt;p&gt;Since syntax trees aren't supported in F#, this line throws an exception upon opening a default F# console app:
https://github.com/dotnet/roslyn/blob/2297cd72e2224d140ba639d75432ddd0b0b5f0e7/src/Features/LanguageServer/Protocol/Handler/Highlights/DocumentHighlightHandler.cs#L72&lt;/p&gt;
&lt;p&gt;cc @dibarbet&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 00:17:08 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64168</guid>
      <link>https://github.com/dotnet/roslyn/issues/64168</link>
      <title>Issue: [LSP] Enable support for F# semantic classifications - @allisonchou</title>
      <description>&lt;p&gt;F# semantic tokens will currently not work with the LSP semantic tokens feature flag enabled. The primary hurdle is designing a way to retrieve F# classification types and include them in the Roslyn LSP semantic tokens legend.&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Sep 2022 00:13:02 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64162</guid>
      <link>https://github.com/dotnet/roslyn/issues/64162</link>
      <title>Issue: Source Generator - Visual representation of generated .g.cs files in Solution Explorer never updates - @KlausLoeffelmann</title>
      <description>&lt;p&gt;I am not entirely sure, if this is a bug or if there is an additional step involved, to mitigate this behavior. If it's not a bug, consider this to be feature request.&lt;/p&gt;
&lt;p&gt;This is about the visual representation of the source code files, which are generated by a source generator:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/9663150/191301253-02db6e22-6176-410e-9f83-7b2d0d87dea8.png" alt="image" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Versions Used&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 17.4.0 Preview 2.0&lt;/li&gt;
&lt;li&gt;Version 17.4.0 Preview 3.0 [32916.419.main]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Steps to Reproduce&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a Source Generator&lt;/li&gt;
&lt;li&gt;Use the Source Generator and generate source code.&lt;/li&gt;
&lt;li&gt;Open the generated .g.cs file which are listed under your generator in &lt;em&gt;Analyzers&lt;/em&gt; and &lt;em&gt;Dependencies&lt;/em&gt; in the solution explorer.&lt;/li&gt;
&lt;li&gt;Modify either the Source Generator or the files which are used for basing the generated code files on.&lt;/li&gt;
&lt;li&gt;Clean and Recompile the solution.&lt;/li&gt;
&lt;li&gt;Look at the generated .g.cs files, and notice that they have not changed, although the underlaying code has been changed and was also taken into account.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Expected Behavior&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;The generated .g.cs files should reflect the changes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actual Behavior&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;The generated files are the version which was current when the solution compiled the first time. Then, they never get (visually) updated.&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 23:38:48 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64157</guid>
      <link>https://github.com/dotnet/roslyn/issues/64157</link>
      <title>Issue: Files added via a code action aren't included in the project file - @CyrusNajmabadi</title>
      <description>&lt;p&gt;Steps to reproduce:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a TypeScript Blank Node.js Console application&lt;/li&gt;
&lt;li&gt;In app.ts, write the code &lt;code&gt;1234;&lt;/code&gt; in a new line.&lt;/li&gt;
&lt;li&gt;Select that line of code and invoke the &amp;quot;Move to a new file&amp;quot; code action.&lt;/li&gt;
&lt;li&gt;The code will be moved and the new file will be opened on the editor, but the file isn't added to the project file. Note how files added with &amp;quot;Add new item&amp;quot; are set to &amp;quot;TypeScript compile&amp;quot; in the .nsproj file:
&lt;ItemGroup&gt;
&lt;TypeScriptCompile Include="TypeScript1.ts"&gt;
&lt;SubType&gt;Code&lt;/SubType&gt;
&lt;/TypeScriptCompile&gt;
&lt;/ItemGroup&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The problem can also be reproduced in .NET framework applications.&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 22:11:08 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64155</guid>
      <link>https://github.com/dotnet/roslyn/issues/64155</link>
      <title>Issue: Change value escape of 'out' parameters to ReturnOnly - @RikkiGibson</title>
      <description>&lt;pre&gt;&lt;code class="language-cs"&gt;ref struct ByteContainer
{
    public byte B;
}

ref struct RefByteContainer
{
    public ref byte RB;

    public RefByteContainer(ref ByteContainer bc)
    {
        RB = ref bc.B; // CS9079: Cannot ref-assign 'bc.B' to 'RB' because 'bc.B' can only escape the current method through a return statement.
    }

    public RefByteContainer Create(ref ByteContainer bc)
    {
        return new RefByteContainer { RB = ref bc.B }; // ok
    }

    public void Create(ref ByteContainer bc, out RefByteContainer rbc)
    {
        rbc.RB = ref bc.B; // CS9079: Cannot ref-assign 'bc.B' to 'RB' because 'bc.B' can only escape the current method through a return statement.
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This shows that constructors end up being less &amp;quot;capable&amp;quot; than factory methods. We might want to adjust the rules for 'out' parameters (including 'this' in constructors). We will have to think through whether it would hurt other scenarios to do so. cc @jaredpar @cston&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 21:15:46 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64151</guid>
      <link>https://github.com/dotnet/roslyn/issues/64151</link>
      <title>Issue: [Automated] PRs inserted in VS build main-32920.147 - @allisonchou</title>
      <description>&lt;p&gt;&lt;a href="https://github.com/dotnet/roslyn/compare/0164a093ac5c0c1afa81f1f7414cdb8853b12467...fbdc03126486aadaec6fd255ccffd241a70aa3dc?w=1"&gt;View Complete Diff of Changes&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/pull/63447"&gt;Expose IsGeneratedCode boolean property on diagnostic analyzer contexts (63447)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/pull/64090"&gt;Add ReturnOnly scope (64090)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/pull/63991"&gt;Semantic snippets - Turn on experiment + turn off old snippets while new snippet experience is on (63991)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/pull/64126"&gt;Follow up of #63985 (64126)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/pull/64088"&gt;Enforce new grammar rules that &lt;code&gt;scoped&lt;/code&gt; keyword must be immediately followed by a type possibly “prefixed” by &lt;code&gt;ref&lt;/code&gt;/&lt;code&gt;ref readonly&lt;/code&gt;/&lt;code&gt;in&lt;/code&gt;/&lt;code&gt;out&lt;/code&gt;. (64088)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/pull/63545"&gt;Upgrade System.Memory to fully fix another MSBuild loading issue (63545)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/pull/64128"&gt;NRT enable our servicehub code. (64128)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/pull/64125"&gt;Set display window to false (64125)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/pull/62906"&gt;Minor code cleanup for options (62906)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/pull/62893"&gt;Remove unneeded SupportedDiagnostics override (62893)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/pull/64124"&gt;Move test RPS to artifacts directory (64124)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/pull/64120"&gt;Reorder a few things for clarity (64120)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/pull/63985"&gt;Add &lt;code&gt;MatchPriority.Deprioritize&lt;/code&gt; and tweak item selection (63985)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/pull/64097"&gt;Run speedometer automatically on PR validation (64097)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/pull/64110"&gt;Remove out of proc TodoList computation (64110)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/pull/64108"&gt;Use pattern matching for multi-kind checks (64108)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/pull/64016"&gt;Semantic Snippets - struct + a lot of abstracting (64016)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/pull/64004"&gt;Add &lt;code&gt;ILocalSymbol.IsForEach&lt;/code&gt; and &lt;code&gt;IsUsing&lt;/code&gt; (64004)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/pull/63901"&gt;fixed a comment to clarify correct error code in the test. fixes #63898 (63901)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/roslyn/pull/64106"&gt;Use patterns to simplify a few checks. (64106)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 20:58:03 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64146</guid>
      <link>https://github.com/dotnet/roslyn/issues/64146</link>
      <title>Issue: Add support for Go to Implementation - @jasonmalinowski</title>
      <description />
      <pubDate>Tue, 20 Sep 2022 17:19:23 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64145</guid>
      <link>https://github.com/dotnet/roslyn/issues/64145</link>
      <title>Issue: Invalid hyperlink in JavaScript diagnostics - @MariaSolOs</title>
      <description>&lt;p&gt;&lt;strong&gt;Version Used&lt;/strong&gt;: 4.4.0-2.22405.13&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Steps to Reproduce&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a new JavaScript file in Visual Studio.&lt;/li&gt;
&lt;li&gt;Write the following code inside: &lt;code&gt;var # = 0;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open the error list and click on the &lt;code&gt;TS1127&lt;/code&gt; hyperlink.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Expected Behavior&lt;/strong&gt;: The browser opens &lt;a href="https://learn.microsoft.com/en-us/visualstudio/ide/not-in-toc/default?f1url=%3FappId%3DDev16IDEF1%26l%3DEN-US%26k%3Dk(keywords_removed)%26rd%3Dtrue&amp;amp;view=vs-2022"&gt;this 404 page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actual Behavior&lt;/strong&gt;: Since the diagnostic doesn't include a valid documentation URL, the error code shouldn't be a hyperlink.&lt;/p&gt;
&lt;p&gt;This happens with all JavaScript and TypeScript errors, as well as with some C# errors (like CS8199).&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 16:34:23 Z</pubDate>
    </item>
    <item>
      <guid isPermaLink="true">https://github.com/dotnet/roslyn/issues/64144</guid>
      <link>https://github.com/dotnet/roslyn/issues/64144</link>
      <title>Issue: Semantic Snippets - Snippet Working List - @akhera99</title>
      <description>&lt;p&gt;Snippets List:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[x] prop&lt;/li&gt;
&lt;li&gt;[x] cw&lt;/li&gt;
&lt;li&gt;[x] if&lt;/li&gt;
&lt;li&gt;[x] foreach&lt;/li&gt;
&lt;li&gt;[x] for&lt;/li&gt;
&lt;li&gt;[ ] ctor&lt;/li&gt;
&lt;li&gt;[ ] try&lt;/li&gt;
&lt;li&gt;[ ] else&lt;/li&gt;
&lt;li&gt;[ ] #region&lt;/li&gt;
&lt;li&gt;[ ] switch&lt;/li&gt;
&lt;li&gt;[ ] while&lt;/li&gt;
&lt;li&gt;[ ] propfull&lt;/li&gt;
&lt;li&gt;[ ] using&lt;/li&gt;
&lt;li&gt;[ ] mbox&lt;/li&gt;
&lt;li&gt;[ ] #if&lt;/li&gt;
&lt;li&gt;[x] class&lt;/li&gt;
&lt;li&gt;[ ] do&lt;/li&gt;
&lt;li&gt;[ ] propdp&lt;/li&gt;
&lt;li&gt;[ ] svm&lt;/li&gt;
&lt;li&gt;[ ] propg&lt;/li&gt;
&lt;li&gt;[ ] enum&lt;/li&gt;
&lt;li&gt;[ ] lock&lt;/li&gt;
&lt;li&gt;[ ] namespace&lt;/li&gt;
&lt;li&gt;[ ] testm&lt;/li&gt;
&lt;li&gt;[ ] tryf&lt;/li&gt;
&lt;li&gt;[ ] forr&lt;/li&gt;
&lt;li&gt;[ ] propa&lt;/li&gt;
&lt;li&gt;[ ] equals&lt;/li&gt;
&lt;li&gt;[ ] exception&lt;/li&gt;
&lt;li&gt;[ ] log&lt;/li&gt;
&lt;li&gt;[x] struct&lt;/li&gt;
&lt;li&gt;[x] interface&lt;/li&gt;
&lt;li&gt;[ ] checked&lt;/li&gt;
&lt;li&gt;[ ] testc&lt;/li&gt;
&lt;li&gt;[ ] attribute&lt;/li&gt;
&lt;li&gt;[ ] unsafe&lt;/li&gt;
&lt;li&gt;[ ] ~&lt;/li&gt;
&lt;li&gt;[ ] indexer&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Tue, 20 Sep 2022 16:24:19 Z</pubDate>
    </item>
  </channel>
</rss>